

@warning platform_configuration.homepage_action_background: word 'homepage' seems not found in library
@warning contract_pay_item.pay_criteira: word 'criteira' seems not found in library
@warning supplementary_contract_pay_item.ajustment: word 'ajustment' seems not found in library
@warning object definition: yourong_project_book: word 'yourong' seems not found in library
@warning project_command_assignment.reciever: word 'reciever' seems not found in library
@warning material_record.daili_task_type: word 'daili' seems not found in library
@warning material_acceptance_application.meet_quanlity_standard: word 'quanlity' seems not found in library
@warning emplacement_application.company_website: word 'website' seems not found in library
@warning object definition: bpmn_model: word 'bpmn' seems not found in library
@warning change_request.commited: word 'commited' seems not found in library
@warning event_project_command.main_recievers: word 'recievers' seems not found in library
@warning event_acceptance_application.epc_manage_company: word 'epc' seems not found in library
@warning event_material_change_info.uom: word 'uom' seems not found in library
@warning event_show_all_type_step_one.field_longtext: word 'longtext' seems not found in library
@warning object definition: todo_list: word 'todo' seems not found in library
@warning object definition: serivce_vendor_attract_investment: word 'serivce' seems not found in library
@warning object definition: qualitiy_acceptance_files: word 'qualitiy' seems not found in library
@warning object definition: wechat_workapp_identity: word 'workapp' seems not found in library
@warning object definition: wechat_miniapp_identity: word 'miniapp' seems not found in library
@warning object definition: keypair_identity: word 'keypair' seems not found in library



=================Execute Report (Model Time 200630T1354) @Tue Jun 30 13:55:04 CST 2020, 282 objects and 2534 fields===========================
from file "/Users/jarryzhou/githome/web-code-generator/sky/modeling/microservice/yrzx.xml"


 processing: platform


 processing: mobile_app


 processing: page


 processing: page.page_type.page_type

Info: Add virtual field [pages(es)] to <page_type>
	page.page_type


 processing: page.mobile_app.mobile_app

Info: Add virtual field [pages(es)] to <mobile_app>
	page.mobile_app


 processing: page_type


 processing: page_type.mobile_app.mobile_app

Info: Add virtual field [page_types(es)] to <mobile_app>
	page_type.mobile_app


 processing: slide


 processing: slide.page.page

Info: Add virtual field [slides(es)] to <page>
	slide.page


 processing: ui_action


 processing: ui_action.page.page

Info: Add virtual field [ui_actions(es)] to <page>
	ui_action.page


 processing: section


 processing: section.page.page

Info: Add virtual field [sections(es)] to <page>
	section.page


 processing: section.article_category.article_category

Info: Add virtual field [sections(es)] to <article_category>
	section.article_category


 processing: platform_configuration


 processing: platform_configuration.platform.platform

Info: Add virtual field [platform_configurations(es)] to <platform>
	platform_configuration.platform


 processing: icon_configuration


 processing: icon_configuration.platform_configuration.platform_configuration

Info: Add virtual field [icon_configurations(es)] to <platform_configuration>
	icon_configuration.platform_configuration


 processing: contract_template


 processing: contract_template.contract_type.template_type

Info: Add virtual field [contract_templates(es)] to <contract_type>
	contract_template.template_type


 processing: contract_template.employee_nomination.submitter

Info: Add virtual field [contract_templates(es)] to <employee_nomination>
	contract_template.submitter


 processing: contract_template.platform.platform

Info: Add virtual field [contract_templates(es)] to <platform>
	contract_template.platform


 processing: contract_type


 processing: contract_type.contract_category.parent_category

Info: Add virtual field [contract_types(es)] to <contract_category>
	contract_type.parent_category


 processing: contract_type.platform.platform

Info: Add virtual field [contract_types(es)] to <platform>
	contract_type.platform


 processing: contract_category


 processing: contract_category.platform.platform

Info: Add virtual field [contract_categorys(es)] to <platform>
	contract_category.platform


 processing: contract_status


 processing: contract_status.platform.platform

Info: Add virtual field [contract_statuss(es)] to <platform>
	contract_status.platform


 processing: standard_contract


 processing: standard_contract.merchant.party_a

Info: Add virtual field [standard_contracts(es)] to <merchant>
	standard_contract.party_a


 processing: standard_contract.merchant.party_b

Info: Add virtual field [standard_contracts(es)] to <merchant>
	standard_contract.party_b


 processing: standard_contract.contract_status.contract_status

Info: Add virtual field [standard_contracts(es)] to <contract_status>
	standard_contract.contract_status


 processing: standard_contract.contract_type.contract_type

Info: Add virtual field [standard_contracts(es)] to <contract_type>
	standard_contract.contract_type


 processing: standard_contract.contract_template.contract_template

Info: Add virtual field [standard_contracts(es)] to <contract_template>
	standard_contract.contract_template


 processing: standard_contract.employee_nomination.submitter

Info: Add virtual field [standard_contracts(es)] to <employee_nomination>
	standard_contract.submitter


 processing: standard_contract.project.project

Info: Add virtual field [standard_contracts(es)] to <project>
	standard_contract.project


 processing: standard_contract.work_package.work_package

Info: Add virtual field [standard_contracts(es)] to <work_package>
	standard_contract.work_package


 processing: standard_contract.task.task

Info: Add virtual field [standard_contracts(es)] to <task>
	standard_contract.task


 processing: standard_contract.platform.platform

Info: Add virtual field [standard_contracts(es)] to <platform>
	standard_contract.platform


 processing: contract_pay_item


 processing: contract_pay_item.standard_contract.contract

Info: Add virtual field [contract_pay_items(es)] to <standard_contract>
	contract_pay_item.contract


 processing: contract_pay_item.merchant.payer

Info: Add virtual field [contract_pay_items(es)] to <merchant>
	contract_pay_item.payer


 processing: contract_pay_item.merchant.payee

Info: Add virtual field [contract_pay_items(es)] to <merchant>
	contract_pay_item.payee


 processing: contract_pay_item.pay_item_status.pay_item_status

Info: Add virtual field [contract_pay_items(es)] to <pay_item_status>
	contract_pay_item.pay_item_status


 processing: contract_pay_item.project_progress.project_progress

Info: Add virtual field [contract_pay_items(es)] to <project_progress>
	contract_pay_item.project_progress


 processing: supplementary_contract_type


 processing: supplementary_contract


 processing: supplementary_contract.standard_contract.contract

Info: Add virtual field [supplementary_contracts(es)] to <standard_contract>
	supplementary_contract.contract


 processing: supplementary_contract.supplementary_contract_type.type

Info: Add virtual field [supplementary_contracts(es)] to <supplementary_contract_type>
	supplementary_contract.type


 processing: supplementary_contract.contract_status.status

Info: Add virtual field [supplementary_contracts(es)] to <contract_status>
	supplementary_contract.status


 processing: supplementary_contract.employee_nomination.submitter

Info: Add virtual field [supplementary_contracts(es)] to <employee_nomination>
	supplementary_contract.submitter


 processing: supplementary_contract.platform.platform

Info: Add virtual field [supplementary_contracts(es)] to <platform>
	supplementary_contract.platform


 processing: supplementary_contract_pay_item


 processing: supplementary_contract_pay_item.contract_pay_item.contract_pay_item

Info: Add virtual field [supplementary_contract_pay_items(es)] to <contract_pay_item>
	supplementary_contract_pay_item.contract_pay_item


 processing: supplementary_contract_pay_item.supplementary_contract.supplementary_contract

Info: Add virtual field [supplementary_contract_pay_items(es)] to <supplementary_contract>
	supplementary_contract_pay_item.supplementary_contract


 processing: supplementary_contract_pay_item.merchant.payer

Info: Add virtual field [supplementary_contract_pay_items(es)] to <merchant>
	supplementary_contract_pay_item.payer


 processing: supplementary_contract_pay_item.merchant.payee

Info: Add virtual field [supplementary_contract_pay_items(es)] to <merchant>
	supplementary_contract_pay_item.payee


 processing: supplementary_contract_pay_item.audit_status.status

Info: Add virtual field [supplementary_contract_pay_items(es)] to <audit_status>
	supplementary_contract_pay_item.status


 processing: commission_pay_item


 processing: commission_pay_item.standard_contract.contract

Info: Add virtual field [commission_pay_items(es)] to <standard_contract>
	commission_pay_item.contract


 processing: commission_pay_item.contract_pay_item.contract_pay_item

Info: Add virtual field [commission_pay_items(es)] to <contract_pay_item>
	commission_pay_item.contract_pay_item


 processing: commission_pay_item.merchant.payer

Info: Add virtual field [commission_pay_items(es)] to <merchant>
	commission_pay_item.payer


 processing: commission_pay_item.merchant.payee

Info: Add virtual field [commission_pay_items(es)] to <merchant>
	commission_pay_item.payee


 processing: commission_pay_item.pay_item_status.pay_item_status

Info: Add virtual field [commission_pay_items(es)] to <pay_item_status>
	commission_pay_item.pay_item_status


 processing: pay_item_status


 processing: pay_item_status.platform.platform

Info: Add virtual field [pay_item_statuss(es)] to <platform>
	pay_item_status.platform


 processing: contract_review_record


 processing: contract_review_record.standard_contract.contract

Info: Add virtual field [contract_review_records(es)] to <standard_contract>
	contract_review_record.contract


 processing: contract_review_record.project_nomination.reviewer

Info: Add virtual field [contract_review_records(es)] to <project_nomination>
	contract_review_record.reviewer


 processing: contract_comments_record


 processing: contract_comments_record.project_nomination.submitter

Info: Add virtual field [contract_comments_records(es)] to <project_nomination>
	contract_comments_record.submitter


 processing: contract_comments_record.standard_contract.contract

Info: Add virtual field [contract_comments_records(es)] to <standard_contract>
	contract_comments_record.contract


 processing: contract_view_record


 processing: contract_view_record.standard_contract.contract

Info: Add virtual field [contract_view_records(es)] to <standard_contract>
	contract_view_record.contract


 processing: contract_view_record.merchant.merchant

Info: Add virtual field [contract_view_records(es)] to <merchant>
	contract_view_record.merchant


 processing: contract_operation_log


 processing: contract_operation_log.standard_contract.contract

Info: Add virtual field [contract_operation_logs(es)] to <standard_contract>
	contract_operation_log.contract


 processing: contract_operation_log.merchant.operator_merchant

Info: Add virtual field [contract_operation_logs(es)] to <merchant>
	contract_operation_log.operator_merchant


 processing: contract_payment_application


 processing: contract_payment_application.audit_status.status

Info: Add virtual field [contract_payment_applications(es)] to <audit_status>
	contract_payment_application.status


 processing: contract_payment_application.contract_pay_item.pay_item

Info: Add virtual field [contract_payment_applications(es)] to <contract_pay_item>
	contract_payment_application.pay_item


 processing: contract_payment_application.merchant.submitter

Info: Add virtual field [contract_payment_applications(es)] to <merchant>
	contract_payment_application.submitter


 processing: account_book_record


 processing: account_book_record.account_book.payer_account

Info: Add virtual field [account_book_records(es)] to <account_book>
	account_book_record.payer_account


 processing: account_book_record.account_book.payee_account

Info: Add virtual field [account_book_records(es)] to <account_book>
	account_book_record.payee_account


 processing: article_category


 processing: article_category.mobile_app.container

Info: Add virtual field [article_categorys(es)] to <mobile_app>
	article_category.container


 processing: article


 processing: article.article_category.category

Info: Add virtual field [articles(es)] to <article_category>
	article.category


 processing: article.mobile_app.container

Info: Add virtual field [articles(es)] to <mobile_app>
	article.container


 processing: article_paragraph


 processing: article_paragraph.article.article

Info: Add virtual field [article_paragraphs(es)] to <article>
	article_paragraph.article


 processing: welcome_slide


 processing: welcome_slide.page.show_in

Info: Add virtual field [welcome_slides(es)] to <page>
	welcome_slide.show_in


 processing: page_article


 processing: page_article.article.article

Info: Add virtual field [page_articles(es)] to <article>
	page_article.article


 processing: page_article.section.section

Info: Add virtual field [page_articles(es)] to <section>
	page_article.section


 processing: merchant_active_nomination


 processing: merchant_active_nomination.merchant.merchant

Info: Add virtual field [merchant_active_nominations(es)] to <merchant>
	merchant_active_nomination.merchant


 processing: merchant_active_nomination.employee_nomination.nomination

Info: Add virtual field [merchant_active_nominations(es)] to <employee_nomination>
	merchant_active_nomination.nomination


 processing: license_category


 processing: license_category.platform.platform

Info: Add virtual field [license_categorys(es)] to <platform>
	license_category.platform


 processing: license_industry_type


 processing: license_industry_type.platform.platform

Info: Add virtual field [license_industry_types(es)] to <platform>
	license_industry_type.platform


 processing: validate_status


 processing: validate_status.platform.platform

Info: Add virtual field [validate_statuss(es)] to <platform>
	validate_status.platform


 processing: authenticate_status


 processing: authenticate_status.platform.platform

Info: Add virtual field [authenticate_statuss(es)] to <platform>
	authenticate_status.platform


 processing: license


 processing: license.license_category.license_category

Info: Add virtual field [licenses(es)] to <license_category>
	license.license_category


 processing: license.license_industry_type.license_industry_type

Info: Add virtual field [licenses(es)] to <license_industry_type>
	license.license_industry_type


 processing: license.validate_status.validate_status

Info: Add virtual field [licenses(es)] to <validate_status>
	license.validate_status


 processing: license.merchant.owner

Info: Add virtual field [licenses(es)] to <merchant>
	license.owner


 processing: license.platform.platform

Info: Add virtual field [licenses(es)] to <platform>
	license.platform


 processing: license.employee_nomination.authenticator

Info: Add virtual field [licenses(es)] to <employee_nomination>
	license.authenticator


 processing: license.authenticate_status.authenticate_status

Info: Add virtual field [licenses(es)] to <authenticate_status>
	license.authenticate_status


 processing: merchant_base_type


 processing: merchant_base_type.platform.platform

Info: Add virtual field [merchant_base_types(es)] to <platform>
	merchant_base_type.platform


 processing: merchant_status


 processing: merchant_status.platform.platform

Info: Add virtual field [merchant_statuss(es)] to <platform>
	merchant_status.platform


 processing: merchant_type


 processing: merchant_type.platform.platform

Info: Add virtual field [merchant_types(es)] to <platform>
	merchant_type.platform


 processing: merchant


 processing: merchant.merchant_type.merchant_type

Info: Add virtual field [merchants(es)] to <merchant_type>
	merchant.merchant_type


 processing: merchant.merchant_base_type.merchant_base_type

Info: Add virtual field [merchants(es)] to <merchant_base_type>
	merchant.merchant_base_type


 processing: merchant.merchant_status.merchant_status

Info: Add virtual field [merchants(es)] to <merchant_status>
	merchant.merchant_status


 processing: merchant.platform.platform

Info: Add virtual field [merchants(es)] to <platform>
	merchant.platform


 processing: debit_card


 processing: debit_card.merchant.merchant

Info: Add virtual field [debit_cards(es)] to <merchant>
	debit_card.merchant


 processing: merchant_detail


 processing: merchant_detail.merchant.merchant

Info: Add virtual field [merchant_details(es)] to <merchant>
	merchant_detail.merchant


 processing: merchant_detail.industry_type.industry_type

Info: Add virtual field [merchant_details(es)] to <industry_type>
	merchant_detail.industry_type


 processing: merchant_detail.engineering_type.engineering_type

Info: Add virtual field [merchant_details(es)] to <engineering_type>
	merchant_detail.engineering_type


 processing: merchant_detail.career_type.career_type

Info: Add virtual field [merchant_details(es)] to <career_type>
	merchant_detail.career_type


 processing: industry_type


 processing: industry_type.platform.platform

Info: Add virtual field [industry_types(es)] to <platform>
	industry_type.platform


 processing: engineering_type


 processing: engineering_type.platform.platform

Info: Add virtual field [engineering_types(es)] to <platform>
	engineering_type.platform


 processing: career_type


 processing: career_type.platform.platform

Info: Add virtual field [career_types(es)] to <platform>
	career_type.platform


 processing: role


 processing: role.platform.platform

Info: Add virtual field [roles(es)] to <platform>
	role.platform


 processing: job


 processing: job.merchant.merchant

Info: Add virtual field [jobs(es)] to <merchant>
	job.merchant


 processing: job.platform.platform

Info: Add virtual field [jobs(es)] to <platform>
	job.platform


 processing: employee_nomination


 processing: employee_nomination.merchant.employee

Info: Add virtual field [employee_nominations(es)] to <merchant>
	employee_nomination.employee


 processing: employee_nomination.merchant.employer

Info: Add virtual field [employee_nominations(es)] to <merchant>
	employee_nomination.employer


 processing: employee_nomination.role.role

Info: Add virtual field [employee_nominations(es)] to <role>
	employee_nomination.role


 processing: employee_nomination.job.job

Info: Add virtual field [employee_nominations(es)] to <job>
	employee_nomination.job


 processing: employee_nomination.platform.platform

Info: Add virtual field [employee_nominations(es)] to <platform>
	employee_nomination.platform


 processing: task_status


 processing: task_status.platform.platform

Info: Add virtual field [task_statuss(es)] to <platform>
	task_status.platform


 processing: task


 processing: task.task_status.task_status

Info: Add virtual field [tasks(es)] to <task_status>
	task.task_status


 processing: task.work_package.work_package

Info: Add virtual field [tasks(es)] to <work_package>
	task.work_package


 processing: work_package


 processing: work_package.merchant.vendor

Info: Add virtual field [work_packages(es)] to <merchant>
	work_package.vendor


 processing: work_package.work_package_type.work_package_type

Info: Add virtual field [work_packages(es)] to <work_package_type>
	work_package.work_package_type


 processing: work_package.engineering_type.engineering_type

Info: Add virtual field [work_packages(es)] to <engineering_type>
	work_package.engineering_type


 processing: work_package.work_status.work_status

Info: Add virtual field [work_packages(es)] to <work_status>
	work_package.work_status


 processing: work_package.project.project

Info: Add virtual field [work_packages(es)] to <project>
	work_package.project


 processing: work_status


 processing: work_status.platform.platform

Info: Add virtual field [work_statuss(es)] to <platform>
	work_status.platform


 processing: work_package_type


 processing: work_package_type.platform.platform

Info: Add virtual field [work_package_types(es)] to <platform>
	work_package_type.platform


 processing: project


 processing: project.merchant.project_owner

Info: Add virtual field [projects(es)] to <merchant>
	project.project_owner


 processing: project.merchant.store

Info: Add virtual field [projects(es)] to <merchant>
	project.store


 processing: project.merchant.partner

Info: Add virtual field [projects(es)] to <merchant>
	project.partner


 processing: project.project_type.project_type

Info: Add virtual field [projects(es)] to <project_type>
	project.project_type


 processing: project.project_service_type.project_service_type

Info: Add virtual field [projects(es)] to <project_service_type>
	project.project_service_type


 processing: project.project_phase.project_phase

Info: Add virtual field [projects(es)] to <project_phase>
	project.project_phase


 processing: project.working_status.design_status

Info: Add virtual field [projects(es)] to <working_status>
	project.design_status


 processing: project.working_status.construction_status

Info: Add virtual field [projects(es)] to <working_status>
	project.construction_status


 processing: project.platform.platform

Info: Add virtual field [projects(es)] to <platform>
	project.platform


 processing: project_image


 processing: project_image.project.project

Info: Add virtual field [project_images(es)] to <project>
	project_image.project


 processing: project_type


 processing: project_type.platform.platform

Info: Add virtual field [project_types(es)] to <platform>
	project_type.platform


 processing: project_service_type


 processing: project_service_type.platform.platform

Info: Add virtual field [project_service_types(es)] to <platform>
	project_service_type.platform


 processing: project_phase


 processing: project_phase.platform.platform

Info: Add virtual field [project_phases(es)] to <platform>
	project_phase.platform


 processing: working_status


 processing: working_status.platform.platform

Info: Add virtual field [working_statuss(es)] to <platform>
	working_status.platform


 processing: project_organization_type


 processing: project_organization_type.platform.platform

Info: Add virtual field [project_organization_types(es)] to <platform>
	project_organization_type.platform


 processing: project_nomination


 processing: project_nomination.project_organization_type.type

Info: Add virtual field [project_nominations(es)] to <project_organization_type>
	project_nomination.type


 processing: project_nomination.employee_nomination.worker

Info: Add virtual field [project_nominations(es)] to <employee_nomination>
	project_nomination.worker


 processing: project_nomination.project_role.project_role

Info: Add virtual field [project_nominations(es)] to <project_role>
	project_nomination.project_role


 processing: project_nomination.project.project

Info: Add virtual field [project_nominations(es)] to <project>
	project_nomination.project


 processing: project_nomination.work_package.work_package

Info: Add virtual field [project_nominations(es)] to <work_package>
	project_nomination.work_package


 processing: project_role


 processing: project_role.platform.platform

Info: Add virtual field [project_roles(es)] to <platform>
	project_role.platform


 processing: project_progress_status


 processing: project_progress_status.platform.platform

Info: Add virtual field [project_progress_statuss(es)] to <platform>
	project_progress_status.platform


 processing: project_progress


 processing: project_progress.project_progress_status.status

Info: Add virtual field [project_progresss(es)] to <project_progress_status>
	project_progress.status


 processing: project_progress.project.project

Info: Add virtual field [project_progresss(es)] to <project>
	project_progress.project


 processing: project_progress.project_phase.project_phase

Info: Add virtual field [project_progresss(es)] to <project_phase>
	project_progress.project_phase


 processing: daily_task_category


 processing: daily_task_category.platform.platform

Info: Add virtual field [daily_task_categorys(es)] to <platform>
	daily_task_category.platform


 processing: daily_task_type


 processing: daily_task_type.daily_task_category.category

Info: Add virtual field [daily_task_types(es)] to <daily_task_category>
	daily_task_type.category


 processing: daily_task_type.platform.platform

Info: Add virtual field [daily_task_types(es)] to <platform>
	daily_task_type.platform


 processing: daily_task_second_type


 processing: daily_task_second_type.daily_task_type.parent

Info: Add virtual field [daily_task_second_types(es)] to <daily_task_type>
	daily_task_second_type.parent


 processing: daily_task_second_type.platform.platform

Info: Add virtual field [daily_task_second_types(es)] to <platform>
	daily_task_second_type.platform


 processing: daily_task_third_type


 processing: daily_task_third_type.daily_task_second_type.parent

Info: Add virtual field [daily_task_third_types(es)] to <daily_task_second_type>
	daily_task_third_type.parent


 processing: daily_task_third_type.platform.platform

Info: Add virtual field [daily_task_third_types(es)] to <platform>
	daily_task_third_type.platform


 processing: daily_task_template


 processing: daily_task_template.daily_task_type.daily_task_type

Info: Add virtual field [daily_task_templates(es)] to <daily_task_type>
	daily_task_template.daily_task_type


 processing: daily_task_template.employee_nomination.creator

Info: Add virtual field [daily_task_templates(es)] to <employee_nomination>
	daily_task_template.creator


 processing: daily_task_template.platform.platform

Info: Add virtual field [daily_task_templates(es)] to <platform>
	daily_task_template.platform


 processing: project_material_type_configuration


 processing: project_material_type_configuration.project_material_type.type

Info: Add virtual field [project_material_type_configurations(es)] to <project_material_type>
	project_material_type_configuration.type


 processing: project_material_type_configuration.project.project

Info: Add virtual field [project_material_type_configurations(es)] to <project>
	project_material_type_configuration.project


 processing: project_material_type


 processing: project_material_type.project_material_parent_type.parent

Info: Add virtual field [project_material_types(es)] to <project_material_parent_type>
	project_material_type.parent


 processing: project_material_type.platform.platform

Info: Add virtual field [project_material_types(es)] to <platform>
	project_material_type.platform


 processing: project_material_parent_type


 processing: project_material_parent_type.platform.platform

Info: Add virtual field [project_material_parent_types(es)] to <platform>
	project_material_parent_type.platform


 processing: project_material_review_status


 processing: project_material_review_status.platform.platform

Info: Add virtual field [project_material_review_statuss(es)] to <platform>
	project_material_review_status.platform


 processing: material_review_result


 processing: material_review_result.platform.platform

Info: Add virtual field [material_review_results(es)] to <platform>
	material_review_result.platform


 processing: project_material


 processing: project_material.daily_task_type.daily_task_type

Info: Add virtual field [project_materials(es)] to <daily_task_type>
	project_material.daily_task_type


 processing: project_material.daily_task_template.daily_task_template

Info: Add virtual field [project_materials(es)] to <daily_task_template>
	project_material.daily_task_template


 processing: project_material.project_material_type.project_material_type

Info: Add virtual field [project_materials(es)] to <project_material_type>
	project_material.project_material_type


 processing: project_material.employee_nomination.material_submitter

Info: Add virtual field [project_materials(es)] to <employee_nomination>
	project_material.material_submitter


 processing: project_material.project.project

Info: Add virtual field [project_materials(es)] to <project>
	project_material.project


 processing: project_material.material_review_result.material_review_result

Info: Add virtual field [project_materials(es)] to <material_review_result>
	project_material.material_review_result


 processing: project_material_review_record


 processing: project_material_review_record.project_material_review_record_status.status

Info: Add virtual field [project_material_review_records(es)] to <project_material_review_record_status>
	project_material_review_record.status


 processing: project_material_review_record.project_material.project_material

Info: Add virtual field [project_material_review_records(es)] to <project_material>
	project_material_review_record.project_material


 processing: project_material_review_record.project_nomination.reviewer

Info: Add virtual field [project_material_review_records(es)] to <project_nomination>
	project_material_review_record.reviewer


 processing: project_material_review_record_status


 processing: project_material_comments_record


 processing: project_material_comments_record.project_nomination.submitter

Info: Add virtual field [project_material_comments_records(es)] to <project_nomination>
	project_material_comments_record.submitter


 processing: project_material_comments_record.project_material.project_material

Info: Add virtual field [project_material_comments_records(es)] to <project_material>
	project_material_comments_record.project_material


 processing: project_material_view_record


 processing: project_material_view_record.project_material.project_material

Info: Add virtual field [project_material_view_records(es)] to <project_material>
	project_material_view_record.project_material


 processing: project_material_view_record.merchant.merchant

Info: Add virtual field [project_material_view_records(es)] to <merchant>
	project_material_view_record.merchant


 processing: project_material_operation_log


 processing: project_material_operation_log.project_material.project_material

Info: Add virtual field [project_material_operation_logs(es)] to <project_material>
	project_material_operation_log.project_material


 processing: project_material_operation_log.merchant.operator_merchant

Info: Add virtual field [project_material_operation_logs(es)] to <merchant>
	project_material_operation_log.operator_merchant


 processing: yourong_project_book


 processing: yourong_project_book.yourong_project_book_type.type

Info: Add virtual field [yourong_project_books(es)] to <yourong_project_book_type>
	yourong_project_book.type


 processing: yourong_project_book.yourong_project_book_status.status

Info: Add virtual field [yourong_project_books(es)] to <yourong_project_book_status>
	yourong_project_book.status


 processing: yourong_project_book.project.project

Info: Add virtual field [yourong_project_books(es)] to <project>
	yourong_project_book.project


 processing: yourong_project_book_status


 processing: yourong_project_book_status.platform.platform

Info: Add virtual field [yourong_project_book_statuss(es)] to <platform>
	yourong_project_book_status.platform


 processing: yourong_project_book_type


 processing: yourong_project_book_type.platform.platform

Info: Add virtual field [yourong_project_book_types(es)] to <platform>
	yourong_project_book_type.platform


 processing: project_acceptance


 processing: project_acceptance.project.project

Info: Add virtual field [project_acceptances(es)] to <project>
	project_acceptance.project


 processing: project_acceptance.merchant.property_owner

Info: Add virtual field [project_acceptances(es)] to <merchant>
	project_acceptance.property_owner


 processing: project_acceptance.daily_task_type.daily_task_type

Info: Add virtual field [project_acceptances(es)] to <daily_task_type>
	project_acceptance.daily_task_type


 processing: project_acceptance.project_nomination.application_unit

Info: Add virtual field [project_acceptances(es)] to <project_nomination>
	project_acceptance.application_unit


 processing: project_acceptance.project_material.acceptance_application

Info: Add virtual field [project_acceptances(es)] to <project_material>
	project_acceptance.acceptance_application


 processing: project_acceptance.project_material.acceptance

Info: Add virtual field [project_acceptances(es)] to <project_material>
	project_acceptance.acceptance


 processing: project_acceptance.project_acceptance_status.status

Info: Add virtual field [project_acceptances(es)] to <project_acceptance_status>
	project_acceptance.status


 processing: project_acceptance_status


 processing: after_sales


 processing: after_sales.project.project

Info: Add virtual field [after_saless(es)] to <project>
	after_sales.project


 processing: after_sales.employee_nomination.creator

Info: Add virtual field [after_saless(es)] to <employee_nomination>
	after_sales.creator


 processing: after_sales.after_sales_status.status

Info: Add virtual field [after_saless(es)] to <after_sales_status>
	after_sales.status


 processing: after_sales.daily_task_type.daily_task_type

Info: Add virtual field [after_saless(es)] to <daily_task_type>
	after_sales.daily_task_type


 processing: after_sales.project_nomination.solver

Info: Add virtual field [after_saless(es)] to <project_nomination>
	after_sales.solver


 processing: after_sales_status


 processing: project_penalties


 processing: project_penalties.project.project

Info: Add virtual field [project_penaltiess(es)] to <project>
	project_penalties.project


 processing: project_penalties.standard_contract.contract

Info: Add virtual field [project_penaltiess(es)] to <standard_contract>
	project_penalties.contract


 processing: project_penalties.project_penalties_status.status

Info: Add virtual field [project_penaltiess(es)] to <project_penalties_status>
	project_penalties.status


 processing: project_penalties.daily_task_type.daily_task_type

Info: Add virtual field [project_penaltiess(es)] to <daily_task_type>
	project_penalties.daily_task_type


 processing: project_penalties_status


 processing: labor_wage_management_sheet


 processing: labor_wage_management_sheet.project.project

Info: Add virtual field [labor_wage_management_sheets(es)] to <project>
	labor_wage_management_sheet.project


 processing: labor_wage_management_sheet.daily_task_type.daily_task_type

Info: Add virtual field [labor_wage_management_sheets(es)] to <daily_task_type>
	labor_wage_management_sheet.daily_task_type


 processing: labor_wage_management_sheet.standard_contract.contract

Info: Add virtual field [labor_wage_management_sheets(es)] to <standard_contract>
	labor_wage_management_sheet.contract


 processing: labor_wage_management_sheet.project_material.bid_price_list

Info: Add virtual field [labor_wage_management_sheets(es)] to <project_material>
	labor_wage_management_sheet.bid_price_list


 processing: labor_wage_management_sheet.project_progress.project_progress

Info: Add virtual field [labor_wage_management_sheets(es)] to <project_progress>
	labor_wage_management_sheet.project_progress


 processing: labor_wage_management_sheet.project_nomination.contract_payment_manager

Info: Add virtual field [labor_wage_management_sheets(es)] to <project_nomination>
	labor_wage_management_sheet.contract_payment_manager


 processing: labor_wage_management_sheet.project_nomination.platform_labor_manager

Info: Add virtual field [labor_wage_management_sheets(es)] to <project_nomination>
	labor_wage_management_sheet.platform_labor_manager


 processing: labor_wage_management_sheet.project_nomination.payment_manager

Info: Add virtual field [labor_wage_management_sheets(es)] to <project_nomination>
	labor_wage_management_sheet.payment_manager


 processing: labor_wage_management_sheet.project_material.labor_wage

Info: Add virtual field [labor_wage_management_sheets(es)] to <project_material>
	labor_wage_management_sheet.labor_wage


 processing: labor_dispute


 processing: labor_dispute.work_package.work_package

Info: Add virtual field [labor_disputes(es)] to <work_package>
	labor_dispute.work_package


 processing: labor_dispute.labor_dispute_type.type

Info: Add virtual field [labor_disputes(es)] to <labor_dispute_type>
	labor_dispute.type


 processing: labor_dispute.labor_dispute_status.status

Info: Add virtual field [labor_disputes(es)] to <labor_dispute_status>
	labor_dispute.status


 processing: labor_dispute.project_nomination.applicant

Info: Add virtual field [labor_disputes(es)] to <project_nomination>
	labor_dispute.applicant


 processing: labor_dispute.project.project

Info: Add virtual field [labor_disputes(es)] to <project>
	labor_dispute.project


 processing: labor_dispute_status


 processing: labor_dispute_status.platform.platform

Info: Add virtual field [labor_dispute_statuss(es)] to <platform>
	labor_dispute_status.platform


 processing: labor_dispute_type


 processing: labor_dispute_type.platform.platform

Info: Add virtual field [labor_dispute_types(es)] to <platform>
	labor_dispute_type.platform


 processing: labor_record


 processing: labor_record.project_nomination.project_nomination

Info: Add virtual field [labor_records(es)] to <project_nomination>
	labor_record.project_nomination


 processing: labor_record.labor_record_type.type

Info: Add virtual field [labor_records(es)] to <labor_record_type>
	labor_record.type


 processing: labor_record.project.project

Info: Add virtual field [labor_records(es)] to <project>
	labor_record.project


 processing: work_overtime_record


 processing: work_overtime_record.project_nomination.project_nomination

Info: Add virtual field [work_overtime_records(es)] to <project_nomination>
	work_overtime_record.project_nomination


 processing: work_overtime_record.project.project

Info: Add virtual field [work_overtime_records(es)] to <project>
	work_overtime_record.project


 processing: labor_record_type


 processing: project_report


 processing: project_report.project.project

Info: Add virtual field [project_reports(es)] to <project>
	project_report.project


 processing: project_report.project_nomination.submitter

Info: Add virtual field [project_reports(es)] to <project_nomination>
	project_report.submitter


 processing: project_report.daily_task_type.daily_task_type

Info: Add virtual field [project_reports(es)] to <daily_task_type>
	project_report.daily_task_type


 processing: common_report


 processing: common_report.project_report.project_report

Info: Add virtual field [common_reports(es)] to <project_report>
	common_report.project_report


 processing: project_report_check_item


 processing: project_report_check_item.project_report.project_report

Info: Add virtual field [project_report_check_items(es)] to <project_report>
	project_report_check_item.project_report


 processing: project_command


 processing: project_command.project.project

Info: Add virtual field [project_commands(es)] to <project>
	project_command.project


 processing: project_command.daily_task_type.daily_task_type

Info: Add virtual field [project_commands(es)] to <daily_task_type>
	project_command.daily_task_type


 processing: project_command.project_material.project_material

Info: Add virtual field [project_commands(es)] to <project_material>
	project_command.project_material


 processing: project_command_assignment


 processing: project_command_assignment.project_command.project_command

Info: Add virtual field [project_command_assignments(es)] to <project_command>
	project_command_assignment.project_command


 processing: project_command_assignment.project_nomination.reciever

Info: Add virtual field [project_command_assignments(es)] to <project_nomination>
	project_command_assignment.reciever


 processing: loan_fund


 processing: loan_fund.merchant.fund_vendor

Info: Add virtual field [loan_funds(es)] to <merchant>
	loan_fund.fund_vendor


 processing: loan_fund.project.project

Info: Add virtual field [loan_funds(es)] to <project>
	loan_fund.project


 processing: loan_fund.platform.platform

Info: Add virtual field [loan_funds(es)] to <platform>
	loan_fund.platform


 processing: loan_application


 processing: loan_application.project.loan_project

Info: Add virtual field [loan_applications(es)] to <project>
	loan_application.loan_project


 processing: loan_application.merchant.applicant

Info: Add virtual field [loan_applications(es)] to <merchant>
	loan_application.applicant


 processing: loan_application.loan_application_status.status

Info: Add virtual field [loan_applications(es)] to <loan_application_status>
	loan_application.status


 processing: loan_application.platform.platform

Info: Add virtual field [loan_applications(es)] to <platform>
	loan_application.platform


 processing: loan_application_status


 processing: loan_contract


 processing: loan_contract.loan_application.loan_application

Info: Add virtual field [loan_contracts(es)] to <loan_application>
	loan_contract.loan_application


 processing: loan_contract.merchant.borrower

Info: Add virtual field [loan_contracts(es)] to <merchant>
	loan_contract.borrower


 processing: loan_contract.merchant.lender

Info: Add virtual field [loan_contracts(es)] to <merchant>
	loan_contract.lender


 processing: loan_contract.project.project

Info: Add virtual field [loan_contracts(es)] to <project>
	loan_contract.project


 processing: loan_contract.platform.platform

Info: Add virtual field [loan_contracts(es)] to <platform>
	loan_contract.platform


 processing: loan_contract.loan_contract_status.status

Info: Add virtual field [loan_contracts(es)] to <loan_contract_status>
	loan_contract.status


 processing: loan_contract_status


 processing: compensation_application


 processing: compensation_application.project.project

Info: Add virtual field [compensation_applications(es)] to <project>
	compensation_application.project


 processing: compensation_application.compensation_application_status.status

Info: Add virtual field [compensation_applications(es)] to <compensation_application_status>
	compensation_application.status


 processing: compensation_application.employee_nomination.submitter

Info: Add virtual field [compensation_applications(es)] to <employee_nomination>
	compensation_application.submitter


 processing: compensation_application_status


 processing: compensation_investigation


 processing: compensation_investigation.compensation_application.compensation_application

Info: Add virtual field [compensation_investigations(es)] to <compensation_application>
	compensation_investigation.compensation_application


 processing: compensation_investigation.project.project

Info: Add virtual field [compensation_investigations(es)] to <project>
	compensation_investigation.project


 processing: compensation_investigation.merchant.submitter

Info: Add virtual field [compensation_investigations(es)] to <merchant>
	compensation_investigation.submitter


 processing: compensation_result


 processing: compensation_result.compensation_investigation.compensation_investigation

Info: Add virtual field [compensation_results(es)] to <compensation_investigation>
	compensation_result.compensation_investigation


 processing: compensation_result.merchant.submitter

Info: Add virtual field [compensation_results(es)] to <merchant>
	compensation_result.submitter


 processing: compensation_result.project.project

Info: Add virtual field [compensation_results(es)] to <project>
	compensation_result.project


 processing: compensation_result.compensation_result_status.status

Info: Add virtual field [compensation_results(es)] to <compensation_result_status>
	compensation_result.status


 processing: compensation_result_status


 processing: material_preserved_sample


 processing: material_preserved_sample.standard_contract.contract

Info: Add virtual field [material_preserved_samples(es)] to <standard_contract>
	material_preserved_sample.contract


 processing: material_preserved_sample.material_category.material_category

Info: Add virtual field [material_preserved_samples(es)] to <material_category>
	material_preserved_sample.material_category


 processing: material_preserved_sample.material_unit_of_measurement.material_unit_of_measurement

Info: Add virtual field [material_preserved_samples(es)] to <material_unit_of_measurement>
	material_preserved_sample.material_unit_of_measurement


 processing: material_preserved_sample.project_nomination.material_manager

Info: Add virtual field [material_preserved_samples(es)] to <project_nomination>
	material_preserved_sample.material_manager


 processing: material_preserved_sample.project.project

Info: Add virtual field [material_preserved_samples(es)] to <project>
	material_preserved_sample.project


 processing: material_preserved_sample.daily_task_type.daily_task_type

Info: Add virtual field [material_preserved_samples(es)] to <daily_task_type>
	material_preserved_sample.daily_task_type


 processing: material_bid_sample


 processing: material_bid_sample.standard_contract.contract

Info: Add virtual field [material_bid_samples(es)] to <standard_contract>
	material_bid_sample.contract


 processing: material_bid_sample.material_category.material_category

Info: Add virtual field [material_bid_samples(es)] to <material_category>
	material_bid_sample.material_category


 processing: material_bid_sample.material_unit_of_measurement.material_unit_of_measurement

Info: Add virtual field [material_bid_samples(es)] to <material_unit_of_measurement>
	material_bid_sample.material_unit_of_measurement


 processing: material_bid_sample.project_nomination.material_manager

Info: Add virtual field [material_bid_samples(es)] to <project_nomination>
	material_bid_sample.material_manager


 processing: material_bid_sample.project.project

Info: Add virtual field [material_bid_samples(es)] to <project>
	material_bid_sample.project


 processing: material_bid_sample.daily_task_type.daily_task_type

Info: Add virtual field [material_bid_samples(es)] to <daily_task_type>
	material_bid_sample.daily_task_type


 processing: material_category


 processing: material_category.platform.platform

Info: Add virtual field [material_categorys(es)] to <platform>
	material_category.platform


 processing: material_type


 processing: material_type.material_category.category

Info: Add virtual field [material_types(es)] to <material_category>
	material_type.category


 processing: material_type.platform.platform

Info: Add virtual field [material_types(es)] to <platform>
	material_type.platform


 processing: material_record


 processing: material_record.standard_contract.contract

Info: Add virtual field [material_records(es)] to <standard_contract>
	material_record.contract


 processing: material_record.material_unit_of_measurement.material_unit_of_measurement

Info: Add virtual field [material_records(es)] to <material_unit_of_measurement>
	material_record.material_unit_of_measurement


 processing: material_record.project_progress.planned_approach_phase

Info: Add virtual field [material_records(es)] to <project_progress>
	material_record.planned_approach_phase


 processing: material_record.merchant.platform_information_manager

Info: Add virtual field [material_records(es)] to <merchant>
	material_record.platform_information_manager


 processing: material_record.project.project

Info: Add virtual field [material_records(es)] to <project>
	material_record.project


 processing: material_record.material_type.type

Info: Add virtual field [material_records(es)] to <material_type>
	material_record.type


 processing: material_record.daily_task_type.daili_task_type

Info: Add virtual field [material_records(es)] to <daily_task_type>
	material_record.daili_task_type


 processing: material_unit_of_measurement


 processing: material_unit_of_measurement.platform.platform

Info: Add virtual field [material_unit_of_measurements(es)] to <platform>
	material_unit_of_measurement.platform


 processing: material_change


 processing: material_change.material_category.contract_material_category

Info: Add virtual field [material_changes(es)] to <material_category>
	material_change.contract_material_category


 processing: material_change.standard_contract.contract

Info: Add virtual field [material_changes(es)] to <standard_contract>
	material_change.contract


 processing: material_change.material_unit_of_measurement.contract_material_unit_of_measurement

Info: Add virtual field [material_changes(es)] to <material_unit_of_measurement>
	material_change.contract_material_unit_of_measurement


 processing: material_change.material_unit_of_measurement.material_unit_of_measurement

Info: Add virtual field [material_changes(es)] to <material_unit_of_measurement>
	material_change.material_unit_of_measurement


 processing: material_change.project_nomination.applicant

Info: Add virtual field [material_changes(es)] to <project_nomination>
	material_change.applicant


 processing: material_change.project.project

Info: Add virtual field [material_changes(es)] to <project>
	material_change.project


 processing: material_change.daily_task_type.daili_task_type

Info: Add virtual field [material_changes(es)] to <daily_task_type>
	material_change.daili_task_type


 processing: material_acceptance_application


 processing: material_acceptance_application.project.project

Info: Add virtual field [material_acceptance_applications(es)] to <project>
	material_acceptance_application.project


 processing: material_acceptance_application.standard_contract.contract

Info: Add virtual field [material_acceptance_applications(es)] to <standard_contract>
	material_acceptance_application.contract


 processing: material_acceptance_application.material_category.material_category

Info: Add virtual field [material_acceptance_applications(es)] to <material_category>
	material_acceptance_application.material_category


 processing: material_acceptance_application.material_unit_of_measurement.material_unit_of_measurement

Info: Add virtual field [material_acceptance_applications(es)] to <material_unit_of_measurement>
	material_acceptance_application.material_unit_of_measurement


 processing: material_acceptance_application.project_nomination.auditor

Info: Add virtual field [material_acceptance_applications(es)] to <project_nomination>
	material_acceptance_application.auditor


 processing: account_book_type


 processing: account_book_type.platform.platform

Info: Add virtual field [account_book_types(es)] to <platform>
	account_book_type.platform


 processing: account_book


 processing: account_book.account_book_type.type

Info: Add virtual field [account_books(es)] to <account_book_type>
	account_book.type


 processing: account_book.merchant.owner

Info: Add virtual field [account_books(es)] to <merchant>
	account_book.owner


 processing: account_book_item_status


 processing: account_book_item_status.platform.platform

Info: Add virtual field [account_book_item_statuss(es)] to <platform>
	account_book_item_status.platform


 processing: account_book_item


 processing: account_book_item.account_book_item_status.status

Info: Add virtual field [account_book_items(es)] to <account_book_item_status>
	account_book_item.status


 processing: account_book_item.account_book.account_book

Info: Add virtual field [account_book_items(es)] to <account_book>
	account_book_item.account_book


 processing: application_status


 processing: application_status.platform_configuration.platform_configuration

Info: Add virtual field [application_statuss(es)] to <platform_configuration>
	application_status.platform_configuration


 processing: recommendation_type


 processing: recommendation_type.platform_configuration.platform_configuration

Info: Add virtual field [recommendation_types(es)] to <platform_configuration>
	recommendation_type.platform_configuration


 processing: recommendation


 processing: recommendation.recommendation_type.type

Info: Add virtual field [recommendations(es)] to <recommendation_type>
	recommendation.type


 processing: recommendation.application_status.status

Info: Add virtual field [recommendations(es)] to <application_status>
	recommendation.status


 processing: recommendation.merchant.applicant_merchant

Info: Add virtual field [recommendations(es)] to <merchant>
	recommendation.applicant_merchant


 processing: recommendation.employee_nomination.applicant_employee

Info: Add virtual field [recommendations(es)] to <employee_nomination>
	recommendation.applicant_employee


 processing: recommendation.platform.platform

Info: Add virtual field [recommendations(es)] to <platform>
	recommendation.platform


 processing: emplacement_application


 processing: emplacement_application.partner_type.partner_type

Info: Add virtual field [emplacement_applications(es)] to <partner_type>
	emplacement_application.partner_type


 processing: emplacement_application.available_service_location.service_location

Info: Add virtual field [emplacement_applications(es)] to <available_service_location>
	emplacement_application.service_location


 processing: emplacement_application.application_status.status

Info: Add virtual field [emplacement_applications(es)] to <application_status>
	emplacement_application.status


 processing: emplacement_application.merchant.applicant_merchant

Info: Add virtual field [emplacement_applications(es)] to <merchant>
	emplacement_application.applicant_merchant


 processing: emplacement_application.platform.platform

Info: Add virtual field [emplacement_applications(es)] to <platform>
	emplacement_application.platform


 processing: personal_emplacement_application


 processing: personal_emplacement_application.audit_status.status

Info: Add virtual field [personal_emplacement_applications(es)] to <audit_status>
	personal_emplacement_application.status


 processing: personal_emplacement_application.career_type.career_type

Info: Add virtual field [personal_emplacement_applications(es)] to <career_type>
	personal_emplacement_application.career_type


 processing: personal_emplacement_application.business_type.business_type

Info: Add virtual field [personal_emplacement_applications(es)] to <business_type>
	personal_emplacement_application.business_type


 processing: personal_emplacement_application.available_service_location.service_location

Info: Add virtual field [personal_emplacement_applications(es)] to <available_service_location>
	personal_emplacement_application.service_location


 processing: personal_emplacement_application.platform.platform

Info: Add virtual field [personal_emplacement_applications(es)] to <platform>
	personal_emplacement_application.platform


 processing: estate_property_type


 processing: estate_property_type.platform_configuration.platform_configuration

Info: Add virtual field [estate_property_types(es)] to <platform_configuration>
	estate_property_type.platform_configuration


 processing: customer_project_application


 processing: customer_project_application.estate_property_type.property_type

Info: Add virtual field [customer_project_applications(es)] to <estate_property_type>
	customer_project_application.property_type


 processing: customer_project_application.application_status.status

Info: Add virtual field [customer_project_applications(es)] to <application_status>
	customer_project_application.status


 processing: customer_project_application.merchant.applicant_merchant

Info: Add virtual field [customer_project_applications(es)] to <merchant>
	customer_project_application.applicant_merchant


 processing: customer_project_application.employee_nomination.applicant_employee

Info: Add virtual field [customer_project_applications(es)] to <employee_nomination>
	customer_project_application.applicant_employee


 processing: customer_project_application.platform.platform

Info: Add virtual field [customer_project_applications(es)] to <platform>
	customer_project_application.platform


 processing: partner_type


 processing: partner_type.platform_configuration.platform_configuration

Info: Add virtual field [partner_types(es)] to <platform_configuration>
	partner_type.platform_configuration


 processing: available_service_location


 processing: available_service_location.platform_configuration.platform_configuration

Info: Add virtual field [available_service_locations(es)] to <platform_configuration>
	available_service_location.platform_configuration


 processing: partner_settlement_application


 processing: partner_settlement_application.partner_type.partner_type

Info: Add virtual field [partner_settlement_applications(es)] to <partner_type>
	partner_settlement_application.partner_type


 processing: partner_settlement_application.available_service_location.service_location

Info: Add virtual field [partner_settlement_applications(es)] to <available_service_location>
	partner_settlement_application.service_location


 processing: partner_settlement_application.application_status.status

Info: Add virtual field [partner_settlement_applications(es)] to <application_status>
	partner_settlement_application.status


 processing: partner_settlement_application.merchant.applicant_merchant

Info: Add virtual field [partner_settlement_applications(es)] to <merchant>
	partner_settlement_application.applicant_merchant


 processing: partner_settlement_application.employee_nomination.applicant_employee

Info: Add virtual field [partner_settlement_applications(es)] to <employee_nomination>
	partner_settlement_application.applicant_employee


 processing: partner_settlement_application.platform.platform

Info: Add virtual field [partner_settlement_applications(es)] to <platform>
	partner_settlement_application.platform


 processing: subcontract_application


 processing: subcontract_application.project.project

Info: Add virtual field [subcontract_applications(es)] to <project>
	subcontract_application.project


 processing: subcontract_application.career_type.career_type

Info: Add virtual field [subcontract_applications(es)] to <career_type>
	subcontract_application.career_type


 processing: subcontract_application.merchant_type.merchant_type

Info: Add virtual field [subcontract_applications(es)] to <merchant_type>
	subcontract_application.merchant_type


 processing: subcontract_application.merchant.application_merchant

Info: Add virtual field [subcontract_applications(es)] to <merchant>
	subcontract_application.application_merchant


 processing: subcontract_application.merchant.applicant

Info: Add virtual field [subcontract_applications(es)] to <merchant>
	subcontract_application.applicant


 processing: subcontract_application.work_package_type.work_package_type

Info: Add virtual field [subcontract_applications(es)] to <work_package_type>
	subcontract_application.work_package_type


 processing: bpmn_model


 processing: process_instance


 processing: process_instance_variable


 processing: process_instance_variable.process_instance.process_instance

Info: Add virtual field [process_instance_variables(es)] to <process_instance>
	process_instance_variable.process_instance


 processing: node_instance


 processing: node_instance.process_instance.process_instance

Info: Add virtual field [node_instances(es)] to <process_instance>
	node_instance.process_instance


 processing: node_instance.node_instance_status.status

Info: Add virtual field [node_instances(es)] to <node_instance_status>
	node_instance.status


 processing: node_instance_status


 processing: notification


 processing: notification.merchant.receiver

Info: Add virtual field [notifications(es)] to <merchant>
	notification.receiver


 processing: notification.merchant.sender

Info: Add virtual field [notifications(es)] to <merchant>
	notification.sender


 processing: notification.project.project

Info: Add virtual field [notifications(es)] to <project>
	notification.project


 processing: change_request_type


 processing: change_request_type.platform.platform

Info: Add virtual field [change_request_types(es)] to <platform>
	change_request_type.platform


 processing: change_request


 processing: change_request.change_request_type.request_type

Info: Add virtual field [change_requests(es)] to <change_request_type>
	change_request.request_type


 processing: change_request.platform.platform

Info: Add virtual field [change_requests(es)] to <platform>
	change_request.platform


 processing: event_show_all_type_step_two


 processing: event_show_all_type_step_two.change_request.change_request

Info: Add virtual field [event_show_all_type_step_twos(es)] to <change_request>
	event_show_all_type_step_two.change_request


 processing: event_additional_contract_payment_phase


 processing: event_additional_contract_payment_phase.contract_pay_item.payment_item

Info: Add virtual field [event_additional_contract_payment_phases(es)] to <contract_pay_item>
	event_additional_contract_payment_phase.payment_item


 processing: event_additional_contract_payment_phase.change_request.change_request

Info: Add virtual field [event_additional_contract_payment_phases(es)] to <change_request>
	event_additional_contract_payment_phase.change_request


 processing: event_resolve_after_sales


 processing: event_resolve_after_sales.change_request.change_request

Info: Add virtual field [event_resolve_after_saless(es)] to <change_request>
	event_resolve_after_sales.change_request


 processing: event_apply_recommendation


 processing: event_apply_recommendation.recommendation_type.recommendation_type

Info: Add virtual field [event_apply_recommendations(es)] to <recommendation_type>
	event_apply_recommendation.recommendation_type


 processing: event_apply_recommendation.change_request.change_request

Info: Add virtual field [event_apply_recommendations(es)] to <change_request>
	event_apply_recommendation.change_request


 processing: event_add_debit_card


 processing: event_add_debit_card.change_request.change_request

Info: Add virtual field [event_add_debit_cards(es)] to <change_request>
	event_add_debit_card.change_request


 processing: event_material_acceptance_image


 processing: event_material_acceptance_image.change_request.change_request

Info: Add virtual field [event_material_acceptance_images(es)] to <change_request>
	event_material_acceptance_image.change_request


 processing: event_additional_contract_basic_info


 processing: event_additional_contract_basic_info.supplementary_contract_type.contract_type

Info: Add virtual field [event_additional_contract_basic_infos(es)] to <supplementary_contract_type>
	event_additional_contract_basic_info.contract_type


 processing: event_additional_contract_basic_info.change_request.change_request

Info: Add virtual field [event_additional_contract_basic_infos(es)] to <change_request>
	event_additional_contract_basic_info.change_request


 processing: event_material_check


 processing: event_material_check.change_request.change_request

Info: Add virtual field [event_material_checks(es)] to <change_request>
	event_material_check.change_request


 processing: event_project_command


 processing: event_project_command.daily_task_type.directive_type

Info: Add virtual field [event_project_commands(es)] to <daily_task_type>
	event_project_command.directive_type


 processing: event_project_command.change_request.change_request

Info: Add virtual field [event_project_commands(es)] to <change_request>
	event_project_command.change_request


 processing: event_add_employee


 processing: event_add_employee.role.role

Info: Add virtual field [event_add_employees(es)] to <role>
	event_add_employee.role


 processing: event_add_employee.job.job

Info: Add virtual field [event_add_employees(es)] to <job>
	event_add_employee.job


 processing: event_add_employee.change_request.change_request

Info: Add virtual field [event_add_employees(es)] to <change_request>
	event_add_employee.change_request


 processing: event_acceptance_application


 processing: event_acceptance_application.daily_task_type.acceptance_type

Info: Add virtual field [event_acceptance_applications(es)] to <daily_task_type>
	event_acceptance_application.acceptance_type


 processing: event_acceptance_application.change_request.change_request

Info: Add virtual field [event_acceptance_applications(es)] to <change_request>
	event_acceptance_application.change_request


 processing: event_common_report


 processing: event_common_report.change_request.change_request

Info: Add virtual field [event_common_reports(es)] to <change_request>
	event_common_report.change_request


 processing: event_apply_personal_emplacement


 processing: event_apply_personal_emplacement.career_type.career_type

Info: Add virtual field [event_apply_personal_emplacements(es)] to <career_type>
	event_apply_personal_emplacement.career_type


 processing: event_apply_personal_emplacement.business_type.business_type

Info: Add virtual field [event_apply_personal_emplacements(es)] to <business_type>
	event_apply_personal_emplacement.business_type


 processing: event_apply_personal_emplacement.available_service_location.service_location

Info: Add virtual field [event_apply_personal_emplacements(es)] to <available_service_location>
	event_apply_personal_emplacement.service_location


 processing: event_apply_personal_emplacement.change_request.change_request

Info: Add virtual field [event_apply_personal_emplacements(es)] to <change_request>
	event_apply_personal_emplacement.change_request


 processing: event_material_change_info


 processing: event_material_change_info.material_unit_of_measurement.uom

Info: Add virtual field [event_material_change_infos(es)] to <material_unit_of_measurement>
	event_material_change_info.uom


 processing: event_material_change_info.project_nomination.applicant

Info: Add virtual field [event_material_change_infos(es)] to <project_nomination>
	event_material_change_info.applicant


 processing: event_material_change_info.change_request.change_request

Info: Add virtual field [event_material_change_infos(es)] to <change_request>
	event_material_change_info.change_request


 processing: event_contract_basic_info


 processing: event_contract_basic_info.contract_status.status

Info: Add virtual field [event_contract_basic_infos(es)] to <contract_status>
	event_contract_basic_info.status


 processing: event_contract_basic_info.merchant.party_a

Info: Add virtual field [event_contract_basic_infos(es)] to <merchant>
	event_contract_basic_info.party_a


 processing: event_contract_basic_info.merchant.party_b

Info: Add virtual field [event_contract_basic_infos(es)] to <merchant>
	event_contract_basic_info.party_b


 processing: event_contract_basic_info.change_request.change_request

Info: Add virtual field [event_contract_basic_infos(es)] to <change_request>
	event_contract_basic_info.change_request


 processing: event_material_acceptance_basic_info


 processing: event_material_acceptance_basic_info.standard_contract.contract

Info: Add virtual field [event_material_acceptance_basic_infos(es)] to <standard_contract>
	event_material_acceptance_basic_info.contract


 processing: event_material_acceptance_basic_info.material_unit_of_measurement.uom

Info: Add virtual field [event_material_acceptance_basic_infos(es)] to <material_unit_of_measurement>
	event_material_acceptance_basic_info.uom


 processing: event_material_acceptance_basic_info.project_nomination.auditor

Info: Add virtual field [event_material_acceptance_basic_infos(es)] to <project_nomination>
	event_material_acceptance_basic_info.auditor


 processing: event_material_acceptance_basic_info.change_request.change_request

Info: Add virtual field [event_material_acceptance_basic_infos(es)] to <change_request>
	event_material_acceptance_basic_info.change_request


 processing: event_material_review


 processing: event_material_review.change_request.change_request

Info: Add virtual field [event_material_reviews(es)] to <change_request>
	event_material_review.change_request


 processing: event_material_preserved_info


 processing: event_material_preserved_info.project_nomination.material_manager

Info: Add virtual field [event_material_preserved_infos(es)] to <project_nomination>
	event_material_preserved_info.material_manager


 processing: event_material_preserved_info.change_request.change_request

Info: Add virtual field [event_material_preserved_infos(es)] to <change_request>
	event_material_preserved_info.change_request


 processing: event_material_change_contract_info


 processing: event_material_change_contract_info.standard_contract.contract

Info: Add virtual field [event_material_change_contract_infos(es)] to <standard_contract>
	event_material_change_contract_info.contract


 processing: event_material_change_contract_info.material_unit_of_measurement.uom

Info: Add virtual field [event_material_change_contract_infos(es)] to <material_unit_of_measurement>
	event_material_change_contract_info.uom


 processing: event_material_change_contract_info.change_request.change_request

Info: Add virtual field [event_material_change_contract_infos(es)] to <change_request>
	event_material_change_contract_info.change_request


 processing: event_review


 processing: event_review.change_request.change_request

Info: Add virtual field [event_reviews(es)] to <change_request>
	event_review.change_request


 processing: event_material_change_data_upload


 processing: event_material_change_data_upload.change_request.change_request

Info: Add virtual field [event_material_change_data_uploads(es)] to <change_request>
	event_material_change_data_upload.change_request


 processing: event_fill_personal_detail


 processing: event_fill_personal_detail.industry_type.industry_type

Info: Add virtual field [event_fill_personal_details(es)] to <industry_type>
	event_fill_personal_detail.industry_type


 processing: event_fill_personal_detail.engineering_type.engineering_type

Info: Add virtual field [event_fill_personal_details(es)] to <engineering_type>
	event_fill_personal_detail.engineering_type


 processing: event_fill_personal_detail.career_type.career_type

Info: Add virtual field [event_fill_personal_details(es)] to <career_type>
	event_fill_personal_detail.career_type


 processing: event_fill_personal_detail.change_request.change_request

Info: Add virtual field [event_fill_personal_details(es)] to <change_request>
	event_fill_personal_detail.change_request


 processing: event_project_work_position


 processing: event_project_work_position.project_organization_type.project_job

Info: Add virtual field [event_project_work_positions(es)] to <project_organization_type>
	event_project_work_position.project_job


 processing: event_project_work_position.project_role.project_role

Info: Add virtual field [event_project_work_positions(es)] to <project_role>
	event_project_work_position.project_role


 processing: event_project_work_position.work_package.work_package

Info: Add virtual field [event_project_work_positions(es)] to <work_package>
	event_project_work_position.work_package


 processing: event_project_work_position.employee_nomination.employee

Info: Add virtual field [event_project_work_positions(es)] to <employee_nomination>
	event_project_work_position.employee


 processing: event_project_work_position.change_request.change_request

Info: Add virtual field [event_project_work_positions(es)] to <change_request>
	event_project_work_position.change_request


 processing: event_project_supervisor_report_basic_info


 processing: event_project_supervisor_report_basic_info.change_request.change_request

Info: Add virtual field [event_project_supervisor_report_basic_infos(es)] to <change_request>
	event_project_supervisor_report_basic_info.change_request


 processing: event_comments


 processing: event_comments.change_request.change_request

Info: Add virtual field [event_commentss(es)] to <change_request>
	event_comments.change_request


 processing: event_subcontract_application


 processing: event_subcontract_application.project.project

Info: Add virtual field [event_subcontract_applications(es)] to <project>
	event_subcontract_application.project


 processing: event_subcontract_application.career_type.application_type

Info: Add virtual field [event_subcontract_applications(es)] to <career_type>
	event_subcontract_application.application_type


 processing: event_subcontract_application.merchant_type.merchant_type

Info: Add virtual field [event_subcontract_applications(es)] to <merchant_type>
	event_subcontract_application.merchant_type


 processing: event_subcontract_application.work_package_type.work_package_type

Info: Add virtual field [event_subcontract_applications(es)] to <work_package_type>
	event_subcontract_application.work_package_type


 processing: event_subcontract_application.change_request.change_request

Info: Add virtual field [event_subcontract_applications(es)] to <change_request>
	event_subcontract_application.change_request


 processing: event_material_preserved_basic_info


 processing: event_material_preserved_basic_info.standard_contract.contract

Info: Add virtual field [event_material_preserved_basic_infos(es)] to <standard_contract>
	event_material_preserved_basic_info.contract


 processing: event_material_preserved_basic_info.material_category.material_category

Info: Add virtual field [event_material_preserved_basic_infos(es)] to <material_category>
	event_material_preserved_basic_info.material_category


 processing: event_material_preserved_basic_info.material_unit_of_measurement.uom

Info: Add virtual field [event_material_preserved_basic_infos(es)] to <material_unit_of_measurement>
	event_material_preserved_basic_info.uom


 processing: event_material_preserved_basic_info.change_request.change_request

Info: Add virtual field [event_material_preserved_basic_infos(es)] to <change_request>
	event_material_preserved_basic_info.change_request


 processing: event_contract_payment_phase


 processing: event_contract_payment_phase.merchant.payer

Info: Add virtual field [event_contract_payment_phases(es)] to <merchant>
	event_contract_payment_phase.payer


 processing: event_contract_payment_phase.merchant.payee

Info: Add virtual field [event_contract_payment_phases(es)] to <merchant>
	event_contract_payment_phase.payee


 processing: event_contract_payment_phase.project_progress.project_progress

Info: Add virtual field [event_contract_payment_phases(es)] to <project_progress>
	event_contract_payment_phase.project_progress


 processing: event_contract_payment_phase.change_request.change_request

Info: Add virtual field [event_contract_payment_phases(es)] to <change_request>
	event_contract_payment_phase.change_request


 processing: event_show_all_type_step_one


 processing: event_show_all_type_step_one.merchant.field_biz_candidate

Info: Add virtual field [event_show_all_type_step_ones(es)] to <merchant>
	event_show_all_type_step_one.field_biz_candidate


 processing: event_show_all_type_step_one.change_request.change_request

Info: Add virtual field [event_show_all_type_step_ones(es)] to <change_request>
	event_show_all_type_step_one.change_request


 processing: event_labor_dispute


 processing: event_labor_dispute.work_package.work_package

Info: Add virtual field [event_labor_disputes(es)] to <work_package>
	event_labor_dispute.work_package


 processing: event_labor_dispute.labor_dispute_type.type

Info: Add virtual field [event_labor_disputes(es)] to <labor_dispute_type>
	event_labor_dispute.type


 processing: event_labor_dispute.project_nomination.applicant

Info: Add virtual field [event_labor_disputes(es)] to <project_nomination>
	event_labor_dispute.applicant


 processing: event_labor_dispute.change_request.change_request

Info: Add virtual field [event_labor_disputes(es)] to <change_request>
	event_labor_dispute.change_request


 processing: event_project_manager_report_basic_info


 processing: event_project_manager_report_basic_info.change_request.change_request

Info: Add virtual field [event_project_manager_report_basic_infos(es)] to <change_request>
	event_project_manager_report_basic_info.change_request


 processing: event_after_sales


 processing: event_after_sales.change_request.change_request

Info: Add virtual field [event_after_saless(es)] to <change_request>
	event_after_sales.change_request


 processing: event_apply_decoration


 processing: event_apply_decoration.estate_property_type.property_type

Info: Add virtual field [event_apply_decorations(es)] to <estate_property_type>
	event_apply_decoration.property_type


 processing: event_apply_decoration.change_request.change_request

Info: Add virtual field [event_apply_decorations(es)] to <change_request>
	event_apply_decoration.change_request


 processing: event_task_report_basic_info


 processing: event_task_report_basic_info.change_request.change_request

Info: Add virtual field [event_task_report_basic_infos(es)] to <change_request>
	event_task_report_basic_info.change_request


 processing: event_material_comment


 processing: event_material_comment.change_request.change_request

Info: Add virtual field [event_material_comments(es)] to <change_request>
	event_material_comment.change_request


 processing: event_report_check_item


 processing: event_report_check_item.change_request.change_request

Info: Add virtual field [event_report_check_items(es)] to <change_request>
	event_report_check_item.change_request


 processing: event_expected_pay_item_comments


 processing: event_expected_pay_item_comments.change_request.change_request

Info: Add virtual field [event_expected_pay_item_commentss(es)] to <change_request>
	event_expected_pay_item_comments.change_request


 processing: event_labor_supervisor


 processing: event_labor_supervisor.change_request.change_request

Info: Add virtual field [event_labor_supervisors(es)] to <change_request>
	event_labor_supervisor.change_request


 processing: event_project_penalties


 processing: event_project_penalties.standard_contract.work_package_contract

Info: Add virtual field [event_project_penaltiess(es)] to <standard_contract>
	event_project_penalties.work_package_contract


 processing: event_project_penalties.employee_nomination.penalties_executor

Info: Add virtual field [event_project_penaltiess(es)] to <employee_nomination>
	event_project_penalties.penalties_executor


 processing: event_project_penalties.change_request.change_request

Info: Add virtual field [event_project_penaltiess(es)] to <change_request>
	event_project_penalties.change_request


 processing: event_apply_emplacement


 processing: event_apply_emplacement.partner_type.partner_type

Info: Add virtual field [event_apply_emplacements(es)] to <partner_type>
	event_apply_emplacement.partner_type


 processing: event_apply_emplacement.available_service_location.service_location

Info: Add virtual field [event_apply_emplacements(es)] to <available_service_location>
	event_apply_emplacement.service_location


 processing: event_apply_emplacement.change_request.change_request

Info: Add virtual field [event_apply_emplacements(es)] to <change_request>
	event_apply_emplacement.change_request


 processing: event_material_change_audit


 processing: event_material_change_audit.change_request.change_request

Info: Add virtual field [event_material_change_audits(es)] to <change_request>
	event_material_change_audit.change_request


 processing: event_project_progress


 processing: event_project_progress.project_progress_status.project_progress_status

Info: Add virtual field [event_project_progresss(es)] to <project_progress_status>
	event_project_progress.project_progress_status


 processing: event_project_progress.change_request.change_request

Info: Add virtual field [event_project_progresss(es)] to <change_request>
	event_project_progress.change_request


 processing: event_contract_review


 processing: event_contract_review.change_request.change_request

Info: Add virtual field [event_contract_reviews(es)] to <change_request>
	event_contract_review.change_request


 processing: event_apply_for_advance_compensation


 processing: event_apply_for_advance_compensation.change_request.change_request

Info: Add virtual field [event_apply_for_advance_compensations(es)] to <change_request>
	event_apply_for_advance_compensation.change_request


 processing: event_contract_comment


 processing: event_contract_comment.change_request.change_request

Info: Add virtual field [event_contract_comments(es)] to <change_request>
	event_contract_comment.change_request


 processing: business_type


 processing: business_type.platform.platform

Info: Add virtual field [business_types(es)] to <platform>
	business_type.platform


 processing: audit_status


 processing: audit_status.platform.platform

Info: Add virtual field [audit_statuss(es)] to <platform>
	audit_status.platform


 processing: audit_record


 processing: audit_record.audit_status.status

Info: Add virtual field [audit_records(es)] to <audit_status>
	audit_record.status


 processing: audit_record.merchant.reviewer

Info: Add virtual field [audit_records(es)] to <merchant>
	audit_record.reviewer


 processing: comments_record


 processing: comments_record.merchant.submitter

Info: Add virtual field [comments_records(es)] to <merchant>
	comments_record.submitter


 processing: cc_record


 processing: cc_record.merchant.cc_to

Info: Add virtual field [cc_records(es)] to <merchant>
	cc_record.cc_to


 processing: contract_template_file


 processing: contract_template_file.platform.platform

Info: Add virtual field [contract_template_files(es)] to <platform>
	contract_template_file.platform


 processing: finance_template


 processing: finance_template.platform.platform

Info: Add virtual field [finance_templates(es)] to <platform>
	finance_template.platform


 processing: five_book_template


 processing: five_book_template.platform.platform

Info: Add virtual field [five_book_templates(es)] to <platform>
	five_book_template.platform


 processing: project_engineering_template


 processing: project_engineering_template.platform.platform

Info: Add virtual field [project_engineering_templates(es)] to <platform>
	project_engineering_template.platform


 processing: process_map


 processing: process_map.process.process

Info: Add virtual field [process_maps(es)] to <process>
	process_map.process


 processing: process_map.platform.platform

Info: Add virtual field [process_maps(es)] to <platform>
	process_map.platform


 processing: process


 processing: process.employee_nomination.creator

Info: Add virtual field [processs(es)] to <employee_nomination>
	process.creator


 processing: process.platform.platform

Info: Add virtual field [processs(es)] to <platform>
	process.platform


 processing: todo_list


 processing: todo_list.employee_nomination.creator

Info: Add virtual field [todo_lists(es)] to <employee_nomination>
	todo_list.creator


 processing: todo_list.merchant.owner

Info: Add virtual field [todo_lists(es)] to <merchant>
	todo_list.owner


 processing: todo_list.todo_list_status.todo_list_status

Info: Add virtual field [todo_lists(es)] to <todo_list_status>
	todo_list.todo_list_status


 processing: todo_list.platform.platform

Info: Add virtual field [todo_lists(es)] to <platform>
	todo_list.platform


 processing: todo_list_status


 processing: todo_list_status.platform.platform

Info: Add virtual field [todo_list_statuss(es)] to <platform>
	todo_list_status.platform


 processing: process_audit


 processing: process_audit.process.process

Info: Add virtual field [process_audits(es)] to <process>
	process_audit.process


 processing: process_audit.merchant.auditor

Info: Add virtual field [process_audits(es)] to <merchant>
	process_audit.auditor


 processing: process_audit.platform.platform

Info: Add virtual field [process_audits(es)] to <platform>
	process_audit.platform


 processing: process_application


 processing: process_application.employee_nomination.creator

Info: Add virtual field [process_applications(es)] to <employee_nomination>
	process_application.creator


 processing: process_application.merchant.owner

Info: Add virtual field [process_applications(es)] to <merchant>
	process_application.owner


 processing: process_application.platform.platform

Info: Add virtual field [process_applications(es)] to <platform>
	process_application.platform


 processing: contract_ledger


 processing: contract_ledger.contract_type.contract_type

Info: Add virtual field [contract_ledgers(es)] to <contract_type>
	contract_ledger.contract_type


 processing: contract_ledger.standard_contract.project_participator_contract

Info: Add virtual field [contract_ledgers(es)] to <standard_contract>
	contract_ledger.project_participator_contract


 processing: contract_ledger.standard_contract.project_running_contract

Info: Add virtual field [contract_ledgers(es)] to <standard_contract>
	contract_ledger.project_running_contract


 processing: contract_ledger.standard_contract.work_package_participator_contract

Info: Add virtual field [contract_ledgers(es)] to <standard_contract>
	contract_ledger.work_package_participator_contract


 processing: contract_ledger.merchant.first_part_merchant

Info: Add virtual field [contract_ledgers(es)] to <merchant>
	contract_ledger.first_part_merchant


 processing: contract_ledger.merchant.second_part_merchant

Info: Add virtual field [contract_ledgers(es)] to <merchant>
	contract_ledger.second_part_merchant


 processing: contract_ledger.platform.platform

Info: Add virtual field [contract_ledgers(es)] to <platform>
	contract_ledger.platform


 processing: contract_risk


 processing: contract_risk.contract_type.contract_type

Info: Add virtual field [contract_risks(es)] to <contract_type>
	contract_risk.contract_type


 processing: contract_risk.standard_contract.project_participator_contract

Info: Add virtual field [contract_risks(es)] to <standard_contract>
	contract_risk.project_participator_contract


 processing: contract_risk.standard_contract.project_running_contract

Info: Add virtual field [contract_risks(es)] to <standard_contract>
	contract_risk.project_running_contract


 processing: contract_risk.standard_contract.work_package_participator_contract

Info: Add virtual field [contract_risks(es)] to <standard_contract>
	contract_risk.work_package_participator_contract


 processing: contract_risk.merchant.owner

Info: Add virtual field [contract_risks(es)] to <merchant>
	contract_risk.owner


 processing: contract_risk.platform.platform

Info: Add virtual field [contract_risks(es)] to <platform>
	contract_risk.platform


 processing: contract_report


 processing: contract_report.contract_type.contract_type

Info: Add virtual field [contract_reports(es)] to <contract_type>
	contract_report.contract_type


 processing: contract_report.standard_contract.project_participator_contract

Info: Add virtual field [contract_reports(es)] to <standard_contract>
	contract_report.project_participator_contract


 processing: contract_report.standard_contract.project_running_contract

Info: Add virtual field [contract_reports(es)] to <standard_contract>
	contract_report.project_running_contract


 processing: contract_report.standard_contract.work_package_participator_contract

Info: Add virtual field [contract_reports(es)] to <standard_contract>
	contract_report.work_package_participator_contract


 processing: contract_report.merchant.owner

Info: Add virtual field [contract_reports(es)] to <merchant>
	contract_report.owner


 processing: contract_report.platform.platform

Info: Add virtual field [contract_reports(es)] to <platform>
	contract_report.platform


 processing: contract_statistic_report


 processing: contract_statistic_report.contract_type.contract_type

Info: Add virtual field [contract_statistic_reports(es)] to <contract_type>
	contract_statistic_report.contract_type


 processing: contract_statistic_report.standard_contract.project_participator_contract

Info: Add virtual field [contract_statistic_reports(es)] to <standard_contract>
	contract_statistic_report.project_participator_contract


 processing: contract_statistic_report.standard_contract.project_running_contract

Info: Add virtual field [contract_statistic_reports(es)] to <standard_contract>
	contract_statistic_report.project_running_contract


 processing: contract_statistic_report.standard_contract.work_package_participator_contract

Info: Add virtual field [contract_statistic_reports(es)] to <standard_contract>
	contract_statistic_report.work_package_participator_contract


 processing: contract_statistic_report.merchant.owner

Info: Add virtual field [contract_statistic_reports(es)] to <merchant>
	contract_statistic_report.owner


 processing: contract_statistic_report.platform.platform

Info: Add virtual field [contract_statistic_reports(es)] to <platform>
	contract_statistic_report.platform


 processing: project_statistic_report


 processing: project_statistic_report.project.project

Info: Add virtual field [project_statistic_reports(es)] to <project>
	project_statistic_report.project


 processing: project_statistic_report.merchant.owner

Info: Add virtual field [project_statistic_reports(es)] to <merchant>
	project_statistic_report.owner


 processing: project_statistic_report.platform.platform

Info: Add virtual field [project_statistic_reports(es)] to <platform>
	project_statistic_report.platform


 processing: service_vendor_statistic_report


 processing: service_vendor_statistic_report.merchant.vendor

Info: Add virtual field [service_vendor_statistic_reports(es)] to <merchant>
	service_vendor_statistic_report.vendor


 processing: service_vendor_statistic_report.merchant.owner

Info: Add virtual field [service_vendor_statistic_reports(es)] to <merchant>
	service_vendor_statistic_report.owner


 processing: service_vendor_statistic_report.platform.platform

Info: Add virtual field [service_vendor_statistic_reports(es)] to <platform>
	service_vendor_statistic_report.platform


 processing: financial_service_statistic_report


 processing: financial_service_statistic_report.loan_fund.loan_fund

Info: Add virtual field [financial_service_statistic_reports(es)] to <loan_fund>
	financial_service_statistic_report.loan_fund


 processing: financial_service_statistic_report.loan_application.loan_application

Info: Add virtual field [financial_service_statistic_reports(es)] to <loan_application>
	financial_service_statistic_report.loan_application


 processing: financial_service_statistic_report.loan_contract.loan_contract

Info: Add virtual field [financial_service_statistic_reports(es)] to <loan_contract>
	financial_service_statistic_report.loan_contract


 processing: financial_service_statistic_report.merchant.owner

Info: Add virtual field [financial_service_statistic_reports(es)] to <merchant>
	financial_service_statistic_report.owner


 processing: financial_service_statistic_report.platform.platform

Info: Add virtual field [financial_service_statistic_reports(es)] to <platform>
	financial_service_statistic_report.platform


 processing: recruitment_requirement


 processing: recruitment_requirement.merchant.employee

Info: Add virtual field [recruitment_requirements(es)] to <merchant>
	recruitment_requirement.employee


 processing: recruitment_requirement.platform.platform

Info: Add virtual field [recruitment_requirements(es)] to <platform>
	recruitment_requirement.platform


 processing: job_position


 processing: job_position.recruitment_requirement.recruitment_requirement

Info: Add virtual field [job_positions(es)] to <recruitment_requirement>
	job_position.recruitment_requirement


 processing: job_position.platform.platform

Info: Add virtual field [job_positions(es)] to <platform>
	job_position.platform


 processing: candidate_talent


 processing: candidate_talent.job_position.job_position

Info: Add virtual field [candidate_talents(es)] to <job_position>
	candidate_talent.job_position


 processing: candidate_talent.merchant.candidate

Info: Add virtual field [candidate_talents(es)] to <merchant>
	candidate_talent.candidate


 processing: candidate_talent.platform.platform

Info: Add virtual field [candidate_talents(es)] to <platform>
	candidate_talent.platform


 processing: staff_files


 processing: staff_files.merchant.employer

Info: Add virtual field [staff_filess(es)] to <merchant>
	staff_files.employer


 processing: staff_files.merchant.employee

Info: Add virtual field [staff_filess(es)] to <merchant>
	staff_files.employee


 processing: staff_files.employee_nomination.employment

Info: Add virtual field [staff_filess(es)] to <employee_nomination>
	staff_files.employment


 processing: staff_files.platform.platform

Info: Add virtual field [staff_filess(es)] to <platform>
	staff_files.platform


 processing: employee_relation


 processing: employee_relation.merchant.employer

Info: Add virtual field [employee_relations(es)] to <merchant>
	employee_relation.employer


 processing: employee_relation.merchant.employee

Info: Add virtual field [employee_relations(es)] to <merchant>
	employee_relation.employee


 processing: employee_relation.employee_nomination.employment

Info: Add virtual field [employee_relations(es)] to <employee_nomination>
	employee_relation.employment


 processing: employee_relation.platform.platform

Info: Add virtual field [employee_relations(es)] to <platform>
	employee_relation.platform


 processing: employee_salary


 processing: employee_salary.merchant.employer

Info: Add virtual field [employee_salarys(es)] to <merchant>
	employee_salary.employer


 processing: employee_salary.platform.platform

Info: Add virtual field [employee_salarys(es)] to <platform>
	employee_salary.platform


 processing: employee_performance


 processing: employee_performance.merchant.employee

Info: Add virtual field [employee_performances(es)] to <merchant>
	employee_performance.employee


 processing: employee_performance.merchant.employer

Info: Add virtual field [employee_performances(es)] to <merchant>
	employee_performance.employer


 processing: employee_performance.platform.platform

Info: Add virtual field [employee_performances(es)] to <platform>
	employee_performance.platform


 processing: merchant_seal


 processing: merchant_seal.merchant.owner

Info: Add virtual field [merchant_seals(es)] to <merchant>
	merchant_seal.owner


 processing: merchant_seal.platform.platform

Info: Add virtual field [merchant_seals(es)] to <platform>
	merchant_seal.platform


 processing: cooperate_application


 processing: cooperate_application.platform.platform

Info: Add virtual field [cooperate_applications(es)] to <platform>
	cooperate_application.platform


 processing: project_application


 processing: project_application.platform.platform

Info: Add virtual field [project_applications(es)] to <platform>
	project_application.platform


 processing: project_attract_investment


 processing: project_attract_investment.project.project

Info: Add virtual field [project_attract_investments(es)] to <project>
	project_attract_investment.project


 processing: project_attract_investment.merchant.post_by

Info: Add virtual field [project_attract_investments(es)] to <merchant>
	project_attract_investment.post_by


 processing: project_attract_investment.platform.platform

Info: Add virtual field [project_attract_investments(es)] to <platform>
	project_attract_investment.platform


 processing: serivce_vendor_attract_investment


 processing: serivce_vendor_attract_investment.merchant.post_by

Info: Add virtual field [serivce_vendor_attract_investments(es)] to <merchant>
	serivce_vendor_attract_investment.post_by


 processing: serivce_vendor_attract_investment.platform.platform

Info: Add virtual field [serivce_vendor_attract_investments(es)] to <platform>
	serivce_vendor_attract_investment.platform


 processing: brand_attract_investment


 processing: brand_attract_investment.merchant.post_by

Info: Add virtual field [brand_attract_investments(es)] to <merchant>
	brand_attract_investment.post_by


 processing: brand_attract_investment.platform.platform

Info: Add virtual field [brand_attract_investments(es)] to <platform>
	brand_attract_investment.platform


 processing: project_settlement


 processing: project_settlement.project.project

Info: Add virtual field [project_settlements(es)] to <project>
	project_settlement.project


 processing: project_settlement.merchant.responsible_merchant

Info: Add virtual field [project_settlements(es)] to <merchant>
	project_settlement.responsible_merchant


 processing: project_settlement.platform.platform

Info: Add virtual field [project_settlements(es)] to <platform>
	project_settlement.platform


 processing: service_vendor_settlement


 processing: service_vendor_settlement.merchant.vendor

Info: Add virtual field [service_vendor_settlements(es)] to <merchant>
	service_vendor_settlement.vendor


 processing: service_vendor_settlement.platform.platform

Info: Add virtual field [service_vendor_settlements(es)] to <platform>
	service_vendor_settlement.platform


 processing: brand_partner_settlement


 processing: brand_partner_settlement.merchant.partner

Info: Add virtual field [brand_partner_settlements(es)] to <merchant>
	brand_partner_settlement.partner


 processing: brand_partner_settlement.platform.platform

Info: Add virtual field [brand_partner_settlements(es)] to <platform>
	brand_partner_settlement.platform


 processing: merchant_verification


 processing: merchant_verification.merchant.merchant

Info: Add virtual field [merchant_verifications(es)] to <merchant>
	merchant_verification.merchant


 processing: merchant_verification.platform.platform

Info: Add virtual field [merchant_verifications(es)] to <platform>
	merchant_verification.platform


 processing: qualification_examination


 processing: qualification_examination.platform.platform

Info: Add virtual field [qualification_examinations(es)] to <platform>
	qualification_examination.platform


 processing: qualification_research


 processing: qualification_research.platform.platform

Info: Add virtual field [qualification_researchs(es)] to <platform>
	qualification_research.platform


 processing: partner_recommendation


 processing: partner_recommendation.merchant.partner

Info: Add virtual field [partner_recommendations(es)] to <merchant>
	partner_recommendation.partner


 processing: partner_recommendation.platform.platform

Info: Add virtual field [partner_recommendations(es)] to <platform>
	partner_recommendation.platform


 processing: project_directive


 processing: project_directive.merchant.responsible_merchant

Info: Add virtual field [project_directives(es)] to <merchant>
	project_directive.responsible_merchant


 processing: project_directive.merchant.post_by

Info: Add virtual field [project_directives(es)] to <merchant>
	project_directive.post_by


 processing: project_directive.platform.platform

Info: Add virtual field [project_directives(es)] to <platform>
	project_directive.platform


 processing: project_daily_report


 processing: project_daily_report.project.project

Info: Add virtual field [project_daily_reports(es)] to <project>
	project_daily_report.project


 processing: project_daily_report.merchant.reporter

Info: Add virtual field [project_daily_reports(es)] to <merchant>
	project_daily_report.reporter


 processing: project_daily_report.platform.platform

Info: Add virtual field [project_daily_reports(es)] to <platform>
	project_daily_report.platform


 processing: project_progress_report


 processing: project_progress_report.project.project

Info: Add virtual field [project_progress_reports(es)] to <project>
	project_progress_report.project


 processing: project_progress_report.merchant.reporter

Info: Add virtual field [project_progress_reports(es)] to <merchant>
	project_progress_report.reporter


 processing: project_progress_report.platform.platform

Info: Add virtual field [project_progress_reports(es)] to <platform>
	project_progress_report.platform


 processing: project_notification


 processing: project_notification.merchant.recipient_merchant

Info: Add virtual field [project_notifications(es)] to <merchant>
	project_notification.recipient_merchant


 processing: project_notification.merchant.post_by

Info: Add virtual field [project_notifications(es)] to <merchant>
	project_notification.post_by


 processing: project_notification.platform.platform

Info: Add virtual field [project_notifications(es)] to <platform>
	project_notification.platform


 processing: design


 processing: design.project.project

Info: Add virtual field [designs(es)] to <project>
	design.project


 processing: design.work_package.work_package

Info: Add virtual field [designs(es)] to <work_package>
	design.work_package


 processing: design.merchant.designer

Info: Add virtual field [designs(es)] to <merchant>
	design.designer


 processing: design.merchant.reviewer

Info: Add virtual field [designs(es)] to <merchant>
	design.reviewer


 processing: design.working_status.design_status

Info: Add virtual field [designs(es)] to <working_status>
	design.design_status


 processing: design.platform.platform

Info: Add virtual field [designs(es)] to <platform>
	design.platform


 processing: construction_schema


 processing: construction_schema.project.project

Info: Add virtual field [construction_schemas(es)] to <project>
	construction_schema.project


 processing: construction_schema.merchant.post_by

Info: Add virtual field [construction_schemas(es)] to <merchant>
	construction_schema.post_by


 processing: construction_schema.platform.platform

Info: Add virtual field [construction_schemas(es)] to <platform>
	construction_schema.platform


 processing: project_bid


 processing: project_bid.merchant.project_owner

Info: Add virtual field [project_bids(es)] to <merchant>
	project_bid.project_owner


 processing: project_bid.merchant.responsible_merchant

Info: Add virtual field [project_bids(es)] to <merchant>
	project_bid.responsible_merchant


 processing: project_bid.platform.platform

Info: Add virtual field [project_bids(es)] to <platform>
	project_bid.platform


 processing: labor_supervision


 processing: labor_supervision.merchant.employee

Info: Add virtual field [labor_supervisions(es)] to <merchant>
	labor_supervision.employee


 processing: labor_supervision.merchant.employer

Info: Add virtual field [labor_supervisions(es)] to <merchant>
	labor_supervision.employer


 processing: labor_supervision.task.work_task

Info: Add virtual field [labor_supervisions(es)] to <task>
	labor_supervision.work_task


 processing: labor_supervision.platform.platform

Info: Add virtual field [labor_supervisions(es)] to <platform>
	labor_supervision.platform


 processing: safety_instruction


 processing: safety_instruction.merchant.post_by

Info: Add virtual field [safety_instructions(es)] to <merchant>
	safety_instruction.post_by


 processing: safety_instruction.platform.platform

Info: Add virtual field [safety_instructions(es)] to <platform>
	safety_instruction.platform


 processing: design_change


 processing: design_change.merchant.designer

Info: Add virtual field [design_changes(es)] to <merchant>
	design_change.designer


 processing: design_change.design.design

Info: Add virtual field [design_changes(es)] to <design>
	design_change.design


 processing: design_change.merchant.sponsor

Info: Add virtual field [design_changes(es)] to <merchant>
	design_change.sponsor


 processing: design_change.project.project

Info: Add virtual field [design_changes(es)] to <project>
	design_change.project


 processing: design_change.platform.platform

Info: Add virtual field [design_changes(es)] to <platform>
	design_change.platform


 processing: violation


 processing: violation.project.project

Info: Add virtual field [violations(es)] to <project>
	violation.project


 processing: violation.work_package.related_work_package

Info: Add virtual field [violations(es)] to <work_package>
	violation.related_work_package


 processing: violation.merchant.responsible_merchant

Info: Add virtual field [violations(es)] to <merchant>
	violation.responsible_merchant


 processing: violation.merchant.impact_merchant

Info: Add virtual field [violations(es)] to <merchant>
	violation.impact_merchant


 processing: violation.platform.platform

Info: Add virtual field [violations(es)] to <platform>
	violation.platform


 processing: project_funding


 processing: project_funding.project.project

Info: Add virtual field [project_fundings(es)] to <project>
	project_funding.project


 processing: project_funding.platform.platform

Info: Add virtual field [project_fundings(es)] to <platform>
	project_funding.platform


 processing: construction_start_working_files


 processing: construction_start_working_files.merchant.upload_user

Info: Add virtual field [construction_start_working_filess(es)] to <merchant>
	construction_start_working_files.upload_user


 processing: construction_start_working_files.platform.platform

Info: Add virtual field [construction_start_working_filess(es)] to <platform>
	construction_start_working_files.platform


 processing: construction_start_working_files.project.project

Info: Add virtual field [construction_start_working_filess(es)] to <project>
	construction_start_working_files.project


 processing: qualitiy_acceptance_files


 processing: qualitiy_acceptance_files.merchant.upload_user

Info: Add virtual field [qualitiy_acceptance_filess(es)] to <merchant>
	qualitiy_acceptance_files.upload_user


 processing: qualitiy_acceptance_files.platform.platform

Info: Add virtual field [qualitiy_acceptance_filess(es)] to <platform>
	qualitiy_acceptance_files.platform


 processing: qualitiy_acceptance_files.project.project

Info: Add virtual field [qualitiy_acceptance_filess(es)] to <project>
	qualitiy_acceptance_files.project


 processing: engineering_experiment_files


 processing: engineering_experiment_files.merchant.upload_user

Info: Add virtual field [engineering_experiment_filess(es)] to <merchant>
	engineering_experiment_files.upload_user


 processing: engineering_experiment_files.platform.platform

Info: Add virtual field [engineering_experiment_filess(es)] to <platform>
	engineering_experiment_files.platform


 processing: engineering_experiment_files.project.project

Info: Add virtual field [engineering_experiment_filess(es)] to <project>
	engineering_experiment_files.project


 processing: construction_process_files


 processing: construction_process_files.merchant.upload_user

Info: Add virtual field [construction_process_filess(es)] to <merchant>
	construction_process_files.upload_user


 processing: construction_process_files.platform.platform

Info: Add virtual field [construction_process_filess(es)] to <platform>
	construction_process_files.platform


 processing: construction_process_files.project.project

Info: Add virtual field [construction_process_filess(es)] to <project>
	construction_process_files.project


 processing: necessary_supplement_files


 processing: necessary_supplement_files.merchant.upload_user

Info: Add virtual field [necessary_supplement_filess(es)] to <merchant>
	necessary_supplement_files.upload_user


 processing: necessary_supplement_files.platform.platform

Info: Add virtual field [necessary_supplement_filess(es)] to <platform>
	necessary_supplement_files.platform


 processing: necessary_supplement_files.project.project

Info: Add virtual field [necessary_supplement_filess(es)] to <project>
	necessary_supplement_files.project


 processing: construction_completion_files


 processing: construction_completion_files.merchant.upload_user

Info: Add virtual field [construction_completion_filess(es)] to <merchant>
	construction_completion_files.upload_user


 processing: construction_completion_files.platform.platform

Info: Add virtual field [construction_completion_filess(es)] to <platform>
	construction_completion_files.platform


 processing: construction_completion_files.project.project

Info: Add virtual field [construction_completion_filess(es)] to <project>
	construction_completion_files.project


 processing: engineering_quality_supervision_files


 processing: engineering_quality_supervision_files.merchant.upload_user

Info: Add virtual field [engineering_quality_supervision_filess(es)] to <merchant>
	engineering_quality_supervision_files.upload_user


 processing: engineering_quality_supervision_files.platform.platform

Info: Add virtual field [engineering_quality_supervision_filess(es)] to <platform>
	engineering_quality_supervision_files.platform


 processing: engineering_quality_supervision_files.project.project

Info: Add virtual field [engineering_quality_supervision_filess(es)] to <project>
	engineering_quality_supervision_files.project


 processing: project_files_archive


 processing: project_files_archive.merchant.upload_user

Info: Add virtual field [project_files_archives(es)] to <merchant>
	project_files_archive.upload_user


 processing: project_files_archive.platform.platform

Info: Add virtual field [project_files_archives(es)] to <platform>
	project_files_archive.platform


 processing: project_files_archive.project.project

Info: Add virtual field [project_files_archives(es)] to <project>
	project_files_archive.project


 processing: engineering_quality_supervision_archive


 processing: engineering_quality_supervision_archive.merchant.upload_user

Info: Add virtual field [engineering_quality_supervision_archives(es)] to <merchant>
	engineering_quality_supervision_archive.upload_user


 processing: engineering_quality_supervision_archive.platform.platform

Info: Add virtual field [engineering_quality_supervision_archives(es)] to <platform>
	engineering_quality_supervision_archive.platform


 processing: engineering_quality_supervision_archive.project.project

Info: Add virtual field [engineering_quality_supervision_archives(es)] to <project>
	engineering_quality_supervision_archive.project


 processing: contract_collection


 processing: contract_collection.platform.platform

Info: Add virtual field [contract_collections(es)] to <platform>
	contract_collection.platform


 processing: contract_payment


 processing: contract_payment.platform.platform

Info: Add virtual field [contract_payments(es)] to <platform>
	contract_payment.platform


 processing: contract_settlement


 processing: contract_settlement.platform.platform

Info: Add virtual field [contract_settlements(es)] to <platform>
	contract_settlement.platform


 processing: economic_verification_form


 processing: economic_verification_form.merchant.service_vendor

Info: Add virtual field [economic_verification_forms(es)] to <merchant>
	economic_verification_form.service_vendor


 processing: economic_verification_form.employee_nomination.responsible_employee

Info: Add virtual field [economic_verification_forms(es)] to <employee_nomination>
	economic_verification_form.responsible_employee


 processing: economic_verification_form.merchant_seal.merchant_seal

Info: Add virtual field [economic_verification_forms(es)] to <merchant_seal>
	economic_verification_form.merchant_seal


 processing: economic_verification_form.platform.platform

Info: Add virtual field [economic_verification_forms(es)] to <platform>
	economic_verification_form.platform


 processing: project_objective


 processing: project_objective.project.project

Info: Add virtual field [project_objectives(es)] to <project>
	project_objective.project


 processing: project_objective.merchant.service_store

Info: Add virtual field [project_objectives(es)] to <merchant>
	project_objective.service_store


 processing: project_objective.platform.platform

Info: Add virtual field [project_objectives(es)] to <platform>
	project_objective.platform


 processing: project_progress_funding_trusteeship_plan


 processing: project_progress_funding_trusteeship_plan.project.project

Info: Add virtual field [project_progress_funding_trusteeship_plans(es)] to <project>
	project_progress_funding_trusteeship_plan.project


 processing: project_progress_funding_trusteeship_plan.merchant.owner

Info: Add virtual field [project_progress_funding_trusteeship_plans(es)] to <merchant>
	project_progress_funding_trusteeship_plan.owner


 processing: project_progress_funding_trusteeship_plan.merchant.service_store

Info: Add virtual field [project_progress_funding_trusteeship_plans(es)] to <merchant>
	project_progress_funding_trusteeship_plan.service_store


 processing: project_progress_funding_trusteeship_plan.platform.platform

Info: Add virtual field [project_progress_funding_trusteeship_plans(es)] to <platform>
	project_progress_funding_trusteeship_plan.platform


 processing: contract_examine


 processing: contract_examine.platform.platform

Info: Add virtual field [contract_examines(es)] to <platform>
	contract_examine.platform


 processing: funding_close_trusteeship_contract


 processing: funding_close_trusteeship_contract.contract_template_file.contract_template_file

Info: Add virtual field [funding_close_trusteeship_contracts(es)] to <contract_template_file>
	funding_close_trusteeship_contract.contract_template_file


 processing: funding_close_trusteeship_contract.merchant.funding_vendor

Info: Add virtual field [funding_close_trusteeship_contracts(es)] to <merchant>
	funding_close_trusteeship_contract.funding_vendor


 processing: funding_close_trusteeship_contract.merchant.funding_consumer

Info: Add virtual field [funding_close_trusteeship_contracts(es)] to <merchant>
	funding_close_trusteeship_contract.funding_consumer


 processing: funding_close_trusteeship_contract.platform.platform

Info: Add virtual field [funding_close_trusteeship_contracts(es)] to <platform>
	funding_close_trusteeship_contract.platform


 processing: project_close_trusteeship_contract


 processing: project_close_trusteeship_contract.contract_template_file.contract_template_file

Info: Add virtual field [project_close_trusteeship_contracts(es)] to <contract_template_file>
	project_close_trusteeship_contract.contract_template_file


 processing: project_close_trusteeship_contract.project.project

Info: Add virtual field [project_close_trusteeship_contracts(es)] to <project>
	project_close_trusteeship_contract.project


 processing: project_close_trusteeship_contract.platform.platform

Info: Add virtual field [project_close_trusteeship_contracts(es)] to <platform>
	project_close_trusteeship_contract.platform


 processing: project_close_trusteeship_contract.merchant.owner

Info: Add virtual field [project_close_trusteeship_contracts(es)] to <merchant>
	project_close_trusteeship_contract.owner


 processing: project_close_trusteeship_contract.merchant.store

Info: Add virtual field [project_close_trusteeship_contracts(es)] to <merchant>
	project_close_trusteeship_contract.store


 processing: funding_close_organization


 processing: funding_close_organization.funding_close_organization_type.funding_close_organization_type

Info: Add virtual field [funding_close_organizations(es)] to <funding_close_organization_type>
	funding_close_organization.funding_close_organization_type


 processing: funding_close_organization.merchant.merchant

Info: Add virtual field [funding_close_organizations(es)] to <merchant>
	funding_close_organization.merchant


 processing: funding_close_organization.platform.platform

Info: Add virtual field [funding_close_organizations(es)] to <platform>
	funding_close_organization.platform


 processing: funding_close_organization_type


 processing: funding_close_organization_type.platform.platform

Info: Add virtual field [funding_close_organization_types(es)] to <platform>
	funding_close_organization_type.platform


 processing: task_order


 processing: task_order.task.task

Info: Add virtual field [task_orders(es)] to <task>
	task_order.task


 processing: task_order.task_order_status.status

Info: Add virtual field [task_orders(es)] to <task_order_status>
	task_order.status


 processing: task_order.merchant.buyer_merchant

Info: Add virtual field [task_orders(es)] to <merchant>
	task_order.buyer_merchant


 processing: task_order.merchant.service_merchant

Info: Add virtual field [task_orders(es)] to <merchant>
	task_order.service_merchant


 processing: task_order.merchant.store_merchant

Info: Add virtual field [task_orders(es)] to <merchant>
	task_order.store_merchant


 processing: task_order.platform.platform

Info: Add virtual field [task_orders(es)] to <platform>
	task_order.platform


 processing: task_order_status


 processing: task_order_status.platform.platform

Info: Add virtual field [task_order_statuss(es)] to <platform>
	task_order_status.platform


 processing: work_package_acceptance_settlement


 processing: work_package_acceptance_settlement.work_package.work_package

Info: Add virtual field [work_package_acceptance_settlements(es)] to <work_package>
	work_package_acceptance_settlement.work_package


 processing: work_package_acceptance_settlement.merchant.service_vendor

Info: Add virtual field [work_package_acceptance_settlements(es)] to <merchant>
	work_package_acceptance_settlement.service_vendor


 processing: work_package_acceptance_settlement.platform.platform

Info: Add virtual field [work_package_acceptance_settlements(es)] to <platform>
	work_package_acceptance_settlement.platform


 processing: project_acceptance_settlement


 processing: project_acceptance_settlement.project.project

Info: Add virtual field [project_acceptance_settlements(es)] to <project>
	project_acceptance_settlement.project


 processing: project_acceptance_settlement.merchant.owner

Info: Add virtual field [project_acceptance_settlements(es)] to <merchant>
	project_acceptance_settlement.owner


 processing: project_acceptance_settlement.platform.platform

Info: Add virtual field [project_acceptance_settlements(es)] to <platform>
	project_acceptance_settlement.platform


 processing: yourong_document


 processing: yourong_document.platform.platform

Info: Add virtual field [yourong_documents(es)] to <platform>
	yourong_document.platform


 processing: user_guide


 processing: user_guide.platform.platform

Info: Add virtual field [user_guides(es)] to <platform>
	user_guide.platform


**************************************************

meta{name=platform, features=custom}
platform{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('优荣装配管理平台'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(139){
		platformConfigurationList	platform(系统配置)--platform;
		contractTemplateList	platform(合同管理)--platform;
		contractTypeList	platform(__no_group)--platform;
		contractCategoryList	platform(__no_group)--platform;
		contractStatusList	platform(__no_group)--platform;
		standardContractList	platform(合同管理)--platform;
		supplementaryContractList	platform(合同管理)--platform;
		payItemStatusList	platform(__no_group)--platform;
		licenseCategoryList	platform(__no_group)--platform;
		licenseIndustryTypeList	platform(__no_group)--platform;
		validateStatusList	platform(__no_group)--platform;
		authenticateStatusList	platform(__no_group)--platform;
		licenseList	platform(人力资源)--platform;
		merchantBaseTypeList	platform(__no_group)--platform;
		merchantStatusList	platform(__no_group)--platform;
		merchantTypeList	platform(__no_group)--platform;
		merchantList	platform(人力资源)--platform;
		industryTypeList	platform(人力资源)--platform;
		engineeringTypeList	platform(人力资源)--platform;
		careerTypeList	platform(人力资源)--platform;
		roleList	platform(__no_group)--platform;
		jobList	platform(__no_group)--platform;
		employeeNominationList	platform(人力资源)--platform;
		taskStatusList	platform(__no_group)--platform;
		workStatusList	platform(__no_group)--platform;
		workPackageTypeList	platform(__no_group)--platform;
		projectList	platform(项目运营)--platform;
		projectTypeList	platform(__no_group)--platform;
		projectServiceTypeList	platform(__no_group)--platform;
		projectPhaseList	platform(__no_group)--platform;
		workingStatusList	platform(__no_group)--platform;
		projectOrganizationTypeList	platform(__no_group)--platform;
		projectRoleList	platform(__no_group)--platform;
		projectProgressStatusList	platform(__no_group)--platform;
		dailyTaskCategoryList	platform(__no_group)--platform;
		dailyTaskTypeList	platform(__no_group)--platform;
		dailyTaskSecondTypeList	platform(__no_group)--platform;
		dailyTaskThirdTypeList	platform(__no_group)--platform;
		dailyTaskTemplateList	platform(项目运营)--platform;
		projectMaterialTypeList	platform(__no_group)--platform;
		projectMaterialParentTypeList	platform(__no_group)--platform;
		projectMaterialReviewStatusList	platform(__no_group)--platform;
		materialReviewResultList	platform(__no_group)--platform;
		yourongProjectBookStatusList	platform(__no_group)--platform;
		yourongProjectBookTypeList	platform(__no_group)--platform;
		laborDisputeStatusList	platform(__no_group)--platform;
		laborDisputeTypeList	platform(__no_group)--platform;
		loanFundList	platform(金融服务)--platform;
		loanApplicationList	platform(金融服务)--platform;
		loanContractList	platform(金融服务)--platform;
		materialCategoryList	platform(项目运营)--platform;
		materialTypeList	platform(项目运营)--platform;
		materialUnitOfMeasurementList	platform(项目运营)--platform;
		accountBookTypeList	platform(__no_group)--platform;
		accountBookItemStatusList	platform(__no_group)--platform;
		recommendationList	platform(平台营销)--platform;
		emplacementApplicationList	platform(平台营销)--platform;
		personalEmplacementApplicationList	platform(平台营销)--platform;
		customerProjectApplicationList	platform(平台营销)--platform;
		partnerSettlementApplicationList	platform(平台营销)--platform;
		changeRequestTypeList	platform(__no_group)--platform;
		changeRequestList	platform(平台追踪)--platform;
		businessTypeList	platform(__no_group)--platform;
		auditStatusList	platform(__no_group)--platform;
		contractTemplateFileList	platform(模板中心)--platform;
		financeTemplateList	platform(模板中心)--platform;
		fiveBookTemplateList	platform(模板中心)--platform;
		projectEngineeringTemplateList	platform(模板中心)--platform;
		processMapList	platform(流程管理)--platform;
		processList	platform(流程管理)--platform;
		todoListList	platform(流程管理)--platform;
		todoListStatusList	platform(__no_group)--platform;
		processAuditList	platform(流程管理)--platform;
		processApplicationList	platform(流程管理)--platform;
		contractLedgerList	platform(合同管理)--platform;
		contractRiskList	platform(合同管理)--platform;
		contractReportList	platform(合同管理)--platform;
		contractStatisticReportList	platform(大数据)--platform;
		projectStatisticReportList	platform(大数据)--platform;
		serviceVendorStatisticReportList	platform(大数据)--platform;
		financialServiceStatisticReportList	platform(大数据)--platform;
		recruitmentRequirementList	platform(人力资源)--platform;
		jobPositionList	platform(人力资源)--platform;
		candidateTalentList	platform(人力资源)--platform;
		staffFilesList	platform(人力资源)--platform;
		employeeRelationList	platform(人力资源)--platform;
		employeeSalaryList	platform(人力资源)--platform;
		employeePerformanceList	platform(人力资源)--platform;
		merchantSealList	platform(商户管理)--platform;
		cooperateApplicationList	platform(商户管理)--platform;
		projectApplicationList	platform(商户管理)--platform;
		projectAttractInvestmentList	platform(商户管理)--platform;
		serivceVendorAttractInvestmentList	platform(商户管理)--platform;
		brandAttractInvestmentList	platform(商户管理)--platform;
		projectSettlementList	platform(商户管理)--platform;
		serviceVendorSettlementList	platform(商户管理)--platform;
		brandPartnerSettlementList	platform(商户管理)--platform;
		merchantVerificationList	platform(商户管理)--platform;
		qualificationExaminationList	platform(商户管理)--platform;
		qualificationResearchList	platform(商户管理)--platform;
		partnerRecommendationList	platform(平台营销)--platform;
		projectDirectiveList	platform(项目运营)--platform;
		projectDailyReportList	platform(项目运营)--platform;
		projectProgressReportList	platform(项目运营)--platform;
		projectNotificationList	platform(项目运营)--platform;
		designList	platform(项目运营)--platform;
		constructionSchemaList	platform(项目运营)--platform;
		projectBidList	platform(项目运营)--platform;
		laborSupervisionList	platform(项目运营)--platform;
		safetyInstructionList	platform(项目运营)--platform;
		designChangeList	platform(项目运营)--platform;
		violationList	platform(项目运营)--platform;
		projectFundingList	platform(项目运营)--platform;
		constructionStartWorkingFilesList	platform(项目资料)--platform;
		qualitiyAcceptanceFilesList	platform(项目资料)--platform;
		engineeringExperimentFilesList	platform(项目资料)--platform;
		constructionProcessFilesList	platform(项目资料)--platform;
		necessarySupplementFilesList	platform(项目资料)--platform;
		constructionCompletionFilesList	platform(项目资料)--platform;
		engineeringQualitySupervisionFilesList	platform(项目资料)--platform;
		projectFilesArchiveList	platform(项目资料)--platform;
		engineeringQualitySupervisionArchiveList	platform(项目资料)--platform;
		contractCollectionList	platform(财务管理)--platform;
		contractPaymentList	platform(财务管理)--platform;
		contractSettlementList	platform(财务管理)--platform;
		economicVerificationFormList	platform(财务管理)--platform;
		projectObjectiveList	platform(财务管理)--platform;
		projectProgressFundingTrusteeshipPlanList	platform(财务管理)--platform;
		contractExamineList	platform(财务管理)--platform;
		fundingCloseTrusteeshipContractList	platform(财务管理)--platform;
		projectCloseTrusteeshipContractList	platform(财务管理)--platform;
		fundingCloseOrganizationList	platform(财务管理)--platform;
		fundingCloseOrganizationTypeList	platform(__no_group)--platform;
		taskOrderList	platform(财务管理)--platform;
		taskOrderStatusList	platform(财务管理)--platform;
		workPackageAcceptanceSettlementList	platform(财务管理)--platform;
		projectAcceptanceSettlementList	platform(财务管理)--platform;
		yourongDocumentList	platform(项目资料)--platform;
		userGuideList	platform(使用指南)--platform;
	}
} depth=0; isRoot = true

meta{name=mobile_app}
mobile_app{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('移动端配置'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		pageList	mobile_app(页面管理)--mobile_app;
		pageTypeList	mobile_app(__no_group)--mobile_app;
		articleCategoryList	container(__no_group)--container;
		articleList	container(平台营销)--container;
	}
} depth=0; isRoot = true

meta{name=page, features=status, vg4mobile_app=页面管理}
page{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	page_title('小程序首页|金牌服务商|优选设计师|机构单位板块|商业协会板块|商业连锁板块|精装楼盘板块|旧改电梯|优质品牌|BIM应用'), verb: false, required: true,type:string;
		string	link_to_url('首页'), verb: false, required: true,type:string;
		page_type	page_type('$(object)'), verb: false, required: true, referenceBy: pageList,type:page_type;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageList,type:mobile_app;
		string	code('WXAPP_HOMEPAGE|GOLDEN_SERVICE|DESIGNER|ORGNIZATION|ASSOCIATION|BIZ_CHAIN|REAL_ESTATE|JGDT|YZPP|BIM'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		slideList	page(__no_group)--page;
		uiActionList	page(__no_group)--page;
		sectionList	page(__no_group)--page;
		welcomeSlideList	show_in(__no_group)--show_in;
	}
} depth=2; isRoot = false

meta{name=page_type, features=status, identified_by=code}
page_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('首页|我的|Generic Page|Listof Page|功能大厅|普通'), verb: false, required: true,type:string;
		string	code('home|me|generic-page|listof-page|service-center|simple'), verb: false, required: true,type:string;
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageTypeList,type:mobile_app;
		bool	footer_tab('true|false'), verb: false, required: true,type:bool;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		pageList	page_type(__no_group)--page_type;
	}
} depth=1; isRoot = false

meta{name=slide}
slide{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('首页Focus的内容'), verb: false, required: true,type:string;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string_image	video_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string	link_to_url('|/section/article/'), verb: false, required: false,type:string;
		page	page('$(object)'), verb: false, required: true, referenceBy: slideList,type:page;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=ui_action}
ui_action{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('submit|share|view|more'), verb: false, required: true,type:string;
		string	icon('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	title('提交|分享|查看|更多'), verb: false, required: true,type:string;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string	brief('Submit|Share|View|View More'), verb: false, required: true,type:string;
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string	link_to_url('wxappService/section/article/'), verb: false, required: true,type:string;
		string_longtext	extra_data('text()'), verb: false, required: true,type:string_longtext;
		page	page('$(object)'), verb: false, required: true, referenceBy: uiActionList,type:page;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=section}
section{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('文章|作品'), verb: false, required: true,type:string;
		string	brief('Article|Artwork'), verb: false, required: true,type:string;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string	view_group('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	link_to_url('wxappService/section/article/'), verb: false, required: true,type:string;
		page	page('$(object)'), verb: false, required: true, referenceBy: sectionList,type:page;
		article_category	article_category('$(object)'), verb: false, required: false, referenceBy: sectionList,type:article_category;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		pageArticleList	section(__no_group)--section;
	}
} depth=3; isRoot = false

meta{vg4platform=系统配置, name=platform_configuration}
platform_configuration{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string_image	homepage_action_background('https://yourongzhixing.com/mss/public/example/dssc/example/114/194/222/114/actionbk.jpg'), verb: false, required: true,type:string_image;
		string_image	default_service_fee_image('service_fee_image.jpg'), verb: false, required: true,type:string_image;
		string_image	default_project_fee_image('project_fee_image.jpg'), verb: false, required: true,type:string_image;
		string_image	default_task_fee_image('task_fee_image.jpg'), verb: false, required: true,type:string_image;
		string_image	default_fine_image('fine_image.jpg'), verb: false, required: true,type:string_image;
		string_image	default_merchant_image('personal_merchant.jpg'), verb: false, required: true,type:string_image;
		string_image	default_logo_image('personal_logo.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: platformConfigurationList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(6){
		iconConfigurationList	platform_configuration(__no_group)--platform_configuration;
		applicationStatusList	platform_configuration(__no_group)--platform_configuration;
		recommendationTypeList	platform_configuration(__no_group)--platform_configuration;
		estatePropertyTypeList	platform_configuration(__no_group)--platform_configuration;
		partnerTypeList	platform_configuration(__no_group)--platform_configuration;
		availableServiceLocationList	platform_configuration(__no_group)--platform_configuration;
	}
} depth=1; isRoot = false

meta{name=icon_configuration, features=status}
icon_configuration{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('我的推荐|装修申请|精装楼盘|商业连锁|商会协会|机构单位|我要装修|项目推荐|项目管理|企业入驻|项目封面|优荣五书|项目组织|合同任务|资料档案|管理员工|我的项目|我的账户|我的订单|切换账号|退出登录|测试|批注按钮|审核按钮|取消按钮|编辑按钮|添加按钮|银行卡|个人入驻|分包申请|精选设计|金牌服务|优质品牌|旧改电梯|BIM应用|超级账本|预期收支|合同对账|合同收款|合同付款|通知|审核|批注|认领|疑虑'), verb: false, required: true,type:string;
		string	code('ME_WDTJ|ME_ZXSQ|SY_RK_JZLP|SY_RK_SYLS|SY_RK_SHXH|SY_RK_JGDW|SY_GN_WYZX|SY_GN_XMTJ|SY_GN_XMGL|SY_GN_QYRZ|YM_XM_XMFM|XM_DT_YRWS|XM_DT_XMZZ|XM_DT_HTRW|XM_DT_ZLDA|ME_GLYG|ME_WDXM|ME_WDZH|ME_WDDD|ME_QHZH|ME_TCDL|TEST_FOR_YR|COMMENT_BTN|REVIEW_BTN|CANCEL_BTN|EDIT_BTN|ADD_BTN|DEBIT_CARD|SY_GN_GRRZ|SY_GN_FBSQ|SY_RK_JXSJ|SY_RK_JPFW|SY_RK_YZPP|SY_RK_JGDT|SY_RK_BIM|SUPER_ACCOUNT|EXPECTED_EXPENSE|CONTRACT_RECONCILIATION|CONTRACT_RECEIPT|CONTRACT_PAYMENT|NOTIFICATION|AUDIT|COMMENT|CONFIRM|CONCERN'), verb: false, required: true,type:string;
		string	description('我的推荐|装修申请|用于首页的‘精装楼盘’入口处的图标|用于首页的‘商业连锁’入口处的图标|用于首页的‘商会协会’入口处的图标|用于首页的‘机构单位’入口处的图标|用于首页中部的‘我要装修’申请入口的图标|用于首页中部的‘项目推荐’申请入口的图标|用于首页中部的‘项目管理’功能入口的图标|用于个人首页中部的‘我要入驻’功能入口的图标|用于页面上展示没有上传过项目图片的项目的时候，作为缺省的封面图|用于项目大厅里，幻灯片下方的 ‘优荣五书’ 的展示图标|用于项目大厅里，幻灯片下方的 ‘项目组织’ 的展示图标|用于项目大厅里，幻灯片下方的 ‘合同任务’ 的展示图标|用于项目大厅里，幻灯片下方的 ‘资料档案’ 的展示图标|用于'我的'页面, 管理员工的图标|用于'我的'页面, 我的项目的图标|用于'我的'页面, 我的账户的图标|用于'我的'页面, 我的订单的图标|用于'我的'页面, 切换账号的图标|用于'我的'页面, 登出登录的图标|用于测试图片功能是否正常，不会用于展示|批注按钮图标|审核按钮图标|取消按钮图标|编辑按钮图标|首页个人入驻图标|首页分包申请图标|首页精选设计图标|首页金牌服务图标|首页优质品牌图标|首页旧改电梯图标|首页营销中的BIM应用图标|用于我的页面-合同订单-超级账本|用于我的页面-合同订单-预期收支|用于我的页面-合同订单-合同对账|用于我的页面-合同订单-合同付款|合同订单顶部的通知图标|合同订单顶部的审核图标|合同订单顶部批注图标|合同订单顶部认领图标|合同订单顶部疑虑图标'), verb: false, required: true,type:string;
		string	icon('icon.jpg|form|form|form|form|form'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: iconConfigurationList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{vg4platform=合同管理, name=contract_template}
contract_template{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XX合同模板'), verb: false, required: true,type:string;
		contract_type	template_type('$(object)'), verb: false, required: true, referenceBy: contractTemplateList,type:contract_type;
		string_document	template('template.docx'), verb: false, required: true,type:string_document;
		employee_nomination	submitter('$(object)'), verb: false, required: false, referenceBy: contractTemplateList,type:employee_nomination;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractTemplateList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		standardContractList	contract_template(__no_group)--contract_template;
	}
} depth=5; isRoot = false

meta{name=contract_type, group_by=category, features=setting, identified_by=code}
contract_type{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目工程托管服务合同|项目资金委托授权管理合同|商户入驻合同|服务商项目管理平台服务合同|项目委托设计平台管理服务合同|项目工程分包合同|项目职业经理人聘用合同|项目委托设计合同|员工聘用合同|工程合同预期收益借款担保合同|平台项目资金委贷合同|服务商银行借款合同|品牌合作伙伴合同'), verb: false, required: true,type:string;
		string	code('PLATFORM_PROJECT_TRUST|PLATFORM_FUND_TRUST|VENDOR_SETTLEMENT|VENDOR_SERVICE|VENDOR_DESIGN|WORKPACKAGE_PACKAGE|WORKPACKAGE_MANAGEMENT|WORKPACKAGE_DESIGN|EMPLOYMENT|FINANCIAL_GUARANTEE|FINANCIAL_DEBIT|FINANCIAL_BANK|PARTNER'), verb: false, required: true,type:string;
		string	category('平台托管合同|平台托管合同|平台商户合同|平台商户合同|平台商户合同|平台分包合同|平台分包合同|平台分包合同|员工聘用合同|金融服务合同|金融服务合同|金融服务合同|品牌合作伙伴合同'), verb: false, required: true,type:string;
		contract_category	parent_category('$(object)'), verb: false, required: true, referenceBy: contractTypeList,type:contract_category;
		string_image	icon('contract.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(6){
		contractTemplateList	template_type(__no_group)--template_type;
		standardContractList	contract_type(__no_group)--contract_type;
		contractLedgerList	contract_type(__no_group)--contract_type;
		contractRiskList	contract_type(__no_group)--contract_type;
		contractReportList	contract_type(__no_group)--contract_type;
		contractStatisticReportList	contract_type(__no_group)--contract_type;
	}
} depth=2; isRoot = false

meta{name=contract_category, features=setting, identified_by=code}
contract_category{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('平台托管合同|平台商户合同|平台分包合同|员工聘用合同|金融服务合同|品牌合作伙伴合同'), verb: false, required: true,type:string;
		string	code('PLATFORM_EPC|PLATFORM_MERCHANT|PLATFORM_PACKAGE|PLATFORM_EMPLOYEE|PLATFORM_FINANCE|PLATFORM_BRAND'), verb: false, required: true,type:string;
		string_image	icon('contract.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractCategoryList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		contractTypeList	parent_category(__no_group)--parent_category;
	}
} depth=1; isRoot = false

meta{name=contract_status, features=status}
contract_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待确认|执行中|执行完毕|有风险|已取消'), verb: false, required: true,type:string;
		string	code('NEED_CONFIRM|FULFILLING|END_FULFILLED|RISK|CANCELLED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		standardContractList	contract_status(__no_group)--contract_status;
		supplementaryContractList	status(__no_group)--status;
		eventContractBasicInfoList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{vg4platform=合同管理, name=standard_contract, vg4project=合同管理, vg4party_b=合同管理, vg4party_a=合同管理}
standard_contract{
	fields(22){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('合同名称'), verb: false, required: true,type:string;
		string	contract_number('SWB-JS-2015-001(01)'), verb: false, required: true,type:string;
		merchant	party_a('$(object)'), verb: false, required: true, referenceBy: standardContractListAsPartyA,type:merchant;
		merchant	party_b('$(object)'), verb: false, required: true, referenceBy: standardContractListAsPartyB,type:merchant;
		contract_status	contract_status('$(object)'), verb: false, required: true, referenceBy: standardContractList,type:contract_status;
		contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: standardContractList,type:contract_type;
		contract_template	contract_template('$(object)'), verb: false, required: true, referenceBy: standardContractList,type:contract_template;
		images	images('images()'), verb: false, required: true,type:images;
		string_document	contract('contract.docx'), verb: false, required: true,type:string_document;
		date	start_date('2100-01-01'), verb: false, required: true,type:date;
		date	end_date('2100-01-01'), verb: false, required: true,type:date;
		string_longtext	contract_summary('text()'), verb: false, required: true,type:string_longtext;
		employee_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: standardContractList,type:employee_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		money	amount('$0.00|$9999999.99'), verb: false, required: true,type:money;
		project	project('$(object)'), verb: false, required: false, referenceBy: standardContractList,type:project;
		work_package	work_package('$(object)'), verb: false, required: false, referenceBy: standardContractList,type:work_package;
		task	task('$(object)'), verb: false, required: false, referenceBy: standardContractList,type:task;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: standardContractList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(30){
		contractPayItemList	contract(__no_group)--contract;
		supplementaryContractList	contract(__no_group)--contract;
		commissionPayItemList	contract(__no_group)--contract;
		contractReviewRecordList	contract(__no_group)--contract;
		contractCommentsRecordList	contract(__no_group)--contract;
		contractViewRecordList	contract(__no_group)--contract;
		contractOperationLogList	contract(__no_group)--contract;
		projectPenaltiesList	contract(__no_group)--contract;
		laborWageManagementSheetList	contract(__no_group)--contract;
		materialPreservedSampleList	contract(__no_group)--contract;
		materialBidSampleList	contract(__no_group)--contract;
		materialRecordList	contract(__no_group)--contract;
		materialChangeList	contract(__no_group)--contract;
		materialAcceptanceApplicationList	contract(__no_group)--contract;
		eventMaterialAcceptanceBasicInfoList	contract(__no_group)--contract;
		eventMaterialChangeContractInfoList	contract(__no_group)--contract;
		eventMaterialPreservedBasicInfoList	contract(__no_group)--contract;
		eventProjectPenaltiesList	work_package_contract(__no_group)--work_package_contract;
		contractLedgerListAsProjectParticipatorContract	project_participator_contract(__no_group)--project_participator_contract;
		contractLedgerListAsProjectRunningContract	project_running_contract(__no_group)--project_participator_contract;
		contractLedgerListAsWorkPackageParticipatorContract	work_package_participator_contract(__no_group)--project_participator_contract;
		contractRiskListAsProjectParticipatorContract	project_participator_contract(__no_group)--project_participator_contract;
		contractRiskListAsProjectRunningContract	project_running_contract(__no_group)--project_participator_contract;
		contractRiskListAsWorkPackageParticipatorContract	work_package_participator_contract(__no_group)--project_participator_contract;
		contractReportListAsProjectParticipatorContract	project_participator_contract(__no_group)--project_participator_contract;
		contractReportListAsProjectRunningContract	project_running_contract(__no_group)--project_participator_contract;
		contractReportListAsWorkPackageParticipatorContract	work_package_participator_contract(__no_group)--project_participator_contract;
		contractStatisticReportListAsProjectParticipatorContract	project_participator_contract(__no_group)--project_participator_contract;
		contractStatisticReportListAsProjectRunningContract	project_running_contract(__no_group)--project_participator_contract;
		contractStatisticReportListAsWorkPackageParticipatorContract	work_package_participator_contract(__no_group)--project_participator_contract;
	}
} depth=6; isRoot = false

meta{name=contract_pay_item, vg4payer=合同管理, vg4payee=合同管理}
contract_pay_item{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('平台项目管理服务费'), verb: false, required: true,type:string;
		string	brief('托管服务费首期支付|托管服务费二期支付|托管服务费三期支付|托管服务费四期支付|托管服务费五期支付'), verb: false, required: true,type:string;
		int	payment_phase('0|1|2|3|4'), verb: false, required: true,type:int;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: contractPayItemList,type:standard_contract;
		merchant	payer('$(object)'), verb: false, required: true, referenceBy: contractPayItemListAsPayer,type:merchant;
		merchant	payee('$(object)'), verb: false, required: true, referenceBy: contractPayItemListAsPayee,type:merchant;
		money	pay_amount('$0.00|$9999999.99'), verb: false, required: true,type:money;
		money	labor_fee('$0.00|$9999999.99'), verb: false, required: true,type:money;
		money	material_fee('$0.00|$9999999.99'), verb: false, required: true,type:money;
		money	other_fee('$0.00|$9999999.99'), verb: false, required: true,type:money;
		string	pay_criteira('合同款项支付条件文本描述'), verb: false, required: true,type:string;
		pay_item_status	pay_item_status('$(object)'), verb: false, required: true, referenceBy: contractPayItemList,type:pay_item_status;
		date	expected_pay_time('2020-05-05'), verb: false, required: true,type:date;
		project_progress	project_progress('$(object)'), verb: false, required: true, referenceBy: contractPayItemList,type:project_progress;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		supplementaryContractPayItemList	contract_pay_item(__no_group)--contract_pay_item;
		commissionPayItemList	contract_pay_item(__no_group)--contract_pay_item;
		contractPaymentApplicationList	pay_item(__no_group)--pay_item;
		eventAdditionalContractPaymentPhaseList	payment_item(__no_group)--payment_item;
	}
} depth=7; isRoot = false

meta{name=supplementary_contract_type, features=status, identified_by=code}
supplementary_contract_type{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('增补合同|工程签证'), verb: false, required: true,type:string;
		string	code('SUPPLEMENTARY|PROJECT_VISA'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		supplementaryContractList	type(__no_group)--type;
		eventAdditionalContractBasicInfoList	contract_type(__no_group)--contract_type;
	}
} depth=0; isRoot = true

meta{vg4platform=合同管理, name=supplementary_contract, vg4project=合同管理, vg4party_b=合同管理, vg4party_a=合同管理}
supplementary_contract{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('平台项目管理服务费增补合同'), verb: false, required: true,type:string;
		string	contract_number('SWB-JS-2015-001(01)'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: supplementaryContractList,type:standard_contract;
		string_document	document('document.doc'), verb: false, required: true,type:string_document;
		supplementary_contract_type	type('$(object)'), verb: false, required: true, referenceBy: supplementaryContractList,type:supplementary_contract_type;
		string	brief('托管服务费首期支付增补|托管服务费二期支付增补|托管服务费三期支付增补|托管服务费四期支付增补|托管服务费五期支付增补'), verb: false, required: true,type:string;
		contract_status	status('$(object)'), verb: false, required: true, referenceBy: supplementaryContractList,type:contract_status;
		images	images('images()'), verb: false, required: true,type:images;
		employee_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: supplementaryContractList,type:employee_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: supplementaryContractList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		supplementaryContractPayItemList	supplementary_contract(__no_group)--supplementary_contract;
	}
} depth=7; isRoot = false

meta{name=supplementary_contract_pay_item}
supplementary_contract_pay_item{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		contract_pay_item	contract_pay_item('$(object)'), verb: false, required: false, referenceBy: supplementaryContractPayItemList,type:contract_pay_item;
		supplementary_contract	supplementary_contract('$(object)'), verb: false, required: true, referenceBy: supplementaryContractPayItemList,type:supplementary_contract;
		string	name('平台项目管理服务费调整'), verb: false, required: true,type:string;
		string	brief('托管服务费首期支付|托管服务费二期支付|托管服务费三期支付|托管服务费四期支付|托管服务费五期支付'), verb: false, required: true,type:string;
		merchant	payer('$(object)'), verb: false, required: true, referenceBy: supplementaryContractPayItemListAsPayer,type:merchant;
		merchant	payee('$(object)'), verb: false, required: true, referenceBy: supplementaryContractPayItemListAsPayee,type:merchant;
		double	ajustment('0.99'), verb: false, required: true,type:double;
		string	pay_criteira('合同款项支付条件文本描述'), verb: false, required: true,type:string;
		audit_status	status('$(object)'), verb: false, required: true, referenceBy: supplementaryContractPayItemList,type:audit_status;
		date	expected_pay_time('2020-05-05'), verb: false, required: true,type:date;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{name=commission_pay_item, vg4payer=合同管理, vg4payee=合同管理}
commission_pay_item{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('平台项目管理服务费'), verb: false, required: true,type:string;
		string	brief('托管服务费首期支付|托管服务费二期支付|托管服务费三期支付|托管服务费四期支付|托管服务费五期支付'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: commissionPayItemList,type:standard_contract;
		contract_pay_item	contract_pay_item('$(object)'), verb: false, required: true, referenceBy: commissionPayItemList,type:contract_pay_item;
		merchant	payer('$(object)'), verb: false, required: true, referenceBy: commissionPayItemListAsPayer,type:merchant;
		merchant	payee('$(object)'), verb: false, required: true, referenceBy: commissionPayItemListAsPayee,type:merchant;
		double	pay_rate('0.0001|0.050|1.00'), verb: false, required: true,type:double;
		money	pay_amount('$0.00|$9999999.99'), verb: false, required: true,type:money;
		string	pay_criteira('合同款项支付条件文本描述'), verb: false, required: true,type:string;
		pay_item_status	pay_item_status('$(object)'), verb: false, required: true, referenceBy: commissionPayItemList,type:pay_item_status;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{name=pay_item_status, features=status, identified_by=code}
pay_item_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待申请|待审核|有疑虑|待认领|已认领'), verb: false, required: true,type:string;
		string	code('PENDING_ON_APPLICATION|PENDING_ON_AUDIT|CONCERN|PENDING_ON_CONFIRMATION|CONFIRMED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: payItemStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		contractPayItemList	pay_item_status(__no_group)--pay_item_status;
		commissionPayItemList	pay_item_status(__no_group)--pay_item_status;
	}
} depth=1; isRoot = false

meta{name=contract_review_record}
contract_review_record{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		bool	review_passed('false|true'), verb: false, required: true,type:bool;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: contractReviewRecordList,type:standard_contract;
		project_nomination	reviewer('$(object)'), verb: false, required: true, referenceBy: contractReviewRecordList,type:project_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=contract_comments_record}
contract_comments_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		project_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: contractCommentsRecordList,type:project_nomination;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: contractCommentsRecordList,type:standard_contract;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=contract_view_record, max_count=1000000000, vg4merchant=合同管理}
contract_view_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		int	view_count('0|1|300'), verb: false, required: true,type:int;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: contractViewRecordList,type:standard_contract;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: contractViewRecordList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=contract_operation_log, vg4operator_merchant=商户管理, features=log, max_count=1000000000}
contract_operation_log{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('创建合同|款项支付申请|款项支付完成'), verb: false, required: true,type:string;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		string	log_type('create|pay|apply'), verb: false, required: true,type:string;
		string	refer_object_type('project'), verb: false, required: true,type:string;
		string	refer_object_id('p000001'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: contractOperationLogList,type:standard_contract;
		merchant	operator_merchant('$(object)'), verb: false, required: false, referenceBy: contractOperationLogList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=contract_payment_application}
contract_payment_application{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		audit_status	status('$(object)'), verb: false, required: true, referenceBy: contractPaymentApplicationList,type:audit_status;
		contract_pay_item	pay_item('$(object)'), verb: false, required: true, referenceBy: contractPaymentApplicationList,type:contract_pay_item;
		merchant	submitter('$(object)'), verb: false, required: true, referenceBy: contractPaymentApplicationList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{name=account_book_record, max_count=1000000000}
account_book_record{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		bool	confirmed('true|false'), verb: false, required: true,type:bool;
		string	title('支付项目第一阶段款项|智能秤订单收入'), verb: false, required: true,type:string;
		string_longtext	brief('text()'), verb: false, required: true,type:string_longtext;
		money	amount('$99999999.999'), verb: false, required: true,type:money;
		string	refer_object_type('MainOrder|Project|Task|ContractPayItem'), verb: false, required: true,type:string;
		string	refer_object_id('MainOrder|Project|Task|ContractPayItem'), verb: false, required: true,type:string;
		account_book	payer_account('$(object)'), verb: false, required: true, referenceBy: accountBookRecordListAsPayerAccount,type:account_book;
		account_book	payee_account('$(object)'), verb: false, required: true, referenceBy: accountBookRecordListAsPayeeAccount,type:account_book;
		money	payer_balance('$99999999.999'), verb: false, required: true,type:money;
		money	payee_balance('$99999999.999'), verb: false, required: true,type:money;
		string	change_request('CR000001'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=article_category, group_by=name}
article_category{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('精选案例|品牌故事|装修设计|时尚|使用指南'), verb: false, required: true,type:string;
		string_image	cover_image('cover_image.jpg'), verb: false, required: true,type:string_image;
		mobile_app	container('$(object)'), verb: false, required: true, referenceBy: articleCategoryList,type:mobile_app;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		sectionList	article_category(__no_group)--article_category;
		articleList	category(__no_group)--category;
	}
} depth=1; isRoot = false

meta{name=article, vg4container=平台营销}
article{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('如何有效利用空间'), verb: false, required: true,type:string;
		string_image	cover_image('cover_image.jpg'), verb: false, required: true,type:string_image;
		string	author_name('佚名|李志伟|曾明'), verb: false, required: true,type:string;
		article_category	category('$(object)'), verb: false, required: true, referenceBy: articleList,type:article_category;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		mobile_app	container('$(object)'), verb: false, required: true, referenceBy: articleList,type:mobile_app;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		articleParagraphList	article(__no_group)--article;
		pageArticleList	article(__no_group)--article;
	}
} depth=2; isRoot = false

meta{name=article_paragraph}
article_paragraph{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		string_image	image_url('example.jpg'), verb: false, required: true,type:string_image;
		string	video_url('example.mp4'), verb: false, required: true,type:string;
		article	article('$(object)'), verb: false, required: true, referenceBy: articleParagraphList,type:article;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=welcome_slide}
welcome_slide{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string_image	image_url('https://yourong-image.oss-cn-shenzhen.aliyuncs.com/yourong-image%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20181026210342-rc-upload-1540558987949-2.jpeg|https://yourong-image.oss-cn-shenzhen.aliyuncs.com/yourong-image%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20181026210333-rc-upload-1540558987949-7.jpeg'), verb: false, required: true,type:string_image;
		page	show_in('$(object)'), verb: false, required: true, referenceBy: welcomeSlideList,type:page;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=page_article}
page_article{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string_image	cover_image('example.jpg'), verb: false, required: true,type:string_image;
		article	article('$(object)'), verb: false, required: true, referenceBy: pageArticleList,type:article;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		section	section('$(object)'), verb: false, required: true, referenceBy: pageArticleList,type:section;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=merchant_active_nomination, vg4merchant=人力资源}
merchant_active_nomination{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('财务总管'), verb: false, required: true,type:string;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: merchantActiveNominationList,type:merchant;
		employee_nomination	nomination('$(object)'), verb: false, required: true, referenceBy: merchantActiveNominationList,type:employee_nomination;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=license_category, group_by=category, features=setting, identified_by=code}
license_category{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('营业执照|企业资质|安全许可证|其它证件|身份证|护照|港澳通行证|其它证件|建造师证|监理证|造价师证|审计师证|上岗职称证|其它证件|驾照|工作证|其它证件'), verb: false, required: true,type:string;
		string	category('企业证件|企业证件|企业证件|企业证件|个人证件|个人证件|个人证件|个人证件|职业资格证件|职业资格证件|职业资格证件|职业资格证件|职业资格证件|职业资格证件|其它证件|其它证件|其它证件'), verb: false, required: true,type:string;
		string	code('E_BUSINESS|E_QUALIFIED|E_SECURITY|E_OTHER|P_IDCARD|P_PASSPORT|P_HKMACAOPASS|P_OTHER|J_ARCHITECT|J_SUPERVSION|J_COST|J_AUDIT|J_WORKPERMIT|J_OTHER|O_DRIVER|O_WORK|O_OTHER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: licenseCategoryList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		licenseList	license_category(__no_group)--license_category;
	}
} depth=1; isRoot = false

meta{name=license_industry_type, features=setting, identified_by=code}
license_industry_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('建筑土建|建筑安装|编制内容'), verb: false, required: true,type:string;
		string	code('JZTJ|JZAZ|BZNR'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: licenseIndustryTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		licenseList	license_industry_type(__no_group)--license_industry_type;
	}
} depth=1; isRoot = false

meta{name=validate_status, features=status, identified_by=code}
validate_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('有效|过期|声明作废|吊销'), verb: false, required: true,type:string;
		string	code('VALID|EXPIRED|ABOLISHED|REVOKE'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: validateStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		licenseList	validate_status(__no_group)--validate_status;
	}
} depth=1; isRoot = false

meta{name=authenticate_status, features=status, identified_by=code}
authenticate_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已认证|未认证'), verb: false, required: true,type:string;
		string	code('AUTHENTICATED|PENDING'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: authenticateStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		licenseList	authenticate_status(__no_group)--authenticate_status;
	}
} depth=1; isRoot = false

meta{vg4platform=人力资源, name=license, vg4owner=人力资源}
license{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('张三的身份证|浩睿装饰有限公司营业执照'), verb: false, required: true,type:string;
		images	license_copy('images()'), verb: false, required: true,type:images;
		string	license_number('|91530600MA6KAYJW6M'), verb: false, required: false,type:string;
		string	expired_date('00:00'), verb: false, required: false,type:string;
		license_category	license_category('$(object)'), verb: false, required: true, referenceBy: licenseList,type:license_category;
		license_industry_type	license_industry_type('$(object)'), verb: false, required: false, referenceBy: licenseList,type:license_industry_type;
		validate_status	validate_status('$(object)'), verb: false, required: true, referenceBy: licenseList,type:validate_status;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: licenseList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: licenseList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		employee_nomination	authenticator('$(object)'), verb: false, required: false, referenceBy: licenseList,type:employee_nomination;
		authenticate_status	authenticate_status('$(object)'), verb: false, required: true, referenceBy: licenseList,type:authenticate_status;
		date_time	authenticate_date_time('2100-12-31T23:59:59'), verb: false, required: false,type:date_time;
		string	authenticate_comment('审核意见'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=merchant_base_type, group_by=category, features=status}
merchant_base_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('全国中心|省级中心|地市级中心|区域营业厅|项目业主|服务商户|设计机构|上游品牌机构|下游品牌机构|项目监理|项目管理|项目勘察|项目审计|质量监察|住建局|规划局|商会协会|企业高管|技术管理|企业管理|企业员工|工程管理|施工技工|其它商户'), verb: false, required: true,type:string;
		string	category('平台|平台|平台|平台|建设方|服务商|服务商|品牌方|品牌方|项目第三方职业人|项目第三方职业人|项目第三方职业人|项目第三方职业人|行业行政管理|行业行政管理|行业行政管理|商会协会|个人商户|个人商户|个人商户|个人商户|个人商户|个人商户|其它'), verb: false, required: true,type:string;
		string	code('PLATFORM_CIVIL_CENTER|PLATFORM_PROVINCE_CENTER|PLATFORM_CITY_CENTER|PLATFORM_DISTRICT_CENTER|PROPRIETOR|VENDOR_CONSTRUCTION|VENDOR_DESIGNER|PARTNER_UP_ORG|PARTNER_DOWN_ORG|MANAGEMENT_SUPERVISOR|MANAGEMENT_MANAGER|MANAGEMENT_SURVEYOR|MANAGEMENT_AUDITOR|MONITOR_QUALITY|MONITOR_CONSTRUCTION|MONITOR_PLANNING|COMMERCE_ASSOCIATION|PERSONAL_SENIOR_MANAGER|PERSONAL_TECH_MANAGER|PERSONAL_ENTERPRISE_MANAGER|PERSONAL_EMPLOYEE|PERSONAL_ENGINEER|PERSONAL_MECHANIC|OTHER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantBaseTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		merchantList	merchant_base_type(__no_group)--merchant_base_type;
	}
} depth=1; isRoot = false

meta{name=merchant_status, identified_by=code, features=status}
merchant_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('在业|停业|注销'), verb: false, required: true,type:string;
		string	code('OPENNING|STOPPED|CANCELLED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		merchantList	merchant_status(__no_group)--merchant_status;
	}
} depth=1; isRoot = false

meta{name=merchant_type, features=status, identified_by=code}
merchant_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('个人|机构'), verb: false, required: true,type:string;
		string	code('PERSONAL|ORGANIZATION'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		merchantList	merchant_type(__no_group)--merchant_type;
		subcontractApplicationList	merchant_type(__no_group)--merchant_type;
		eventSubcontractApplicationList	merchant_type(__no_group)--merchant_type;
	}
} depth=1; isRoot = false

meta{vg4platform=人力资源, name=merchant, features=merchant}
merchant{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('汪丁丁|成都双链科技有限责任公司'), verb: false, required: true,type:string;
		merchant_type	merchant_type('$(object)'), verb: false, required: true, referenceBy: merchantList,type:merchant_type;
		merchant_base_type	merchant_base_type('$(object)'), verb: false, required: true, referenceBy: merchantList,type:merchant_base_type;
		merchant_status	merchant_status('$(object)'), verb: false, required: true, referenceBy: merchantList,type:merchant_status;
		string_china_mobile_phone	contact_mobile('18012341234'), verb: false, required: true,type:string_china_mobile_phone;
		string	contact_address('成都市武侯区天府二街新希望天祥广场A座2511室'), verb: false, required: true,type:string;
		string_image	avatar('avatar.jpg|logoImage.jpg'), verb: false, required: true,type:string_image;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(120){
		standardContractListAsPartyA	party_a(合同管理)--party_a;
		standardContractListAsPartyB	party_b(合同管理)--party_a;
		contractPayItemListAsPayer	payer(合同管理)--payer;
		contractPayItemListAsPayee	payee(合同管理)--payer;
		supplementaryContractPayItemListAsPayer	payer(__no_group)--payer;
		supplementaryContractPayItemListAsPayee	payee(__no_group)--payer;
		commissionPayItemListAsPayer	payer(合同管理)--payer;
		commissionPayItemListAsPayee	payee(合同管理)--payer;
		contractViewRecordList	merchant(合同管理)--merchant;
		contractOperationLogList	operator_merchant(商户管理)--operator_merchant;
		contractPaymentApplicationList	submitter(__no_group)--submitter;
		merchantActiveNominationList	merchant(人力资源)--merchant;
		licenseList	owner(人力资源)--owner;
		debitCardList	merchant(__no_group)--merchant;
		merchantDetailList	merchant(__no_group)--merchant;
		jobList	merchant(__no_group)--merchant;
		employeeNominationListAsEmployee	employee(人力资源)--employee;
		employeeNominationListAsEmployer	employer(人力资源)--employee;
		workPackageList	vendor(项目运营)--vendor;
		projectListAsProjectOwner	project_owner(我的项目)--project_owner;
		projectListAsStore	store(项目运营)--project_owner;
		projectListAsPartner	partner(项目运营)--project_owner;
		projectMaterialViewRecordList	merchant(项目运营)--merchant;
		projectMaterialOperationLogList	operator_merchant(项目运营)--operator_merchant;
		projectAcceptanceList	property_owner(项目运营)--property_owner;
		loanFundList	fund_vendor(金融服务)--fund_vendor;
		loanApplicationList	applicant(金融服务)--applicant;
		loanContractListAsBorrower	borrower(金融服务)--borrower;
		loanContractListAsLender	lender(金融服务)--borrower;
		compensationInvestigationList	submitter(__no_group)--submitter;
		compensationResultList	submitter(__no_group)--submitter;
		materialRecordList	platform_information_manager(__no_group)--platform_information_manager;
		accountBookList	owner(财务管理)--owner;
		recommendationList	applicant_merchant(平台营销)--applicant_merchant;
		emplacementApplicationList	applicant_merchant(平台营销)--applicant_merchant;
		customerProjectApplicationList	applicant_merchant(平台营销)--applicant_merchant;
		partnerSettlementApplicationList	applicant_merchant(平台营销)--applicant_merchant;
		subcontractApplicationListAsApplicationMerchant	application_merchant(__no_group)--application_merchant;
		subcontractApplicationListAsApplicant	applicant(__no_group)--application_merchant;
		notificationListAsReceiver	receiver(商户管理)--receiver;
		notificationListAsSender	sender(商户管理)--receiver;
		eventContractBasicInfoListAsPartyA	party_a(__no_group)--party_a;
		eventContractBasicInfoListAsPartyB	party_b(__no_group)--party_a;
		eventContractPaymentPhaseListAsPayer	payer(__no_group)--payer;
		eventContractPaymentPhaseListAsPayee	payee(__no_group)--payer;
		eventShowAllTypeStepOneList	field_biz_candidate(__no_group)--field_biz_candidate;
		auditRecordList	reviewer(__no_group)--reviewer;
		commentsRecordList	submitter(__no_group)--submitter;
		ccRecordList	cc_to(__no_group)--cc_to;
		todoListList	owner(流程管理)--owner;
		processAuditList	auditor(流程管理)--auditor;
		processApplicationList	owner(流程管理)--owner;
		contractLedgerListAsFirstPartMerchant	first_part_merchant(合同管理)--first_part_merchant;
		contractLedgerListAsSecondPartMerchant	second_part_merchant(合同管理)--first_part_merchant;
		contractRiskList	owner(合同管理)--owner;
		contractReportList	owner(合同管理)--owner;
		contractStatisticReportList	owner(大数据)--owner;
		projectStatisticReportList	owner(大数据)--owner;
		serviceVendorStatisticReportListAsVendor	vendor(大数据)--vendor;
		serviceVendorStatisticReportListAsOwner	owner(大数据)--vendor;
		financialServiceStatisticReportList	owner(大数据)--owner;
		recruitmentRequirementList	employee(人力资源)--employee;
		candidateTalentList	candidate(人力资源)--candidate;
		staffFilesListAsEmployer	employer(人力资源)--employer;
		staffFilesListAsEmployee	employee(人力资源)--employer;
		employeeRelationListAsEmployer	employer(人力资源)--employer;
		employeeRelationListAsEmployee	employee(人力资源)--employer;
		employeeSalaryList	employer(人力资源)--employer;
		employeePerformanceListAsEmployee	employee(人力资源)--employee;
		employeePerformanceListAsEmployer	employer(人力资源)--employee;
		merchantSealList	owner(商户管理)--owner;
		projectAttractInvestmentList	post_by(商户管理)--post_by;
		serivceVendorAttractInvestmentList	post_by(商户管理)--post_by;
		brandAttractInvestmentList	post_by(商户管理)--post_by;
		projectSettlementList	responsible_merchant(商户管理)--responsible_merchant;
		serviceVendorSettlementList	vendor(商户管理)--vendor;
		brandPartnerSettlementList	partner(商户管理)--partner;
		merchantVerificationList	merchant(商户管理)--merchant;
		partnerRecommendationList	partner(平台营销)--partner;
		projectDirectiveListAsResponsibleMerchant	responsible_merchant(项目运营)--responsible_merchant;
		projectDirectiveListAsPostBy	post_by(项目运营)--responsible_merchant;
		projectDailyReportList	reporter(项目运营)--reporter;
		projectProgressReportList	reporter(项目运营)--reporter;
		projectNotificationListAsRecipientMerchant	recipient_merchant(项目运营)--recipient_merchant;
		projectNotificationListAsPostBy	post_by(项目运营)--recipient_merchant;
		designListAsDesigner	designer(项目运营)--designer;
		designListAsReviewer	reviewer(项目运营)--designer;
		constructionSchemaList	post_by(项目运营)--post_by;
		projectBidListAsProjectOwner	project_owner(项目运营)--project_owner;
		projectBidListAsResponsibleMerchant	responsible_merchant(项目运营)--project_owner;
		laborSupervisionListAsEmployee	employee(项目运营)--employee;
		laborSupervisionListAsEmployer	employer(项目运营)--employee;
		safetyInstructionList	post_by(项目运营)--post_by;
		designChangeListAsDesigner	designer(项目运营)--designer;
		designChangeListAsSponsor	sponsor(项目运营)--designer;
		violationListAsResponsibleMerchant	responsible_merchant(项目运营)--responsible_merchant;
		violationListAsImpactMerchant	impact_merchant(项目运营)--responsible_merchant;
		constructionStartWorkingFilesList	upload_user(项目资料)--upload_user;
		qualitiyAcceptanceFilesList	upload_user(项目资料)--upload_user;
		engineeringExperimentFilesList	upload_user(项目资料)--upload_user;
		constructionProcessFilesList	upload_user(项目资料)--upload_user;
		necessarySupplementFilesList	upload_user(项目资料)--upload_user;
		constructionCompletionFilesList	upload_user(项目资料)--upload_user;
		engineeringQualitySupervisionFilesList	upload_user(项目资料)--upload_user;
		projectFilesArchiveList	upload_user(项目资料)--upload_user;
		engineeringQualitySupervisionArchiveList	upload_user(项目资料)--upload_user;
		economicVerificationFormList	service_vendor(财务管理)--service_vendor;
		projectObjectiveList	service_store(财务管理)--service_store;
		projectProgressFundingTrusteeshipPlanListAsOwner	owner(财务管理)--owner;
		projectProgressFundingTrusteeshipPlanListAsServiceStore	service_store(财务管理)--owner;
		fundingCloseTrusteeshipContractListAsFundingVendor	funding_vendor(财务管理)--funding_vendor;
		fundingCloseTrusteeshipContractListAsFundingConsumer	funding_consumer(财务管理)--funding_vendor;
		projectCloseTrusteeshipContractListAsOwner	owner(财务管理)--owner;
		projectCloseTrusteeshipContractListAsStore	store(财务管理)--owner;
		fundingCloseOrganizationList	merchant(财务管理)--merchant;
		taskOrderListAsBuyerMerchant	buyer_merchant(财务管理)--buyer_merchant;
		taskOrderListAsServiceMerchant	service_merchant(财务管理)--buyer_merchant;
		taskOrderListAsStoreMerchant	store_merchant(财务管理)--buyer_merchant;
		workPackageAcceptanceSettlementList	service_vendor(财务管理)--service_vendor;
		projectAcceptanceSettlementList	owner(财务管理)--owner;
	}
} depth=2; isRoot = false

meta{name=debit_card}
debit_card{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: debitCardList,type:merchant;
		string	bank('中国银行|中国工商银行|招商银行|中国农业银行|中国建设银行|中国民生银行|中国光大银行|中信银行|交通银行|兴业银行'), verb: false, required: true,type:string;
		string	bank_address('四川省成都市高新区世纪城路1132号附1号招商银行世纪城支行'), verb: false, required: true,type:string;
		string	number('4111111111111111'), verb: false, required: true,type:string;
		string	account_name('张三'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=merchant_detail}
merchant_detail{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string_gender	gender('$(object)'), verb: false, required: true,type:gender;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: merchantDetailList,type:merchant;
		industry_type	industry_type('$(object)'), verb: false, required: true, referenceBy: merchantDetailList,type:industry_type;
		engineering_type	engineering_type('$(object)'), verb: false, required: true, referenceBy: merchantDetailList,type:engineering_type;
		career_type	career_type('$(object)'), verb: false, required: true, referenceBy: merchantDetailList,type:career_type;
		int	working_years('10'), verb: false, required: true,type:int;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=人力资源, name=industry_type, features=setting, identified_by=code}
industry_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('农、林、牧、渔业|采掘业|制造业|电力、煤气及水生产和供应业|建筑业|地质勘察、水利管理业|交通、仓储和邮电通信业|批发零售贸易、餐饮服务业|金融、保险业|房地产业|社会服务业|卫生、体育和社会福利业|教育、文化艺术及广播电影媒体业|科学研究和综合技术服务业|国家机关、党政机关和社会团体|其它行业'), verb: false, required: true,type:string;
		string	code('NLMY|MINING|MANUFACTURING|POWER_SUPPLY|CONSTRUCTION|GEOLOGY_AND_IRRIGATION|TRANSPORTATION_AND_TELECOMMUNICATIONS|RETAIL_AND_CATERING|FINANCE|REAL ESTATE|SOCIAL_SERVICE|SOCIAL WELFARE|EDUCATION_AND_ART|SCIENCE|GOVERNMENT|OTHER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: industryTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		merchantDetailList	industry_type(__no_group)--industry_type;
		eventFillPersonalDetailList	industry_type(__no_group)--industry_type;
	}
} depth=1; isRoot = false

meta{vg4platform=人力资源, name=engineering_type, features=setting, identified_by=code}
engineering_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('建筑|结构|装修|安装|给排水|电气|弱电智能|空调通风|燃气|暖气|园建|绿化|其它'), verb: false, required: true,type:string;
		string	code('JZ'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: engineeringTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		merchantDetailList	engineering_type(__no_group)--engineering_type;
		workPackageList	engineering_type(__no_group)--engineering_type;
		eventFillPersonalDetailList	engineering_type(__no_group)--engineering_type;
	}
} depth=1; isRoot = false

meta{vg4platform=人力资源, name=career_type, features=setting, identified_by=code}
career_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('老板 .(BOSS)|高级管理 . (金领)|高级经理 . (金领)|工程管理 . (白领)|行政 . (白领)|销售 . (白领)|技术 . (白领)|专业 . (白领)|普通员工|技工 . (蓝领)|普通工人|其它'), verb: false, required: true,type:string;
		string	code('BOSS|SENIOR_EXECUTIVE|SENIOR_MANAGEMENT|ENGINEERING_MANAGEMENT|ADMINISTRATION|TECHNOLOGY|PROFESSIONAL|NORMAL|BLUE_COLLAR|OTHER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: careerTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(6){
		merchantDetailList	career_type(__no_group)--career_type;
		personalEmplacementApplicationList	career_type(__no_group)--career_type;
		subcontractApplicationList	career_type(__no_group)--career_type;
		eventApplyPersonalEmplacementList	career_type(__no_group)--career_type;
		eventFillPersonalDetailList	career_type(__no_group)--career_type;
		eventSubcontractApplicationList	application_type(__no_group)--application_type;
	}
} depth=1; isRoot = false

meta{name=role, features=status, identified_by=code}
role{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('管理员|财务|员工'), verb: false, required: true,type:string;
		string	code('ADMIN|FINANCE|WORKER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: roleList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		employeeNominationList	role(__no_group)--role;
		eventAddEmployeeList	role(__no_group)--role;
	}
} depth=1; isRoot = false

meta{name=job, features=setting, identified_by=code}
job{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('老板|瓦工|木工|项目经理|项目监理|项目造价师'), verb: false, required: true,type:string;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: jobList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: jobList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		employeeNominationList	job(__no_group)--job;
		eventAddEmployeeList	job(__no_group)--job;
	}
} depth=3; isRoot = false

meta{vg4platform=人力资源, vg4employer=人力资源, name=employee_nomination, vg4employee=人力资源}
employee_nomination{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('张晓明,天水市喜来登,业主代表'), verb: false, required: true,type:string;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: employeeNominationListAsEmployee,type:merchant;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: employeeNominationListAsEmployer,type:merchant;
		date	start_date('2100-01-01'), verb: false, required: true,type:date;
		date	end_date('2100-01-01'), verb: false, required: true,type:date;
		role	role('$(object)'), verb: false, required: true, referenceBy: employeeNominationList,type:role;
		job	job('$(object)'), verb: false, required: true, referenceBy: employeeNominationList,type:job;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeeNominationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(21){
		contractTemplateList	submitter(__no_group)--submitter;
		standardContractList	submitter(__no_group)--submitter;
		supplementaryContractList	submitter(__no_group)--submitter;
		merchantActiveNominationList	nomination(__no_group)--nomination;
		licenseList	authenticator(__no_group)--authenticator;
		projectNominationList	worker(__no_group)--worker;
		dailyTaskTemplateList	creator(__no_group)--creator;
		projectMaterialList	material_submitter(__no_group)--material_submitter;
		afterSalesList	creator(__no_group)--creator;
		compensationApplicationList	submitter(__no_group)--submitter;
		recommendationList	applicant_employee(__no_group)--applicant_employee;
		customerProjectApplicationList	applicant_employee(__no_group)--applicant_employee;
		partnerSettlementApplicationList	applicant_employee(__no_group)--applicant_employee;
		eventProjectWorkPositionList	employee(__no_group)--employee;
		eventProjectPenaltiesList	penalties_executor(__no_group)--penalties_executor;
		processList	creator(__no_group)--creator;
		todoListList	creator(__no_group)--creator;
		processApplicationList	creator(__no_group)--creator;
		staffFilesList	employment(__no_group)--employment;
		employeeRelationList	employment(__no_group)--employment;
		economicVerificationFormList	responsible_employee(__no_group)--responsible_employee;
	}
} depth=4; isRoot = false

meta{name=task_status, identified_by=code, features=status}
task_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待执行|进行中|待验收|已完成'), verb: false, required: true,type:string;
		string	code('Pending|Processing|ReadyForAcceptance|Completed'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: taskStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		taskList	task_status(__no_group)--task_status;
	}
} depth=1; isRoot = false

meta{name=task}
task{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('任务名称'), verb: false, required: true,type:string;
		string	content('任务内容'), verb: false, required: true,type:string;
		task_status	task_status('$(object)'), verb: false, required: true, referenceBy: taskList,type:task_status;
		work_package	work_package('$(object)'), verb: false, required: true, referenceBy: taskList,type:work_package;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		standardContractList	task(__no_group)--task;
		laborSupervisionList	work_task(__no_group)--work_task;
		taskOrderList	task(__no_group)--task;
	}
} depth=5; isRoot = false

meta{name=work_package, vg4project=项目运营, vg4vendor=项目运营}
work_package{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('工作包名称'), verb: false, required: true,type:string;
		string	content('工作包的内容'), verb: false, required: true,type:string;
		merchant	vendor('$(object)'), verb: false, required: true, referenceBy: workPackageList,type:merchant;
		work_package_type	work_package_type('$(object)'), verb: false, required: true, referenceBy: workPackageList,type:work_package_type;
		engineering_type	engineering_type('$(object)'), verb: false, required: true, referenceBy: workPackageList,type:engineering_type;
		work_status	work_status('$(object)'), verb: false, required: true, referenceBy: workPackageList,type:work_status;
		project	project('$(object)'), verb: false, required: true, referenceBy: workPackageList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(9){
		standardContractList	work_package(__no_group)--work_package;
		taskList	work_package(__no_group)--work_package;
		projectNominationList	work_package(__no_group)--work_package;
		laborDisputeList	work_package(__no_group)--work_package;
		eventProjectWorkPositionList	work_package(__no_group)--work_package;
		eventLaborDisputeList	work_package(__no_group)--work_package;
		designList	work_package(__no_group)--work_package;
		violationList	related_work_package(__no_group)--related_work_package;
		workPackageAcceptanceSettlementList	work_package(__no_group)--work_package;
	}
} depth=4; isRoot = false

meta{name=work_status, identified_by=code, features=status}
work_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待执行|进行中|待验收|已完成'), verb: false, required: true,type:string;
		string	code('Pending|Processing|ReadyForAcceptance|Completed'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: workStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		workPackageList	work_status(__no_group)--work_status;
	}
} depth=1; isRoot = false

meta{name=work_package_type, group_by=category, features=setting, identified_by=code}
work_package_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('装修土建|墙地砖铺装|石材安装|木工基装|硬装固装|油漆涂料|不锈钢玻璃|水电安装|装饰软装|门窗幕墙|厨房卫浴|机电安装|弱电智能|钢结构安装|环境园林|广告装潢|设备租赁|家居零售|保洁清洁|安全文明维护|其它|项目管理|项目监理|项目审计|其它|家装设计|工装设计|勘察设计|其它'), verb: false, required: true,type:string;
		string	category('项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目管理包|项目管理包|项目管理包|项目管理包|项目设计包|项目设计包|项目设计包|项目设计包'), verb: false, required: true,type:string;
		string	code('ZXTJ'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: workPackageTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		workPackageList	work_package_type(__no_group)--work_package_type;
		subcontractApplicationList	work_package_type(__no_group)--work_package_type;
		eventSubcontractApplicationList	work_package_type(__no_group)--work_package_type;
	}
} depth=1; isRoot = false

meta{vg4store=项目运营, vg4platform=项目运营, vg4partner=项目运营, name=project, vg4project_owner=home/我的项目}
project{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('大邑雅丽泰办公大楼装修工程'), verb: false, required: true,type:string;
		string	description('项目施工描述信息'), verb: false, required: true,type:string;
		string	location('成都市大邑县兴城大道（工业园区）'), verb: false, required: true,type:string;
		double	project_area('28800080.00'), verb: false, required: true,type:double;
		money	project_rough_budget('$100000000.00'), verb: false, required: true,type:money;
		merchant	project_owner('$(object)'), verb: false, required: true, referenceBy: projectListAsProjectOwner,type:merchant;
		merchant	store('$(object)'), verb: false, required: true, referenceBy: projectListAsStore,type:merchant;
		merchant	partner('$(object)'), verb: false, required: false, referenceBy: projectListAsPartner,type:merchant;
		project_type	project_type('$(object)'), verb: false, required: false, referenceBy: projectList,type:project_type;
		project_service_type	project_service_type('$(object)'), verb: false, required: true, referenceBy: projectList,type:project_service_type;
		project_phase	project_phase('$(object)'), verb: false, required: true, referenceBy: projectList,type:project_phase;
		working_status	design_status('$(object)'), verb: false, required: false, referenceBy: projectListAsDesignStatus,type:working_status;
		working_status	construction_status('$(object)'), verb: false, required: false, referenceBy: projectListAsConstructionStatus,type:working_status;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(54){
		standardContractList	project(合同管理)--project;
		workPackageList	project(项目运营)--project;
		projectImageList	project(项目运营)--project;
		projectNominationList	project(人力资源)--project;
		projectProgressList	project(项目运营)--project;
		projectMaterialTypeConfigurationList	project(__no_group)--project;
		projectMaterialList	project(项目运营)--project;
		yourongProjectBookList	project(项目运营)--project;
		projectAcceptanceList	project(__no_group)--project;
		afterSalesList	project(售后管理)--project;
		projectPenaltiesList	project(项目运营)--project;
		laborWageManagementSheetList	project(人力资源)--project;
		laborDisputeList	project(人力资源)--project;
		laborRecordList	project(__no_group)--project;
		workOvertimeRecordList	project(__no_group)--project;
		projectReportList	project(项目运营)--project;
		projectCommandList	project(__no_group)--project;
		loanFundList	project(__no_group)--project;
		loanApplicationList	loan_project(金融服务)--loan_project;
		loanContractList	project(__no_group)--project;
		compensationApplicationList	project(项目运营)--project;
		compensationInvestigationList	project(项目运营)--project;
		compensationResultList	project(项目运营)--project;
		materialPreservedSampleList	project(项目运营)--project;
		materialBidSampleList	project(项目运营)--project;
		materialRecordList	project(项目运营)--project;
		materialChangeList	project(项目运营)--project;
		materialAcceptanceApplicationList	project(__no_group)--project;
		subcontractApplicationList	project(__no_group)--project;
		notificationList	project(__no_group)--project;
		eventSubcontractApplicationList	project(__no_group)--project;
		projectStatisticReportList	project(__no_group)--project;
		projectAttractInvestmentList	project(商户管理)--project;
		projectSettlementList	project(商户管理)--project;
		projectDailyReportList	project(项目运营)--project;
		projectProgressReportList	project(项目运营)--project;
		designList	project(项目运营)--project;
		constructionSchemaList	project(项目运营)--project;
		designChangeList	project(__no_group)--project;
		violationList	project(项目运营)--project;
		projectFundingList	project(项目运营)--project;
		constructionStartWorkingFilesList	project(项目资料)--project;
		qualitiyAcceptanceFilesList	project(项目资料)--project;
		engineeringExperimentFilesList	project(项目资料)--project;
		constructionProcessFilesList	project(项目资料)--project;
		necessarySupplementFilesList	project(项目资料)--project;
		constructionCompletionFilesList	project(项目资料)--project;
		engineeringQualitySupervisionFilesList	project(项目资料)--project;
		projectFilesArchiveList	project(项目资料)--project;
		engineeringQualitySupervisionArchiveList	project(项目资料)--project;
		projectObjectiveList	project(财务管理)--project;
		projectProgressFundingTrusteeshipPlanList	project(财务管理)--project;
		projectCloseTrusteeshipContractList	project(财务管理)--project;
		projectAcceptanceSettlementList	project(财务管理)--project;
	}
} depth=3; isRoot = false

meta{name=project_image, vg4project=项目运营}
project_image{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('|正面|漏水处墙壁图'), verb: false, required: false,type:string;
		string_image	image('project.jpg'), verb: false, required: true,type:string_image;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectImageList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=project_type, group_by=category, features=setting, identified_by=code}
project_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('精装楼盘装修工程|别墅住宅精装工程|大平层豪宅精装工程|传统家装精装工程|酒店会所装修工程|购物空间装修工程|教育机构装修工程|医疗机构装修工程|商业展示装修工程|办公空间装修工程|餐饮空间装修工程|休闲空间装修工程|娱乐空间装修工程|文旅艺术装修工程|运动空间装修工程|旅游度假装修工程|其它装修工程|钢结构安装工程|机电安装工程|弱电智能安装工程|其它安装工程|市政装修工程|园林绿化工程'), verb: false, required: true,type:string;
		string	category('装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|安装工程|安装工程|安装工程|安装工程|市政园林工程|市政园林工程'), verb: false, required: true,type:string;
		string	code('JZLP'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectList	project_type(__no_group)--project_type;
	}
} depth=1; isRoot = false

meta{name=project_service_type, identified_by=code, features=status}
project_service_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('设计托管|实施托管|设计实施托管'), verb: false, required: true,type:string;
		string	code('Design|Construction|DesignandConstruction'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectServiceTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectList	project_service_type(__no_group)--project_service_type;
	}
} depth=1; isRoot = false

meta{name=project_phase, identified_by=code, features=status}
project_phase{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('意向阶段|EPC托管|设计准备|设计招标|设计管理实施|执行准备|执行招标|工程实施|验收移交|项目售后'), verb: false, required: true,type:string;
		string	code('INTENTION|EPC_HOSTING|DESIGN_PREPARATION|DESIGN_RFP|DESIGN_EXECUTING|CONSTRUCTING_PREPARATION|CONSTRUCTION_RFP|CONSTRUCTING|ACCEPTANCE|MAINTENANCE'), verb: false, required: true,type:string;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectPhaseList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		projectList	project_phase(__no_group)--project_phase;
		projectProgressList	project_phase(__no_group)--project_phase;
	}
} depth=1; isRoot = false

meta{name=working_status, identified_by=code, features=status}
working_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('无|计划中|执行中|停工|待验收|质保中|已完成'), verb: false, required: true,type:string;
		string	code('NONE|PLANNING|PROCESSING|PENDING|READY_ACCEPTANCE|MAINTAINING|COMPLETED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: workingStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		projectListAsDesignStatus	design_status(__no_group)--design_status;
		projectListAsConstructionStatus	construction_status(__no_group)--design_status;
		designList	design_status(__no_group)--design_status;
	}
} depth=1; isRoot = false

meta{name=project_organization_type, group_by=category, identified_by=code, features=setting,tree}
project_organization_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('甲方代表|品牌代表|优荣平台|造价咨询|优荣招标|项目设计|项目经理|项目监理|项目审计|分包服务商|分包负责人|分包施工员|BIM技术'), verb: false, required: true,type:string;
		string	code('PROPERTY_OWNER|BRADN_REP|PLATFORM|CONSTRUCTION_CONSULTANT|BIDDING|DESIGN|PROJECT_MANAGER|PROJECT_SUPERVISOR|PROJECT_AUDITOR|SERVICE_VENDOR|SERVICE_ADMIN|SERVICE_WORKER|BIM_TECH'), verb: false, required: true,type:string;
		string	category('业主|品牌方|优荣平台|优荣平台|优荣平台|设计|项目管理|项目管理|项目管理|平行分包商|平行分包商|平行分包商'), verb: false, required: true,type:string;
		int	display_order('1|2|3|500'), verb: false, required: true,type:int;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectOrganizationTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		projectNominationList	type(__no_group)--type;
		eventProjectWorkPositionList	project_job(__no_group)--project_job;
	}
} depth=1; isRoot = false

meta{name=project_nomination, vg4project=人力资源}
project_nomination{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('张晓曦-甲方代表'), verb: false, required: true,type:string;
		project_organization_type	type('$(object)'), verb: false, required: true, referenceBy: projectNominationList,type:project_organization_type;
		employee_nomination	worker('$(object)'), verb: false, required: true, referenceBy: projectNominationList,type:employee_nomination;
		project_role	project_role('$(object)'), verb: false, required: true, referenceBy: projectNominationList,type:project_role;
		bool	active('true|false'), verb: false, required: true,type:bool;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectNominationList,type:project;
		work_package	work_package('$(object)'), verb: false, required: false, referenceBy: projectNominationList,type:work_package;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(22){
		contractReviewRecordList	reviewer(__no_group)--reviewer;
		contractCommentsRecordList	submitter(__no_group)--submitter;
		projectMaterialReviewRecordList	reviewer(__no_group)--reviewer;
		projectMaterialCommentsRecordList	submitter(__no_group)--submitter;
		projectAcceptanceList	application_unit(项目运营)--application_unit;
		afterSalesList	solver(__no_group)--solver;
		laborWageManagementSheetListAsContractPaymentManager	contract_payment_manager(__no_group)--contract_payment_manager;
		laborWageManagementSheetListAsPlatformLaborManager	platform_labor_manager(__no_group)--contract_payment_manager;
		laborWageManagementSheetListAsPaymentManager	payment_manager(__no_group)--contract_payment_manager;
		laborDisputeList	applicant(__no_group)--applicant;
		laborRecordList	project_nomination(__no_group)--project_nomination;
		workOvertimeRecordList	project_nomination(__no_group)--project_nomination;
		projectReportList	submitter(__no_group)--submitter;
		projectCommandAssignmentList	reciever(__no_group)--reciever;
		materialPreservedSampleList	material_manager(__no_group)--material_manager;
		materialBidSampleList	material_manager(__no_group)--material_manager;
		materialChangeList	applicant(__no_group)--applicant;
		materialAcceptanceApplicationList	auditor(__no_group)--auditor;
		eventMaterialChangeInfoList	applicant(__no_group)--applicant;
		eventMaterialAcceptanceBasicInfoList	auditor(__no_group)--auditor;
		eventMaterialPreservedInfoList	material_manager(__no_group)--material_manager;
		eventLaborDisputeList	applicant(__no_group)--applicant;
	}
} depth=5; isRoot = false

meta{name=project_role, features=status, identified_by=code}
project_role{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('负责人|管理人员|员工'), verb: false, required: true,type:string;
		string	code('PERSON_IN_CHARGE|ADMIN|WORKER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectRoleList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		projectNominationList	project_role(__no_group)--project_role;
		eventProjectWorkPositionList	project_role(__no_group)--project_role;
	}
} depth=1; isRoot = false

meta{name=project_progress_status, features=status, identified_by=code}
project_progress_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('计划中|执行中|已执行|结算中|已结算|延迟|告警'), verb: false, required: true,type:string;
		string	code('PLANNED|EXECUTING|ACCEPTED|PENDING_ON_SETTLEMENT|SETTLEMENT|DELAYED|WARNNING'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectProgressStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		projectProgressList	status(__no_group)--status;
		eventProjectProgressList	project_progress_status(__no_group)--project_progress_status;
	}
} depth=1; isRoot = false

meta{name=project_progress, vg4project=项目运营}
project_progress{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('合同订立|第一阶段完成'), verb: false, required: true,type:string;
		string_longtext	brief('text()'), verb: false, required: true,type:string_longtext;
		project_progress_status	status('$(object)'), verb: false, required: true, referenceBy: projectProgressList,type:project_progress_status;
		date	plan_start_date('2100-01-01'), verb: false, required: false,type:date;
		date	actual_start_date('2100-01-01'), verb: false, required: false,type:date;
		date	plan_finish_date('2100-01-01'), verb: false, required: false,type:date;
		date	actual_finish_date('2100-01-01'), verb: false, required: false,type:date;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectProgressList,type:project;
		project_phase	project_phase('$(object)'), verb: false, required: true, referenceBy: projectProgressList,type:project_phase;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		contractPayItemList	project_progress(__no_group)--project_progress;
		laborWageManagementSheetList	project_progress(__no_group)--project_progress;
		materialRecordList	planned_approach_phase(__no_group)--planned_approach_phase;
		eventContractPaymentPhaseList	project_progress(__no_group)--project_progress;
	}
} depth=4; isRoot = false

meta{name=daily_task_category, features=status, identified_by=code}
daily_task_category{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目信息|项目指令|项目报告|项目进度|项目通知|设计管理|项目验收|质量管理|业务往来|技术交底|施工方案|造价咨询|项目招标|劳动监督|安全文明|设计变更|违约处罚|材料管理|售后服务|先行赔付|金融服务|BIM应用|法律合规|教育培训'), verb: false, required: true,type:string;
		string	code('INFO|DIRECTIVE|REPORT|PROGRESS|NOTICE|DESIGN|ACCEPTANCE|QUALITY|ENGINEER_REPLY|TECH_DISCLOSURE|CONSTRUCTION_DEPLOY|COST|BIDDING|LABOR|SECURE|CHANGE_DESIGN|VIOLATION|MATERIAL|AFTER_SALE|COMPENSATION|FINANCIAL_SERVICE|BIM_APPLICATION|LAW|EDUCATION'), verb: false, required: true,type:string;
		int	display_order('1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21'), verb: false, required: true,type:int;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: dailyTaskCategoryList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		dailyTaskTypeList	category(__no_group)--category;
	}
} depth=1; isRoot = false

meta{name=daily_task_type, group_by=category, features=setting}
daily_task_type{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目工程概况|品牌方信息|营业厅信息|服务商信息|业主指令|项目经理指令|项目监理指令|平台指令|施工日报|监理日报|项目经理日报|施工周报|监理周报|项目经理周报|施工月报|监理月报|项目经理月报|第一阶段：基础验收|第二阶段：隐蔽验收|第三阶段：基装验收|第四阶段：竣工前验收|第五阶段：竣工验收|第六阶段：交付验收|经理通知|监理通知|平台通知|业主通知|行业部门通知|其它|设计咨询|概念设计|方案设计|施工图设计|设计售后|项目进度验收|分部分项验收|工程包验收|资料收集|决策分析|投标复查|合同技术复查|开工前准备|分部分项质量验收|工序质量验收|质量事故处理|竣工检验|竣工资料|工程联系回复|设计图交底|施工合同交底|施工组织设计交底|分部分项技术交底|安全技术交底|施工部署计划|具体部署|实施方案|进度方案|施工平面|风险管控|技术组织|专项方案|项目估算|项目概算|项目控价|其它|设计招标|实施招标|悬赏招标|劳务监督管理|劳务工资发放|劳务纠纷处理|管理依据|安全措施规范|管理目标|管理体系|管理制度|教育培训|定期巡查|防火管理|用电管理|高空管理|事故处理|上岗检查|文明施工|安全惩罚|部门要求变更|审图要求变更|施工设计变更|项目定为变更|降低成本变更|进度滞后处罚|质量违约处罚|安全文明处罚|其它违约处罚|材料管理原则|投标材料封存|进场材料验收|进场材料封存|材料变更|售后客服|售后维修|合同纠纷|工程事故|劳资纠纷|委贷资金|贷款申请|贷款合同|当日劳务录入'), verb: false, required: true,type:string;
		string	code('INFO_SUMMARY|INFO_BRAND|INFO_STORE|INFO_VENDOR|DIRECTIVE_PROPRIETOR|DIRECTIVE_MANAGER|DIRECTIVE_SUPERVISOR|DIRECTIVE_PLATFORM|REPORT_CONSTRUCTION_DAILY|REPORT_SUPERVISOR_DAILY|REPORT_MANAGER_DAILY|REPORT_CONSTRUCTION_WEEKLY|REPORT_SUPERVISOR_WEEKLY|REPORT_MANAGER_WEEKLY|REPORT_CONSTRUCTION_MONTHLY|REPORT_SUPERVISOR_MONTHLY|REPORT_MANAGER_MONTHLY|PROGRESS_PHASE1|PROGRESS_PHASE2|PROGRESS_PHASE3|PROGRESS_PHASE4|PROGRESS_PHASE5|PROGRESS_PHASE6|NOTICE_MANAGER|NOTICE_SUPERVISOR|NOTICE_PLATFORM|NOTICE_PROPRIETOR|NOTICE_DEPARTMENT|NOTICE_OTHER|DESIGN_CONSULT|DESIGN_CONCEPT|DESIGN_SCHEMA|DESIGN_CONSTRUCTION|DESIGN_AFTER_SALE|ACCEPTANCE_PROGRESS|ACCEPTANCE_TASK|ACCEPTANCE_WORKPACKAGE|QUALITY_COLLECTION|QUALITY_ANALYSIS|QUALITY_BID_CHECK|QUALITY_TECH_REVIEW|QUALITY_START_PREPARE|QUALITY_DIVISION_ACCEPTANCE|QUALITY_PROCEDURE|QUALITY_ACCIDENT|QUALITY_COMPLETION_CHECK|QUALITY_COMPLETION_MATERIAL|ENGINEER_REPLY|TECH_DISCLOSURE_DESIGN|TECH_DISCLOSURE_CONSTRUCTION|TECH_DISCLOSURE_ORGANIZATION|TECH_DISCLOSURE_DIVISION|TECH_DISCLOSURE_SECURE|TECH_DISCLOSURE_DEPLOY|CONSTRUCTION_DEPLOY|CONSTRUCTION_SCHEMA|CONSTRUCTION_PROGRESS|CONSTRUCTION_CONSTRUCTION_PLANE|CONSTRUCTION_RISK|CONSTRUCTION_TECH_ORG|CONSTRUCTION_SPECIAL_SCHEMA|COST_EVALUATION|COST_ESTIMATE|COST_CONTROL|COST_OTHER|BID_DESIGN|BID_CONSTRUCTION|BID_BOUNUS|LABOR_SUPERVISOR|LABOR_WAGE|LABOR_DISPUTE|SECURE_GIST|SECURE_STANDARD|SECURE_TARGET|SECURE_SYSTEM|SECURE_INSTITUTION|SECURE_EDUCATION|SECURE_REGULAR|SECURE_FIRE|SECURE_ELECTRIC|SECURE_HIGH|SECURE_ACCIDENT|SECURE_CHECK|SECURE_CONSTRUCTION|SECURE_VIOLATION|CHANGE_DESIGN_DEPARTMENT|CHANGE_DESIGN_REVIEW|CHANGE_DESIGN_CONSTRUCTION|CHANGE_DESIGN_POSITION|CHANGE_DESIGN_COST|VIOLATION_PROGRESS_DELAY|VIOLATION_QUALITY|VIOLATION_SECURE|VIOLATION_OTHER|MATERIAL_PRINCIPAL|MATERIAL_BID|MATERIAL_ACCEPTANCE|MATERIAL_SEAL_UP|MATERIAL_CHANGE|AFTER_SALE_DESKTOP|AFTER_SALE_REPAIR|COMPENSATION_CONTRACT|COMPENSATION_CONSTRUCTION|COMPENSATION_LABOR|LOAN_FUND|LOAN_APPLICATION|LOAN_CONTRACT|LABOR_RECORD'), verb: false, required: true,type:string;
		daily_task_category	category('$(object)'), verb: false, required: true, referenceBy: dailyTaskTypeList,type:daily_task_category;
		int	display_order('1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|500'), verb: false, required: true,type:int;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: dailyTaskTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(15){
		dailyTaskSecondTypeList	parent(__no_group)--parent;
		dailyTaskTemplateList	daily_task_type(__no_group)--daily_task_type;
		projectMaterialList	daily_task_type(__no_group)--daily_task_type;
		projectAcceptanceList	daily_task_type(__no_group)--daily_task_type;
		afterSalesList	daily_task_type(__no_group)--daily_task_type;
		projectPenaltiesList	daily_task_type(__no_group)--daily_task_type;
		laborWageManagementSheetList	daily_task_type(__no_group)--daily_task_type;
		projectReportList	daily_task_type(__no_group)--daily_task_type;
		projectCommandList	daily_task_type(__no_group)--daily_task_type;
		materialPreservedSampleList	daily_task_type(__no_group)--daily_task_type;
		materialBidSampleList	daily_task_type(__no_group)--daily_task_type;
		materialRecordList	daili_task_type(__no_group)--daili_task_type;
		materialChangeList	daili_task_type(__no_group)--daili_task_type;
		eventProjectCommandList	directive_type(__no_group)--directive_type;
		eventAcceptanceApplicationList	acceptance_type(__no_group)--acceptance_type;
	}
} depth=2; isRoot = false

meta{name=daily_task_second_type, group_by=category, features=setting}
daily_task_second_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目工程概况|品牌方信息|营业厅信息|服务商信息|业主指令|项目经理指令|项目监理指令|平台指令|施工日报|监理日报|项目经理日报|施工周报|监理周报|项目经理周报|施工月报|监理月报|项目经理月报|第一阶段：基础验收|第二阶段：隐蔽验收|第三阶段：基装验收|第四阶段：竣工前验收|第五阶段：竣工验收|第六阶段：交付验收|经理通知|监理通知|平台通知|业主通知|行业部门通知|其它|设计咨询|概念设计|方案设计|施工图设计|设计售后|项目进度验收|分部分项验收|工程包验收|资料收集|决策分析|投标复查|合同技术复查|开工前准备|分部分项质量验收|工序质量验收|质量事故处理|竣工检验|竣工资料|工程联系回复|设计图交底|施工合同交底|施工组织设计交底|分部分项技术交底|安全技术交底|施工部署计划|具体部署|实施方案|进度方案|施工平面|风险管控|技术组织|专项方案|项目估算|项目概算|项目控价|其它|设计招标|实施招标|悬赏招标|劳务监督管理|劳务工资发放|劳务纠纷处理|管理依据|安全措施规范|管理目标|管理体系|管理制度|教育培训|定期巡查|防火管理|用电管理|高空管理|事故处理|上岗检查|文明施工|安全惩罚|部门要求变更|审图要求变更|施工设计变更|项目定为变更|降低成本变更|进度滞后处罚|质量违约处罚|安全文明处罚|其它违约处罚|材料管理原则|投标材料封存|进场材料验收|进场材料封存|材料变更|售后客服|售后维修|合同纠纷|工程事故|劳资纠纷|委贷资金|贷款申请|贷款合同|当日劳务录入'), verb: false, required: true,type:string;
		string	code('INFO_SUMMARY|INFO_BRAND|INFO_STORE|INFO_VENDOR|DIRECTIVE_PROPRIETOR|DIRECTIVE_MANAGER|DIRECTIVE_SUPERVISOR|DIRECTIVE_PLATFORM|REPORT_CONSTRUCTION_DAILY|REPORT_SUPERVISOR_DAILY|REPORT_MANAGER_DAILY|REPORT_CONSTRUCTION_WEEKLY|REPORT_SUPERVISOR_WEEKLY|REPORT_MANAGER_WEEKLY|REPORT_CONSTRUCTION_MONTHLY|REPORT_SUPERVISOR_MONTHLY|REPORT_MANAGER_MONTHLY|PROGRESS_PHASE1|PROGRESS_PHASE2|PROGRESS_PHASE3|PROGRESS_PHASE4|PROGRESS_PHASE5|PROGRESS_PHASE6|NOTICE_MANAGER|NOTICE_SUPERVISOR|NOTICE_PLATFORM|NOTICE_PROPRIETOR|NOTICE_DEPARTMENT|NOTICE_OTHER|DESIGN_CONSULT|DESIGN_CONCEPT|DESIGN_SCHEMA|DESIGN_CONSTRUCTION|DESIGN_AFTER_SALE|ACCEPTANCE_PROGRESS|ACCEPTANCE_TASK|ACCEPTANCE_WORKPACKAGE|QUALITY_COLLECTION|QUALITY_ANALYSIS|QUALITY_BID_CHECK|QUALITY_TECH_REVIEW|QUALITY_START_PREPARE|QUALITY_DIVISION_ACCEPTANCE|QUALITY_PROCEDURE|QUALITY_ACCIDENT|QUALITY_COMPLETION_CHECK|QUALITY_COMPLETION_MATERIAL|ENGINEER_REPLY|TECH_DISCLOSURE_DESIGN|TECH_DISCLOSURE_CONSTRUCTION|TECH_DISCLOSURE_ORGANIZATION|TECH_DISCLOSURE_DIVISION|TECH_DISCLOSURE_SECURE|TECH_DISCLOSURE_DEPLOY|CONSTRUCTION_DEPLOY|CONSTRUCTION_SCHEMA|CONSTRUCTION_PROGRESS|CONSTRUCTION_CONSTRUCTION_PLANE|CONSTRUCTION_RISK|CONSTRUCTION_TECH_ORG|CONSTRUCTION_SPECIAL_SCHEMA|COST_EVALUATION|COST_ESTIMATE|COST_CONTROL|COST_OTHER|BID_DESIGN|BID_CONSTRUCTION|BID_BOUNUS|LABOR_SUPERVISOR|LABOR_WAGE|LABOR_DISPUTE|SECURE_GIST|SECURE_STANDARD|SECURE_TARGET|SECURE_SYSTEM|SECURE_INSTITUTION|SECURE_EDUCATION|SECURE_REGULAR|SECURE_FIRE|SECURE_ELECTRIC|SECURE_HIGH|SECURE_ACCIDENT|SECURE_CHECK|SECURE_CONSTRUCTION|SECURE_VIOLATION|CHANGE_DESIGN_DEPARTMENT|CHANGE_DESIGN_REVIEW|CHANGE_DESIGN_CONSTRUCTION|CHANGE_DESIGN_POSITION|CHANGE_DESIGN_COST|VIOLATION_PROGRESS_DELAY|VIOLATION_QUALITY|VIOLATION_SECURE|VIOLATION_OTHER|MATERIAL_PRINCIPAL|MATERIAL_BID|MATERIAL_ACCEPTANCE|MATERIAL_SEAL_UP|MATERIAL_CHANGE|AFTER_SALE_DESKTOP|AFTER_SALE_REPAIR|COMPENSATION_CONTRACT|COMPENSATION_CONSTRUCTION|COMPENSATION_LABOR|LOAN_FUND|LOAN_APPLICATION|LOAN_CONTRACT|LABOR_RECORD'), verb: false, required: true,type:string;
		daily_task_type	parent('$(object)'), verb: false, required: true, referenceBy: dailyTaskSecondTypeList,type:daily_task_type;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: dailyTaskSecondTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		dailyTaskThirdTypeList	parent(__no_group)--parent;
	}
} depth=3; isRoot = false

meta{name=daily_task_third_type, group_by=category, features=setting}
daily_task_third_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目工程概况|品牌方信息|营业厅信息|服务商信息|业主指令|项目经理指令|项目监理指令|平台指令|施工日报|监理日报|项目经理日报|施工周报|监理周报|项目经理周报|施工月报|监理月报|项目经理月报|第一阶段：基础验收|第二阶段：隐蔽验收|第三阶段：基装验收|第四阶段：竣工前验收|第五阶段：竣工验收|第六阶段：交付验收|经理通知|监理通知|平台通知|业主通知|行业部门通知|其它|设计咨询|概念设计|方案设计|施工图设计|设计售后|项目进度验收|分部分项验收|工程包验收|资料收集|决策分析|投标复查|合同技术复查|开工前准备|分部分项质量验收|工序质量验收|质量事故处理|竣工检验|竣工资料|工程联系回复|设计图交底|施工合同交底|施工组织设计交底|分部分项技术交底|安全技术交底|施工部署计划|具体部署|实施方案|进度方案|施工平面|风险管控|技术组织|专项方案|项目估算|项目概算|项目控价|其它|设计招标|实施招标|悬赏招标|劳务监督管理|劳务工资发放|劳务纠纷处理|管理依据|安全措施规范|管理目标|管理体系|管理制度|教育培训|定期巡查|防火管理|用电管理|高空管理|事故处理|上岗检查|文明施工|安全惩罚|部门要求变更|审图要求变更|施工设计变更|项目定为变更|降低成本变更|进度滞后处罚|质量违约处罚|安全文明处罚|其它违约处罚|材料管理原则|投标材料封存|进场材料验收|进场材料封存|材料变更|售后客服|售后维修|合同纠纷|工程事故|劳资纠纷|委贷资金|贷款申请|贷款合同|当日劳务录入'), verb: false, required: true,type:string;
		string	code('INFO_SUMMARY|INFO_BRAND|INFO_STORE|INFO_VENDOR|DIRECTIVE_PROPRIETOR|DIRECTIVE_MANAGER|DIRECTIVE_SUPERVISOR|DIRECTIVE_PLATFORM|REPORT_CONSTRUCTION_DAILY|REPORT_SUPERVISOR_DAILY|REPORT_MANAGER_DAILY|REPORT_CONSTRUCTION_WEEKLY|REPORT_SUPERVISOR_WEEKLY|REPORT_MANAGER_WEEKLY|REPORT_CONSTRUCTION_MONTHLY|REPORT_SUPERVISOR_MONTHLY|REPORT_MANAGER_MONTHLY|PROGRESS_PHASE1|PROGRESS_PHASE2|PROGRESS_PHASE3|PROGRESS_PHASE4|PROGRESS_PHASE5|PROGRESS_PHASE6|NOTICE_MANAGER|NOTICE_SUPERVISOR|NOTICE_PLATFORM|NOTICE_PROPRIETOR|NOTICE_DEPARTMENT|NOTICE_OTHER|DESIGN_CONSULT|DESIGN_CONCEPT|DESIGN_SCHEMA|DESIGN_CONSTRUCTION|DESIGN_AFTER_SALE|ACCEPTANCE_PROGRESS|ACCEPTANCE_TASK|ACCEPTANCE_WORKPACKAGE|QUALITY_COLLECTION|QUALITY_ANALYSIS|QUALITY_BID_CHECK|QUALITY_TECH_REVIEW|QUALITY_START_PREPARE|QUALITY_DIVISION_ACCEPTANCE|QUALITY_PROCEDURE|QUALITY_ACCIDENT|QUALITY_COMPLETION_CHECK|QUALITY_COMPLETION_MATERIAL|ENGINEER_REPLY|TECH_DISCLOSURE_DESIGN|TECH_DISCLOSURE_CONSTRUCTION|TECH_DISCLOSURE_ORGANIZATION|TECH_DISCLOSURE_DIVISION|TECH_DISCLOSURE_SECURE|TECH_DISCLOSURE_DEPLOY|CONSTRUCTION_DEPLOY|CONSTRUCTION_SCHEMA|CONSTRUCTION_PROGRESS|CONSTRUCTION_CONSTRUCTION_PLANE|CONSTRUCTION_RISK|CONSTRUCTION_TECH_ORG|CONSTRUCTION_SPECIAL_SCHEMA|COST_EVALUATION|COST_ESTIMATE|COST_CONTROL|COST_OTHER|BID_DESIGN|BID_CONSTRUCTION|BID_BOUNUS|LABOR_SUPERVISOR|LABOR_WAGE|LABOR_DISPUTE|SECURE_GIST|SECURE_STANDARD|SECURE_TARGET|SECURE_SYSTEM|SECURE_INSTITUTION|SECURE_EDUCATION|SECURE_REGULAR|SECURE_FIRE|SECURE_ELECTRIC|SECURE_HIGH|SECURE_ACCIDENT|SECURE_CHECK|SECURE_CONSTRUCTION|SECURE_VIOLATION|CHANGE_DESIGN_DEPARTMENT|CHANGE_DESIGN_REVIEW|CHANGE_DESIGN_CONSTRUCTION|CHANGE_DESIGN_POSITION|CHANGE_DESIGN_COST|VIOLATION_PROGRESS_DELAY|VIOLATION_QUALITY|VIOLATION_SECURE|VIOLATION_OTHER|MATERIAL_PRINCIPAL|MATERIAL_BID|MATERIAL_ACCEPTANCE|MATERIAL_SEAL_UP|MATERIAL_CHANGE|AFTER_SALE_DESKTOP|AFTER_SALE_REPAIR|COMPENSATION_CONTRACT|COMPENSATION_CONSTRUCTION|COMPENSATION_LABOR|LOAN_FUND|LOAN_APPLICATION|LOAN_CONTRACT|LABOR_RECORD'), verb: false, required: true,type:string;
		daily_task_second_type	parent('$(object)'), verb: false, required: true, referenceBy: dailyTaskThirdTypeList,type:daily_task_second_type;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: dailyTaskThirdTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目运营, name=daily_task_template}
daily_task_template{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('模板名称'), verb: false, required: true,type:string;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: dailyTaskTemplateList,type:daily_task_type;
		string_document	template('template.docx'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		employee_nomination	creator('$(object)'), verb: false, required: true, referenceBy: dailyTaskTemplateList,type:employee_nomination;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: dailyTaskTemplateList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectMaterialList	daily_task_template(__no_group)--daily_task_template;
	}
} depth=5; isRoot = false

meta{name=project_material_type_configuration}
project_material_type_configuration{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		project_material_type	type('$(object)'), verb: false, required: true, referenceBy: projectMaterialTypeConfigurationList,type:project_material_type;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectMaterialTypeConfigurationList,type:project;
		bool	display('true|false'), verb: false, required: true,type:bool;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=project_material_type, features=setting, identified_by=code}
project_material_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('开工前资料|质量验收资料|试验资料|合格证资料|施工过程资料|应增补资料|竣工资料|监督存档资料|项目验收申请|项目验收单'), verb: false, required: true,type:string;
		string	code('START_MATERIAL|QUALITY_ACCEPTANCE_MATERIAL|EXPERIMENT_MATERIAL|CERTIFICATION_MATERIAL|PROCESS_MATERIAL|SUPPLEMENT_MATERIAL|COMPLETION_MATERIAL|SUPERVISION_MATERIAL|ACCEPTANCE_APPLICATION|ACCEPTANCE'), verb: false, required: true,type:string;
		project_material_parent_type	parent('$(object)'), verb: false, required: true, referenceBy: projectMaterialTypeList,type:project_material_parent_type;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectMaterialTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		projectMaterialTypeConfigurationList	type(__no_group)--type;
		projectMaterialList	project_material_type(__no_group)--project_material_type;
	}
} depth=2; isRoot = false

meta{name=project_material_parent_type, group_by=type, features=setting}
project_material_parent_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('父类型'), verb: false, required: true,type:string;
		string	code('TEST'), verb: false, required: true,type:string;
		int	display_order('1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|500'), verb: false, required: true,type:int;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectMaterialParentTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectMaterialTypeList	parent(__no_group)--parent;
	}
} depth=1; isRoot = false

meta{name=project_material_review_status, features=status, identified_by=code}
project_material_review_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待审核|合格|不合格'), verb: false, required: true,type:string;
		string	code('PENDING|QUALIFIED|DISQUALIFICATION'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectMaterialReviewStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=material_review_result, features=status, identified_by=code}
material_review_result{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待审核|通过|不通过'), verb: false, required: true,type:string;
		string	code('PENDING|PASS|NOPASS'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: materialReviewResultList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectMaterialList	material_review_result(__no_group)--material_review_result;
	}
} depth=1; isRoot = false

meta{name=project_material, vg4project=项目运营}
project_material{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('资料名称'), verb: false, required: true,type:string;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: projectMaterialList,type:daily_task_type;
		daily_task_template	daily_task_template('$(object)'), verb: false, required: false, referenceBy: projectMaterialList,type:daily_task_template;
		project_material_type	project_material_type('$(object)'), verb: false, required: true, referenceBy: projectMaterialList,type:project_material_type;
		string_document	document('document.docx'), verb: false, required: true,type:string_document;
		employee_nomination	material_submitter('$(object)'), verb: false, required: true, referenceBy: projectMaterialList,type:employee_nomination;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectMaterialList,type:project;
		material_review_result	material_review_result('$(object)'), verb: false, required: true, referenceBy: projectMaterialList,type:material_review_result;
		string	review_result_comment('审核结果备注'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(9){
		projectMaterialReviewRecordList	project_material(__no_group)--project_material;
		projectMaterialCommentsRecordList	project_material(__no_group)--project_material;
		projectMaterialViewRecordList	project_material(__no_group)--project_material;
		projectMaterialOperationLogList	project_material(__no_group)--project_material;
		projectAcceptanceListAsAcceptanceApplication	acceptance_application(__no_group)--acceptance_application;
		projectAcceptanceListAsAcceptance	acceptance(__no_group)--acceptance_application;
		laborWageManagementSheetListAsBidPriceList	bid_price_list(__no_group)--bid_price_list;
		laborWageManagementSheetListAsLaborWage	labor_wage(__no_group)--bid_price_list;
		projectCommandList	project_material(__no_group)--project_material;
	}
} depth=6; isRoot = false

meta{name=project_material_review_record}
project_material_review_record{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		project_material_review_record_status	status('$(object)'), verb: false, required: true, referenceBy: projectMaterialReviewRecordList,type:project_material_review_record_status;
		project_material	project_material('$(object)'), verb: false, required: true, referenceBy: projectMaterialReviewRecordList,type:project_material;
		project_nomination	reviewer('$(object)'), verb: false, required: true, referenceBy: projectMaterialReviewRecordList,type:project_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_material_review_record_status, features=status, identified_by=code}
project_material_review_record_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已通过|未通过|待审核'), verb: false, required: true,type:string;
		string	code('APPROVED|UNAPPROVED|PENDING'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectMaterialReviewRecordList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=project_material_comments_record}
project_material_comments_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string_image	image('example.jpg'), verb: false, required: true,type:string_image;
		project_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: projectMaterialCommentsRecordList,type:project_nomination;
		project_material	project_material('$(object)'), verb: false, required: true, referenceBy: projectMaterialCommentsRecordList,type:project_material;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_material_view_record, max_count=1000000000, vg4merchant=项目运营}
project_material_view_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		int	view_count('0|1|300'), verb: false, required: true,type:int;
		project_material	project_material('$(object)'), verb: false, required: true, referenceBy: projectMaterialViewRecordList,type:project_material;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: projectMaterialViewRecordList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_material_operation_log, vg4operator_merchant=项目运营, features=log, max_count=1000000000}
project_material_operation_log{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('创建|删除'), verb: false, required: true,type:string;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		string	log_type('create|delete|review'), verb: false, required: true,type:string;
		string	refer_object_type('project'), verb: false, required: true,type:string;
		string	refer_object_id('p000001'), verb: false, required: true,type:string;
		project_material	project_material('$(object)'), verb: false, required: true, referenceBy: projectMaterialOperationLogList,type:project_material;
		merchant	operator_merchant('$(object)'), verb: false, required: false, referenceBy: projectMaterialOperationLogList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=yourong_project_book, vg4project=项目运营}
yourong_project_book{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		yourong_project_book_type	type('$(object)'), verb: false, required: true, referenceBy: yourongProjectBookList,type:yourong_project_book_type;
		string	title('项目计划项目数'), verb: false, required: true,type:string;
		string_longtext	brief('text()'), verb: false, required: true,type:string_longtext;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		string_image	image_url('project_book.jpg'), verb: false, required: true,type:string_image;
		yourong_project_book_status	status('$(object)'), verb: false, required: true, referenceBy: yourongProjectBookList,type:yourong_project_book_status;
		project	project('$(object)'), verb: false, required: true, referenceBy: yourongProjectBookList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=yourong_project_book_status, identified_by=code, features=status}
yourong_project_book_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已提交|审核中|已确认|待调整'), verb: false, required: true,type:string;
		string	code('SUBMITTED|PROCESSING|CONFIRMED|TO_BE_ADJUSTED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: yourongProjectBookStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		yourongProjectBookList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{name=yourong_project_book_type, identified_by=code, features=status}
yourong_project_book_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目建议书|设计任务书|造价控制书|施工任务书|设计招标书|实施招标书'), verb: false, required: true,type:string;
		string	code('PROPOSAL|DESIGN|PRICING|CONSTRUCTION|DESIGN_RFP|CONSTRUCTION_RFP'), verb: false, required: true,type:string;
		string_image	image_url('https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/1%402x.png|https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/2%402x.png|https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/3%402x.png|https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/4%402x.png|https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/5%402x.png|https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/5%402x.png'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: yourongProjectBookTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		yourongProjectBookList	type(__no_group)--type;
	}
} depth=1; isRoot = false

meta{name=project_acceptance, vg4application_unit=项目运营, vg4property_owner=项目运营}
project_acceptance{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('大邑压力山大办公大楼基装验收'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceList,type:project;
		merchant	property_owner('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceList,type:merchant;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceList,type:daily_task_type;
		date_time	acceptance_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		project_nomination	application_unit('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceList,type:project_nomination;
		date_time	application_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		project_material	acceptance_application('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceListAsAcceptanceApplication,type:project_material;
		project_material	acceptance('$(object)'), verb: false, required: false, referenceBy: projectAcceptanceListAsAcceptance,type:project_material;
		project_acceptance_status	status('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceList,type:project_acceptance_status;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_acceptance_status, features=status, identified_by=code}
project_acceptance_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('申请中|已取消|验收中|已通过|未通过'), verb: false, required: true,type:string;
		string	code('IN_APPLICATION|APPLICATION_CANCELLED|IN_ACCEPTANCE|APPROVED|UNAPPROVED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectAcceptanceList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=after_sales, vg4project=售后管理}
after_sales{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		project	project('$(object)'), verb: false, required: true, referenceBy: afterSalesList,type:project;
		string	title('雅丽泰酒店基装问题售后单'), verb: false, required: true,type:string;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		employee_nomination	creator('$(object)'), verb: false, required: true, referenceBy: afterSalesList,type:employee_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		after_sales_status	status('$(object)'), verb: false, required: true, referenceBy: afterSalesList,type:after_sales_status;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: afterSalesList,type:daily_task_type;
		string	resolve_comments('问题已协商处理解决'), verb: false, required: true,type:string;
		project_nomination	solver('$(object)'), verb: false, required: false, referenceBy: afterSalesList,type:project_nomination;
		date	solve_time('2020-05-05'), verb: false, required: false,type:date;
		images	solve_images('images()'), verb: false, required: true,type:images;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=after_sales_status, features=status, identified_by=code}
after_sales_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已提交|处理中|已解决'), verb: false, required: true,type:string;
		string	code('SUBMITTED|PROCESSING|SOLVED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		afterSalesList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=project_penalties, vg4project=项目运营}
project_penalties{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('雅丽泰酒店消防安全处罚'), verb: false, required: true,type:string;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	reason('text()'), verb: false, required: true,type:string_longtext;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectPenaltiesList,type:project;
		money	forfeit('$9999999.99'), verb: false, required: true,type:money;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: projectPenaltiesList,type:standard_contract;
		project_penalties_status	status('$(object)'), verb: false, required: true, referenceBy: projectPenaltiesList,type:project_penalties_status;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: projectPenaltiesList,type:daily_task_type;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_penalties_status, features=status, identified_by=code}
project_penalties_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已提交|处理中|已处罚'), verb: false, required: true,type:string;
		string	code('SUBMITTED|PROCESSING|FINISHED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectPenaltiesList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=labor_wage_management_sheet, vg4project=人力资源}
labor_wage_management_sheet{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		project	project('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetList,type:project;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetList,type:daily_task_type;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetList,type:standard_contract;
		project_material	bid_price_list('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetListAsBidPriceList,type:project_material;
		money	total_labor_cost('$99999.99'), verb: false, required: true,type:money;
		project_progress	project_progress('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetList,type:project_progress;
		date	plan_pay_date('2200-1-1'), verb: false, required: true,type:date;
		money	plan_pay_amount('$99999.99'), verb: false, required: true,type:money;
		project_nomination	contract_payment_manager('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetListAsContractPaymentManager,type:project_nomination;
		project_nomination	platform_labor_manager('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetListAsPlatformLaborManager,type:project_nomination;
		date	actual_pay_date('2200-1-1'), verb: false, required: true,type:date;
		money	actual_pay_amount('$99999.99'), verb: false, required: true,type:money;
		project_nomination	payment_manager('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetListAsPaymentManager,type:project_nomination;
		project_material	labor_wage('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetListAsLaborWage,type:project_material;
		bool	contractor_commitment('true|false'), verb: false, required: true,type:bool;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=labor_dispute, vg4project=人力资源}
labor_dispute{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('雅丽泰办公大楼劳务纠纷'), verb: false, required: true,type:string;
		work_package	work_package('$(object)'), verb: false, required: true, referenceBy: laborDisputeList,type:work_package;
		labor_dispute_type	type('$(object)'), verb: false, required: true, referenceBy: laborDisputeList,type:labor_dispute_type;
		labor_dispute_status	status('$(object)'), verb: false, required: true, referenceBy: laborDisputeList,type:labor_dispute_status;
		string	level('danger|primary|warn|normal|default'), verb: false, required: true,type:string;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string	litigant('张三'), verb: false, required: true,type:string;
		project_nomination	applicant('$(object)'), verb: false, required: true, referenceBy: laborDisputeList,type:project_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		project	project('$(object)'), verb: false, required: true, referenceBy: laborDisputeList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=labor_dispute_status, features=status, identified_by=code}
labor_dispute_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已受理|处理中|已处理'), verb: false, required: true,type:string;
		string	code('ACCEPTED|PROCESSING|SOLVED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: laborDisputeStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		laborDisputeList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{name=labor_dispute_type, features=status, identified_by=code}
labor_dispute_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('一|二|三'), verb: false, required: true,type:string;
		string	code('ONE|TWO|THREE'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: laborDisputeTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		laborDisputeList	type(__no_group)--type;
		eventLaborDisputeList	type(__no_group)--type;
	}
} depth=1; isRoot = false

meta{name=labor_record}
labor_record{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		project_nomination	project_nomination('$(object)'), verb: false, required: true, referenceBy: laborRecordList,type:project_nomination;
		labor_record_type	type('$(object)'), verb: false, required: true, referenceBy: laborRecordList,type:labor_record_type;
		date	attendance_date('2020-05-05'), verb: false, required: true,type:date;
		date	morning_start_working_time('2020-05-05'), verb: false, required: true,type:date;
		date	morning_end_working_time('2020-05-05'), verb: false, required: true,type:date;
		date	afternoon_start_working_time('2020-05-05'), verb: false, required: true,type:date;
		date	afternoon_end_working_time('2020-05-05'), verb: false, required: true,type:date;
		project	project('$(object)'), verb: false, required: true, referenceBy: laborRecordList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=work_overtime_record}
work_overtime_record{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		project_nomination	project_nomination('$(object)'), verb: false, required: true, referenceBy: workOvertimeRecordList,type:project_nomination;
		date	attendance_date('2020-05-05'), verb: false, required: true,type:date;
		date	start_time('2020-05-05'), verb: false, required: true,type:date;
		date	end_time('2020-05-05'), verb: false, required: true,type:date;
		project	project('$(object)'), verb: false, required: true, referenceBy: workOvertimeRecordList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=labor_record_type, features=status, identified_by=code}
labor_record_type{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('上班|休息|请假|旷工'), verb: false, required: true,type:string;
		string	code('WORD|REST|VACATION|ABSENTEEISM'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		laborRecordList	type(__no_group)--type;
	}
} depth=0; isRoot = true

meta{name=project_report, vg4project=项目运营}
project_report{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('雅丽泰办公大楼装修日报'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectReportList,type:project;
		string_longtext	contract_merchant_name('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	responsible_merchant_names('text()'), verb: false, required: true,type:string_longtext;
		project_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: projectReportList,type:project_nomination;
		double	temperature('37.5'), verb: false, required: true,type:double;
		string	weather('阴|晴|雨|雪'), verb: false, required: true,type:string;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: projectReportList,type:daily_task_type;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		commonReportList	project_report(__no_group)--project_report;
		projectReportCheckItemList	project_report(__no_group)--project_report;
	}
} depth=6; isRoot = false

meta{name=common_report}
common_report{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('施工配合情况'), verb: false, required: true,type:string;
		string_longtext	content('text()'), verb: false, required: false,type:string_longtext;
		images	images('images()'), verb: false, required: false,type:images;
		project_report	project_report('$(object)'), verb: false, required: true, referenceBy: commonReportList,type:project_report;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_report_check_item}
project_report_check_item{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	title('text()'), verb: false, required: true,type:string_longtext;
		string	check_result('check result|检查结果'), verb: false, required: true,type:string;
		string	process_result('process result|处理结果'), verb: false, required: true,type:string;
		project_report	project_report('$(object)'), verb: false, required: true, referenceBy: projectReportCheckItemList,type:project_report;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_command}
project_command{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('尽快完成基装验收'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectCommandList,type:project;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: projectCommandList,type:daily_task_type;
		string	directive_brief('directive brief|指令事由'), verb: false, required: true,type:string;
		bool	has_cost('true|false'), verb: false, required: true,type:bool;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		project_material	project_material('$(object)'), verb: false, required: false, referenceBy: projectCommandList,type:project_material;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectCommandAssignmentList	project_command(__no_group)--project_command;
	}
} depth=7; isRoot = false

meta{name=project_command_assignment}
project_command_assignment{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		project_command	project_command('$(object)'), verb: false, required: true, referenceBy: projectCommandAssignmentList,type:project_command;
		project_nomination	reciever('$(object)'), verb: false, required: true, referenceBy: projectCommandAssignmentList,type:project_nomination;
		bool	carbon_copy('true|false'), verb: false, required: true,type:bool;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{vg4fund_vendor=金融服务, vg4platform=金融服务, name=loan_fund}
loan_fund{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('委贷资金'), verb: false, required: true,type:string;
		money	amount('$3000.00|$99999.00|$0.00'), verb: false, required: true,type:money;
		merchant	fund_vendor('$(object)'), verb: false, required: true, referenceBy: loanFundList,type:merchant;
		project	project('$(object)'), verb: false, required: true, referenceBy: loanFundList,type:project;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: loanFundList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		financialServiceStatisticReportList	loan_fund(__no_group)--loan_fund;
	}
} depth=4; isRoot = false

meta{vg4platform=金融服务, name=loan_application, vg4loan_project=金融服务, vg4applicant=金融服务}
loan_application{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX借款申请'), verb: false, required: true,type:string;
		project	loan_project('$(object)'), verb: false, required: true, referenceBy: loanApplicationList,type:project;
		money	application_amount('$3000.00|$99999.00|$0.00'), verb: false, required: true,type:money;
		date_time_create	application_time('createTime()'), verb: false, required: true,type:date_time_create;
		merchant	applicant('$(object)'), verb: false, required: true, referenceBy: loanApplicationList,type:merchant;
		loan_application_status	status('$(object)'), verb: false, required: true, referenceBy: loanApplicationList,type:loan_application_status;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: loanApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		loanContractList	loan_application(__no_group)--loan_application;
		financialServiceStatisticReportList	loan_application(__no_group)--loan_application;
	}
} depth=4; isRoot = false

meta{name=loan_application_status, features=status, identified_by=code}
loan_application_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('审核中|已通过|未通过'), verb: false, required: true,type:string;
		string	code('PENDING|APPROVED|UNAPPROVED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		loanApplicationList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{vg4platform=金融服务, name=loan_contract, vg4lender=金融服务, vg4borrower=金融服务}
loan_contract{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX借款合同'), verb: false, required: true,type:string;
		loan_application	loan_application('$(object)'), verb: false, required: true, referenceBy: loanContractList,type:loan_application;
		merchant	borrower('$(object)'), verb: false, required: true, referenceBy: loanContractListAsBorrower,type:merchant;
		merchant	lender('$(object)'), verb: false, required: true, referenceBy: loanContractListAsLender,type:merchant;
		money	loan_amount('$3000.00|$99999.00|$0.00'), verb: false, required: true,type:money;
		int	loan_term('1|2|3|4|5|6|7|20'), verb: false, required: true,type:int;
		project	project('$(object)'), verb: false, required: true, referenceBy: loanContractList,type:project;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: loanContractList,type:platform;
		loan_contract_status	status('$(object)'), verb: false, required: true, referenceBy: loanContractList,type:loan_contract_status;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		financialServiceStatisticReportList	loan_contract(__no_group)--loan_contract;
	}
} depth=5; isRoot = false

meta{name=loan_contract_status, features=status, identified_by=code}
loan_contract_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('履行中|待履行|已履行'), verb: false, required: true,type:string;
		string	code('IN_ACCOMPLISH|PENDING|ACCOMPLISHED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		loanContractList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=compensation_application, vg4project=项目运营}
compensation_application{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('逾期赔付申请'), verb: false, required: true,type:string;
		string_longtext	reason('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		project	project('$(object)'), verb: false, required: true, referenceBy: compensationApplicationList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		compensation_application_status	status('$(object)'), verb: false, required: true, referenceBy: compensationApplicationList,type:compensation_application_status;
		employee_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: compensationApplicationList,type:employee_nomination;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		compensationInvestigationList	compensation_application(__no_group)--compensation_application;
	}
} depth=5; isRoot = false

meta{name=compensation_application_status, features=status, identified_by=code}
compensation_application_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('受理中|已受理'), verb: false, required: true,type:string;
		string	code('ACCEPTING|ACCEPTED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		compensationApplicationList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=compensation_investigation, vg4project=项目运营}
compensation_investigation{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('资料名称'), verb: false, required: true,type:string;
		string_document	document('document.docx'), verb: false, required: true,type:string_document;
		compensation_application	compensation_application('$(object)'), verb: false, required: true, referenceBy: compensationInvestigationList,type:compensation_application;
		project	project('$(object)'), verb: false, required: true, referenceBy: compensationInvestigationList,type:project;
		merchant	submitter('$(object)'), verb: false, required: true, referenceBy: compensationInvestigationList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		compensationResultList	compensation_investigation(__no_group)--compensation_investigation;
	}
} depth=6; isRoot = false

meta{name=compensation_result, vg4project=项目运营}
compensation_result{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('资料名称'), verb: false, required: true,type:string;
		string_document	document('document.docx'), verb: false, required: true,type:string_document;
		compensation_investigation	compensation_investigation('$(object)'), verb: false, required: true, referenceBy: compensationResultList,type:compensation_investigation;
		merchant	submitter('$(object)'), verb: false, required: true, referenceBy: compensationResultList,type:merchant;
		project	project('$(object)'), verb: false, required: true, referenceBy: compensationResultList,type:project;
		compensation_result_status	status('$(object)'), verb: false, required: true, referenceBy: compensationResultList,type:compensation_result_status;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=compensation_result_status, features=status, identified_by=code}
compensation_result_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('赔付中|已赔付'), verb: false, required: true,type:string;
		string	code('UNPAID|PAID'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		compensationResultList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=material_preserved_sample, vg4project=项目运营}
material_preserved_sample{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('通用硅酸盐水泥进场封存单'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:standard_contract;
		string	material_name('复合硅酸盐水泥'), verb: false, required: true,type:string;
		material_category	material_category('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:material_category;
		string	position('地面铺装'), verb: false, required: true,type:string;
		string	model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:material_unit_of_measurement;
		string	material_brand('拉法基'), verb: false, required: true,type:string;
		string	supplier('四川西南水泥'), verb: false, required: true,type:string;
		string	seal_up_material_name('复合硅酸盐水泥存样'), verb: false, required: true,type:string;
		project_nomination	material_manager('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:project_nomination;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		project	project('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:project;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:daily_task_type;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=material_bid_sample, vg4project=项目运营}
material_bid_sample{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('通用硅酸盐水泥进场封存单'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:standard_contract;
		string	material_name('复合硅酸盐水泥'), verb: false, required: true,type:string;
		material_category	material_category('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:material_category;
		string	position('地面铺装'), verb: false, required: true,type:string;
		string	model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:material_unit_of_measurement;
		string	material_brand('拉法基'), verb: false, required: true,type:string;
		string	supplier('四川西南水泥'), verb: false, required: true,type:string;
		string	seal_up_material_name('复合硅酸盐水泥存样'), verb: false, required: true,type:string;
		project_nomination	material_manager('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:project_nomination;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		project	project('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:project;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:daily_task_type;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=项目运营, name=material_category, features=setting, identified_by=code}
material_category{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('主材|辅材|人工|机械'), verb: false, required: true,type:string;
		string	code('MAIN_MATERIAL|AUXILIARY_MATERIALS|ARTIFICIAL|MECHANICS'), verb: false, required: true,type:string;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: materialCategoryList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(6){
		materialPreservedSampleList	material_category(__no_group)--material_category;
		materialBidSampleList	material_category(__no_group)--material_category;
		materialTypeList	category(__no_group)--category;
		materialChangeList	contract_material_category(__no_group)--contract_material_category;
		materialAcceptanceApplicationList	material_category(__no_group)--material_category;
		eventMaterialPreservedBasicInfoList	material_category(__no_group)--material_category;
	}
} depth=1; isRoot = false

meta{vg4platform=项目运营, name=material_type, features=setting, identified_by=code}
material_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('木工板材|玻璃不锈钢|灯光照明'), verb: false, required: true,type:string;
		string	code('WOOD|GLASS_AND_STAINLESS_STEEL|LIGHTING'), verb: false, required: true,type:string;
		material_category	category('$(object)'), verb: false, required: true, referenceBy: materialTypeList,type:material_category;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: materialTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		materialRecordList	type(__no_group)--type;
	}
} depth=2; isRoot = false

meta{name=material_record, vg4project=项目运营}
material_record{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('18mm实木多层板材'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:standard_contract;
		string	model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:material_unit_of_measurement;
		double	bid_unit_price('100.99'), verb: false, required: true,type:double;
		string	material_brand('拉法基'), verb: false, required: true,type:string;
		int	planned_material_amount('9999999'), verb: false, required: true,type:int;
		project_progress	planned_approach_phase('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:project_progress;
		date	planned_approach_time('2020-05-05'), verb: false, required: true,type:date;
		merchant	platform_information_manager('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:merchant;
		project	project('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:project;
		material_type	type('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:material_type;
		daily_task_type	daili_task_type('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:daily_task_type;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=项目运营, name=material_unit_of_measurement, features=setting, identified_by=code}
material_unit_of_measurement{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('m|m²|m³|克|千克|吨|个|樘|张'), verb: false, required: true,type:string;
		string	code('M|M2|M3|G|KG|T|A|TANG|ZHANG'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: materialUnitOfMeasurementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(10){
		materialPreservedSampleList	material_unit_of_measurement(__no_group)--material_unit_of_measurement;
		materialBidSampleList	material_unit_of_measurement(__no_group)--material_unit_of_measurement;
		materialRecordList	material_unit_of_measurement(__no_group)--material_unit_of_measurement;
		materialChangeListAsContractMaterialUnitOfMeasurement	contract_material_unit_of_measurement(__no_group)--contract_material_unit_of_measurement;
		materialChangeListAsMaterialUnitOfMeasurement	material_unit_of_measurement(__no_group)--contract_material_unit_of_measurement;
		materialAcceptanceApplicationList	material_unit_of_measurement(__no_group)--material_unit_of_measurement;
		eventMaterialChangeInfoList	uom(__no_group)--uom;
		eventMaterialAcceptanceBasicInfoList	uom(__no_group)--uom;
		eventMaterialChangeContractInfoList	uom(__no_group)--uom;
		eventMaterialPreservedBasicInfoList	uom(__no_group)--uom;
	}
} depth=1; isRoot = false

meta{name=material_change, vg4project=项目运营}
material_change{
	fields(22){
		string	id('AB'), verb: false, required: true,type:id;
		material_category	contract_material_category('$(object)'), verb: false, required: true, referenceBy: materialChangeList,type:material_category;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: materialChangeList,type:standard_contract;
		string	contract_material_name('复合硅酸盐水泥'), verb: false, required: true,type:string;
		string	contract_model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	contract_material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialChangeListAsContractMaterialUnitOfMeasurement,type:material_unit_of_measurement;
		string	contract_material_brand('拉法基'), verb: false, required: true,type:string;
		string_longtext	change_comments('text()'), verb: false, required: true,type:string_longtext;
		string	material_name('复合硅酸盐水泥'), verb: false, required: true,type:string;
		string	model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialChangeListAsMaterialUnitOfMeasurement,type:material_unit_of_measurement;
		string	material_brand('拉法基'), verb: false, required: true,type:string;
		int	number_of_changes('999999'), verb: false, required: true,type:int;
		string	price_adjustment('$10000'), verb: false, required: true,type:string;
		project_nomination	applicant('$(object)'), verb: false, required: true, referenceBy: materialChangeList,type:project_nomination;
		string_document	document('document.doc'), verb: false, required: true,type:string_document;
		images	images('images()'), verb: false, required: true,type:images;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		project	project('$(object)'), verb: false, required: true, referenceBy: materialChangeList,type:project;
		daily_task_type	daili_task_type('$(object)'), verb: false, required: true, referenceBy: materialChangeList,type:daily_task_type;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=material_acceptance_application}
material_acceptance_application{
	fields(21){
		string	id('AB'), verb: false, required: true,type:id;
		project	project('$(object)'), verb: false, required: true, referenceBy: materialAcceptanceApplicationList,type:project;
		string	title('18mm木板验收'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: materialAcceptanceApplicationList,type:standard_contract;
		string	material_name('复合硅酸盐水泥'), verb: false, required: true,type:string;
		material_category	material_category('$(object)'), verb: false, required: true, referenceBy: materialAcceptanceApplicationList,type:material_category;
		string	use_part('使用部位'), verb: false, required: true,type:string;
		string	model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialAcceptanceApplicationList,type:material_unit_of_measurement;
		string	material_brand('拉法基'), verb: false, required: true,type:string;
		string	supplier('四川西南水泥'), verb: false, required: true,type:string;
		project_nomination	auditor('$(object)'), verb: false, required: true, referenceBy: materialAcceptanceApplicationList,type:project_nomination;
		int	planned_material_amount('9999999'), verb: false, required: true,type:int;
		int	actual_material_amount('9999999'), verb: false, required: true,type:int;
		int	planned_arrived_amount('9999999'), verb: false, required: true,type:int;
		string	is_broken('正常破损'), verb: false, required: true,type:string;
		bool	material_matches('true|false'), verb: false, required: true,type:bool;
		bool	meet_quanlity_standard('true|false'), verb: false, required: true,type:bool;
		bool	has_certificates('true|false'), verb: false, required: true,type:bool;
		images	images('images()'), verb: false, required: true,type:images;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=account_book_type, features=status}
account_book_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('现金|应收|应付'), verb: false, required: true,type:string;
		string	code('CASH|RECEIVABLE|PAYABLE'), verb: false, required: true,type:string;
		string_image	icon('wallet.jpg|income.jpg|payable.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: accountBookTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		accountBookList	type(__no_group)--type;
	}
} depth=1; isRoot = false

meta{name=account_book, vg4owner=财务管理}
account_book{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('余额|工程收入款|EPC托管账户'), verb: false, required: true,type:string;
		account_book_type	type('$(object)'), verb: false, required: true, referenceBy: accountBookList,type:account_book_type;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: accountBookList,type:merchant;
		money	amount('$99999999.999'), verb: false, required: true,type:money;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		accountBookRecordListAsPayerAccount	payer_account(__no_group)--payer_account;
		accountBookRecordListAsPayeeAccount	payee_account(__no_group)--payer_account;
		accountBookItemList	account_book(__no_group)--account_book;
	}
} depth=3; isRoot = false

meta{name=account_book_item_status, features=status}
account_book_item_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('处理中|完成|被冻结'), verb: false, required: true,type:string;
		string	code('PROCESSING|COMPLETED|FROZEN'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: accountBookItemStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		accountBookItemList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{name=account_book_item}
account_book_item{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('预备金划拨|智能秤采购'), verb: false, required: true,type:string;
		string_longtext	brief('text()'), verb: false, required: true,type:string_longtext;
		money	original_amount('$99999999.999'), verb: false, required: true,type:money;
		account_book_item_status	status('$(object)'), verb: false, required: true, referenceBy: accountBookItemList,type:account_book_item_status;
		money	balance('$99999999.999'), verb: false, required: true,type:money;
		string	refer_object_type('MainOrder|Project|Task|ContractPayItem'), verb: false, required: true,type:string;
		string	refer_object_id('MainOrder|Project|Task|ContractPayItem'), verb: false, required: true,type:string;
		account_book	account_book('$(object)'), verb: false, required: true, referenceBy: accountBookItemList,type:account_book;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=application_status, features=status, identified_by=code}
application_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已提交|处理中|已完成|已取消'), verb: false, required: true,type:string;
		string	code('POSTED|PROCESSING|FINISHED|CANCELLED'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: applicationStatusList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		recommendationList	status(__no_group)--status;
		emplacementApplicationList	status(__no_group)--status;
		customerProjectApplicationList	status(__no_group)--status;
		partnerSettlementApplicationList	status(__no_group)--status;
	}
} depth=2; isRoot = false

meta{name=recommendation_type, features=setting, identified_by=code}
recommendation_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('推荐项目|推荐服务商|推荐设计师|推荐产品|推荐知识产权|推荐行业技术|推荐品牌战略方|其它推荐'), verb: false, required: true,type:string;
		string	code('PROJECT|VENDOR|DESINER|PRODUCT|IP|TECH|PARTNER|OTHER'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: recommendationTypeList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		recommendationList	type(__no_group)--type;
		eventApplyRecommendationList	recommendation_type(__no_group)--recommendation_type;
	}
} depth=2; isRoot = false

meta{vg4platform=平台营销, name=recommendation, vg4applicant_merchant=平台营销}
recommendation{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('推荐的标题'), verb: false, required: true,type:string;
		recommendation_type	type('$(object)'), verb: false, required: true, referenceBy: recommendationList,type:recommendation_type;
		string	contact_name('张文明'), verb: false, required: true,type:contact_name;
		string_china_mobile_phone	contact_mobile('18012341234'), verb: false, required: true,type:string_china_mobile_phone;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		application_status	status('$(object)'), verb: false, required: true, referenceBy: recommendationList,type:application_status;
		merchant	applicant_merchant('$(object)'), verb: false, required: false, referenceBy: recommendationList,type:merchant;
		employee_nomination	applicant_employee('$(object)'), verb: false, required: false, referenceBy: recommendationList,type:employee_nomination;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: recommendationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=平台营销, name=emplacement_application, vg4applicant_merchant=平台营销}
emplacement_application{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('申请成为分包商'), verb: false, required: true,type:string;
		string	company_name('merchant_name|公司名称'), verb: false, required: true,type:string;
		string	company_location('merchant_location|公司地址'), verb: false, required: true,type:string;
		partner_type	partner_type('$(object)'), verb: false, required: true, referenceBy: emplacementApplicationList,type:partner_type;
		available_service_location	service_location('$(object)'), verb: false, required: true, referenceBy: emplacementApplicationList,type:available_service_location;
		string_url	company_website('https://www/baidu.com'), verb: false, required: false,type:string_url;
		string	comments('comments|备注'), verb: false, required: true,type:string;
		string	contact_name('contact name|联系人'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		application_status	status('$(object)'), verb: false, required: true, referenceBy: emplacementApplicationList,type:application_status;
		merchant	applicant_merchant('$(object)'), verb: false, required: false, referenceBy: emplacementApplicationList,type:merchant;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: emplacementApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=平台营销, name=personal_emplacement_application, vg4applicant_merchant=平台营销}
personal_emplacement_application{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		audit_status	status('$(object)'), verb: false, required: true, referenceBy: personalEmplacementApplicationList,type:audit_status;
		string	name('张三'), verb: false, required: true,type:string;
		string_gender	gender('$(object)'), verb: false, required: true,type:gender;
		string	address('公司地址'), verb: false, required: true,type:string;
		career_type	career_type('$(object)'), verb: false, required: true, referenceBy: personalEmplacementApplicationList,type:career_type;
		business_type	business_type('$(object)'), verb: false, required: true, referenceBy: personalEmplacementApplicationList,type:business_type;
		available_service_location	service_location('$(object)'), verb: false, required: true, referenceBy: personalEmplacementApplicationList,type:available_service_location;
		string_url	home_page('https://www/baidu.com'), verb: false, required: false,type:string_url;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		string_china_mobile_phone	contact_phone('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		string_image	avatar('avatar.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: personalEmplacementApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=estate_property_type, features=setting}
estate_property_type{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('别墅|工厂|写字楼|住宅|商铺|餐饮'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: estatePropertyTypeList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		customerProjectApplicationList	property_type(__no_group)--property_type;
		eventApplyDecorationList	property_type(__no_group)--property_type;
	}
} depth=2; isRoot = false

meta{vg4platform=平台营销, name=customer_project_application, vg4applicant_merchant=平台营销}
customer_project_application{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		estate_property_type	property_type('$(object)'), verb: false, required: true, referenceBy: customerProjectApplicationList,type:estate_property_type;
		double	property_area('10000000.0009|1000000.0|127.96'), verb: false, required: true,type:double;
		string	property_location('成都高新区|敦煌|保密'), verb: false, required: true,type:string;
		string	contact_name('张文明'), verb: false, required: true,type:contact_name;
		string_china_mobile_phone	contact_mobile('18012341234'), verb: false, required: true,type:string_china_mobile_phone;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		application_status	status('$(object)'), verb: false, required: true, referenceBy: customerProjectApplicationList,type:application_status;
		merchant	applicant_merchant('$(object)'), verb: false, required: false, referenceBy: customerProjectApplicationList,type:merchant;
		employee_nomination	applicant_employee('$(object)'), verb: false, required: false, referenceBy: customerProjectApplicationList,type:employee_nomination;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: customerProjectApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=partner_type, group_by=category, features=setting}
partner_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('建材|洁具|灯具|家具|机械设备|施工队|设计师|上游合作伙伴|下游合作伙伴'), verb: false, required: true,type:string;
		string	category('服务提供商|服务提供商|服务提供商|服务提供商|服务提供商|服务提供商|设计师|合作伙伴|合作伙伴'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: partnerTypeList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		emplacementApplicationList	partner_type(__no_group)--partner_type;
		partnerSettlementApplicationList	partner_type(__no_group)--partner_type;
		eventApplyEmplacementList	partner_type(__no_group)--partner_type;
	}
} depth=2; isRoot = false

meta{name=available_service_location, features=setting}
available_service_location{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('四川-成都|四川-成都-都江堰'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: availableServiceLocationList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(5){
		emplacementApplicationList	service_location(__no_group)--service_location;
		personalEmplacementApplicationList	service_location(__no_group)--service_location;
		partnerSettlementApplicationList	service_location(__no_group)--service_location;
		eventApplyPersonalEmplacementList	service_location(__no_group)--service_location;
		eventApplyEmplacementList	service_location(__no_group)--service_location;
	}
} depth=2; isRoot = false

meta{vg4platform=平台营销, name=partner_settlement_application, vg4applicant_merchant=平台营销}
partner_settlement_application{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	contact_name('张文明'), verb: false, required: true,type:contact_name;
		string_china_mobile_phone	contact_mobile('13301234567'), verb: false, required: true,type:string_china_mobile_phone;
		string_url	merchant_website('https://www.yourongzhixing.com'), verb: false, required: true,type:string_url;
		partner_type	partner_type('$(object)'), verb: false, required: true, referenceBy: partnerSettlementApplicationList,type:partner_type;
		available_service_location	service_location('$(object)'), verb: false, required: true, referenceBy: partnerSettlementApplicationList,type:available_service_location;
		string	merchant_name('嘉信达装饰邮箱公司'), verb: false, required: true,type:string;
		string	merchant_location('成都高新区|敦煌|保密'), verb: false, required: true,type:string;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		application_status	status('$(object)'), verb: false, required: true, referenceBy: partnerSettlementApplicationList,type:application_status;
		merchant	applicant_merchant('$(object)'), verb: false, required: false, referenceBy: partnerSettlementApplicationList,type:merchant;
		employee_nomination	applicant_employee('$(object)'), verb: false, required: false, referenceBy: partnerSettlementApplicationList,type:employee_nomination;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: partnerSettlementApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=subcontract_application}
subcontract_application{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		project	project('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationList,type:project;
		career_type	career_type('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationList,type:career_type;
		merchant_type	merchant_type('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationList,type:merchant_type;
		merchant	application_merchant('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationListAsApplicationMerchant,type:merchant;
		merchant	applicant('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationListAsApplicant,type:merchant;
		work_package_type	work_package_type('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationList,type:work_package_type;
		string_longtext	application_reason('text()'), verb: false, required: true,type:string_longtext;
		string_china_mobile_phone	phone('13333333333'), verb: false, required: true,type:string_china_mobile_phone;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=bpmn_model}
bpmn_model{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('支付流程定义'), verb: false, required: true,type:string;
		string	model_key('blabla'), verb: false, required: true,type:string;
		string_longtext	definition('text()'), verb: false, required: true,type:string_longtext;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=0; isRoot = true

meta{name=process_instance}
process_instance{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('支付流程实例'), verb: false, required: true,type:string;
		string	starter('M000001'), verb: false, required: true,type:string;
		string_longtext	process_definition_id('text()'), verb: false, required: true,type:string_longtext;
		bool	completed('true|false'), verb: false, required: true,type:bool;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		processInstanceVariableList	process_instance(__no_group)--process_instance;
		nodeInstanceList	process_instance(__no_group)--process_instance;
	}
} depth=0; isRoot = true

meta{name=process_instance_variable}
process_instance_variable{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('orderId'), verb: false, required: true,type:string;
		process_instance	process_instance('$(object)'), verb: false, required: true, referenceBy: processInstanceVariableList,type:process_instance;
		string_longtext	value('text()'), verb: false, required: true,type:string_longtext;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=node_instance}
node_instance{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	name('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	node_definition_id('text()'), verb: false, required: true,type:string_longtext;
		process_instance	process_instance('$(object)'), verb: false, required: true, referenceBy: nodeInstanceList,type:process_instance;
		string_longtext	process_result('text()'), verb: false, required: true,type:string_longtext;
		node_instance_status	status('$(object)'), verb: false, required: true, referenceBy: nodeInstanceList,type:node_instance_status;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=node_instance_status, features=status, identified_by=code}
node_instance_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已完成|等待|无|未完成'), verb: false, required: true,type:string;
		string	code('COMPLETED|WAITING|NONE|INCOMPLETE'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		nodeInstanceList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=notification, vg4receiver=商户管理, vg4sender=商户管理}
notification{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('雅丽泰酒店意向阶段完成|兴城大道工业园1号装修工程劳务费用已支付'), verb: false, required: true,type:string;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		merchant	receiver('$(object)'), verb: false, required: true, referenceBy: notificationListAsReceiver,type:merchant;
		merchant	sender('$(object)'), verb: false, required: false, referenceBy: notificationListAsSender,type:merchant;
		string	refer_object_type('Project|ProjectMaterial|ProjectReport'), verb: false, required: true,type:string;
		string	refer_object_id('Project|ProjectMaterial|ProjectReport'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: false, referenceBy: notificationList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=change_request_type, identified_by=code, features=cr_type}
change_request_type{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('处理售后单|合同批注|审核合同|我要推荐|添加银行卡|数据类型展示|创建合同|项目指令单|施工日志|添加员工|签证及补充合同|工程验收申请通知单|资料审核|个人入驻|材料变更申请|审核|进场主材料存样|完善个人资料|添加批注|项目参与|投标主材料存样|添加岗位|劳务纠纷申请|售后单|我要装修|创建收款申请|工程劳务管理单|违约处罚|企业入驻|材料验收申请|创建项目进度|资料批注|先行赔付申请|项目经理日志|项目监理日志'), verb: false, required: true,type:string;
		string	code('RESOLVE_AFTER_SALES|COMMENTS_ON_CONTRACT|REVIEW_CONTRACT|APPLY_RECOMMENDATION|ADD_DEBIT_CARD|SHOW_ALL_TYPE|CREATE_CONTRACT|PROJECT_COMMAND|TASK_REPORT|ADD_EMPLOYEE|CREATE_ADDITIONAL_CONTRACT|ACCEPTANCE_APPLICATION|REVIEW_MATERIALS|APPLY_PERSONAL_EMPLACEMENT|APPLY_FOR_MATERIAL_CHANGE|REVIEW|CREATE_MATERIAL_PRESERVED_SAMPLE|FILL_PERSONAL_DETAIL|COMMENTS|SUBCONTRACT_APPLICATION|CREATE_MATERIAL_BID_SAMPLE|ADD_PROJECT_NOMINATION|LABOR_DISPUTE|AFTER_SALES|APPLY_DECORATION|CREATE_CONTRACT_PAYMENT_APPLICATION|LABOR_SUPERVISOR|PROJECT_PENALTIES|APPLY_EMPLACEMENT|APPLY_FOR_MATERIAL_ACCEPTANCE|PROJECT_PROGRESS|COMMENTS_ON_MATERIALS|APPLY_FOR_ADVANCE_COMPENSATION|PROJECT_MANAGER_REPORT|PROJECT_SUPERVISION_REPORT'), verb: false, required: true,type:string;
		string	icon('form|edit|edit|form|form|table|form|form|calendar|bars|form|form|edit|form|form|form|form|form|form|form|form|bars|form|form|form|form|form|form|form|bars|form|edit|form|tachometer|tachometer'), verb: false, required: true,type:string;
		int	display_order('1|2|3|4|5|6'), verb: false, required: true,type:int;
		string_longtext	bind_types('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	step_configuration('text()'), verb: false, required: true,type:string_longtext;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		changeRequestList	request_type(__no_group)--request_type;
	}
} depth=1; isRoot = false

meta{vg4platform=平台追踪, name=change_request, features=change_request}
change_request{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('注册|开始考试|答题'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		string_client_ip	remote_ip('remoteIp()'), verb: false, required: true,type:string_client_ip;
		change_request_type	request_type('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:change_request_type;
		bool	commited('false'), verb: false, required: true,type:bool;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(45){
		eventShowAllTypeStepTwoList	change_request(__no_group)--change_request;
		eventAdditionalContractPaymentPhaseList	change_request(__no_group)--change_request;
		eventResolveAfterSalesList	change_request(__no_group)--change_request;
		eventApplyRecommendationList	change_request(__no_group)--change_request;
		eventAddDebitCardList	change_request(__no_group)--change_request;
		eventMaterialAcceptanceImageList	change_request(__no_group)--change_request;
		eventAdditionalContractBasicInfoList	change_request(__no_group)--change_request;
		eventMaterialCheckList	change_request(__no_group)--change_request;
		eventProjectCommandList	change_request(__no_group)--change_request;
		eventAddEmployeeList	change_request(__no_group)--change_request;
		eventAcceptanceApplicationList	change_request(__no_group)--change_request;
		eventCommonReportList	change_request(__no_group)--change_request;
		eventApplyPersonalEmplacementList	change_request(__no_group)--change_request;
		eventMaterialChangeInfoList	change_request(__no_group)--change_request;
		eventContractBasicInfoList	change_request(__no_group)--change_request;
		eventMaterialAcceptanceBasicInfoList	change_request(__no_group)--change_request;
		eventMaterialReviewList	change_request(__no_group)--change_request;
		eventMaterialPreservedInfoList	change_request(__no_group)--change_request;
		eventMaterialChangeContractInfoList	change_request(__no_group)--change_request;
		eventReviewList	change_request(__no_group)--change_request;
		eventMaterialChangeDataUploadList	change_request(__no_group)--change_request;
		eventFillPersonalDetailList	change_request(__no_group)--change_request;
		eventProjectWorkPositionList	change_request(__no_group)--change_request;
		eventProjectSupervisorReportBasicInfoList	change_request(__no_group)--change_request;
		eventCommentsList	change_request(__no_group)--change_request;
		eventSubcontractApplicationList	change_request(__no_group)--change_request;
		eventMaterialPreservedBasicInfoList	change_request(__no_group)--change_request;
		eventContractPaymentPhaseList	change_request(__no_group)--change_request;
		eventShowAllTypeStepOneList	change_request(__no_group)--change_request;
		eventLaborDisputeList	change_request(__no_group)--change_request;
		eventProjectManagerReportBasicInfoList	change_request(__no_group)--change_request;
		eventAfterSalesList	change_request(__no_group)--change_request;
		eventApplyDecorationList	change_request(__no_group)--change_request;
		eventTaskReportBasicInfoList	change_request(__no_group)--change_request;
		eventMaterialCommentList	change_request(__no_group)--change_request;
		eventReportCheckItemList	change_request(__no_group)--change_request;
		eventExpectedPayItemCommentsList	change_request(__no_group)--change_request;
		eventLaborSupervisorList	change_request(__no_group)--change_request;
		eventProjectPenaltiesList	change_request(__no_group)--change_request;
		eventApplyEmplacementList	change_request(__no_group)--change_request;
		eventMaterialChangeAuditList	change_request(__no_group)--change_request;
		eventProjectProgressList	change_request(__no_group)--change_request;
		eventContractReviewList	change_request(__no_group)--change_request;
		eventApplyForAdvanceCompensationList	change_request(__no_group)--change_request;
		eventContractCommentList	change_request(__no_group)--change_request;
	}
} depth=2; isRoot = false

meta{bind_with_cr_type=SHOW_ALL_TYPE, name=event_show_all_type_step_two, features=event}
event_show_all_type_step_two{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	simple_text('simple text|简单字符串'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventShowAllTypeStepTwoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=CREATE_ADDITIONAL_CONTRACT, name=event_additional_contract_payment_phase, features=event}
event_additional_contract_payment_phase{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('name|名称'), verb: false, required: true,type:string;
		contract_pay_item	payment_item('$(object)'), verb: false, required: true, referenceBy: eventAdditionalContractPaymentPhaseList,type:contract_pay_item;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		money	adjustment('$12345678.000'), verb: false, required: true,type:money;
		date	expected_pay_time('2099-12-31'), verb: false, required: false,type:date;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAdditionalContractPaymentPhaseList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{bind_with_cr_type=RESOLVE_AFTER_SALES, name=event_resolve_after_sales, features=event}
event_resolve_after_sales{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	after_sales_id('after sales id|null'), verb: false, required: true,type:string;
		string	after_sales_title('after sales title|标题'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	after_sales_description('after sales description|问题描述'), verb: false, required: true,type:string;
		string	comments('comments|备注'), verb: false, required: true,type:string;
		images	images('images()'), verb: false, required: true,type:images;
		string	creator('creator|提交人'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventResolveAfterSalesList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_RECOMMENDATION, name=event_apply_recommendation, features=event}
event_apply_recommendation{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		recommendation_type	recommendation_type('$(object)'), verb: false, required: true, referenceBy: eventApplyRecommendationList,type:recommendation_type;
		string	title('title|标题'), verb: false, required: true,type:string;
		string	comments('comments|备注'), verb: false, required: true,type:string;
		string	contact_name('contact name|联系人'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventApplyRecommendationList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=ADD_DEBIT_CARD, name=event_add_debit_card, features=event}
event_add_debit_card{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	bank('bank|开户银行'), verb: false, required: true,type:string;
		string	account_name('account name|开户名称'), verb: false, required: true,type:string;
		string	bank_address('bank address|开户地址'), verb: false, required: true,type:string;
		string	number('number|银行账号'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAddDebitCardList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_ACCEPTANCE, name=event_material_acceptance_image, features=event}
event_material_acceptance_image{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialAcceptanceImageList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=CREATE_ADDITIONAL_CONTRACT, name=event_additional_contract_basic_info, features=event}
event_additional_contract_basic_info{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		string	contract_id('contract id|null'), verb: false, required: true,type:string;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	name('name|合同名称'), verb: false, required: true,type:string;
		string_longtext	number('text()'), verb: false, required: true,type:string_longtext;
		supplementary_contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: eventAdditionalContractBasicInfoList,type:supplementary_contract_type;
		string	main_contract('main contract|主合同'), verb: false, required: true,type:string;
		string	project_name('project name|工程名称'), verb: false, required: true,type:string;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAdditionalContractBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_ACCEPTANCE, name=event_material_check, features=event}
event_material_check{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	planned_material_count('planned material count|计划材料数量'), verb: false, required: true,type:string;
		string	actual_material_count('actual material count|实际验收数量'), verb: false, required: true,type:string;
		string	actual_arrived_count('actual arrived count|实际到场数量'), verb: false, required: true,type:string;
		string_longtext	is_broken('text()'), verb: false, required: true,type:string_longtext;
		bool	material_matches('true|false'), verb: false, required: true,type:bool;
		bool	meet_quanlity_standard('true|false'), verb: false, required: true,type:bool;
		bool	has_certificates('true|false'), verb: false, required: true,type:bool;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialCheckList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_COMMAND, name=event_project_command, features=event}
event_project_command{
	fields(20){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|项目ID'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	command_name('command name|指令名称'), verb: false, required: true,type:string;
		daily_task_type	directive_type('$(object)'), verb: false, required: true, referenceBy: eventProjectCommandList,type:daily_task_type;
		string	command_number('command number|指令编号'), verb: false, required: true,type:string;
		string	directive_brief('directive brief|指令事由'), verb: false, required: true,type:string;
		bool	has_cost('true|false'), verb: false, required: true,type:bool;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	main_recievers('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	copy_to_recievers('text()'), verb: false, required: false,type:string_longtext;
		string	creator('creator|发起人'), verb: false, required: true,type:string;
		string	create_time('create time|时间'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectCommandList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=ADD_EMPLOYEE, name=event_add_employee, features=event}
event_add_employee{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string_china_mobile_phone	mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		role	role('$(object)'), verb: false, required: true, referenceBy: eventAddEmployeeList,type:role;
		job	job('$(object)'), verb: false, required: true, referenceBy: eventAddEmployeeList,type:job;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAddEmployeeList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{bind_with_cr_type=ACCEPTANCE_APPLICATION, name=event_acceptance_application, features=event}
event_acceptance_application{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('title|标题'), verb: false, required: true,type:string;
		string	project_id('project_id|null'), verb: false, required: true,type:string;
		string	project_name('project_name|工程名称'), verb: false, required: true,type:string;
		daily_task_type	acceptance_type('$(object)'), verb: false, required: true, referenceBy: eventAcceptanceApplicationList,type:daily_task_type;
		string	property_owner_id('property_owner_id|null'), verb: false, required: true,type:string;
		string	property_owner_name('property_owner_name|业主单位'), verb: false, required: true,type:string;
		string	epc_manage_company('epc_manage_company|EPC托管单位'), verb: false, required: true,type:string;
		string_longtext	acceptors('text()'), verb: false, required: true,type:string_longtext;
		date_time	acceptance_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		string	application_unit_id('application_unit_id|null'), verb: false, required: true,type:string;
		string	application_unit('application_unit|申请单位'), verb: false, required: true,type:string;
		string	application_time('application_time|时间'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAcceptanceApplicationList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=TASK_REPORT|TASK_REPORT|TASK_REPORT|TASK_REPORT|TASK_REPORT|PROJECT_MANAGER_REPORT|PROJECT_SUPERVISION_REPORT, name=event_common_report, features=event}
event_common_report{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	content('text()'), verb: false, required: false,type:string_longtext;
		images	images('images()'), verb: false, required: false,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventCommonReportList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_PERSONAL_EMPLACEMENT, name=event_apply_personal_emplacement, features=event}
event_apply_personal_emplacement{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('name|姓名'), verb: false, required: true,type:string;
		string	gender('gender|性别'), verb: false, required: true,type:string;
		string	address('address|住址'), verb: false, required: true,type:string;
		career_type	career_type('$(object)'), verb: false, required: true, referenceBy: eventApplyPersonalEmplacementList,type:career_type;
		business_type	business_type('$(object)'), verb: false, required: true, referenceBy: eventApplyPersonalEmplacementList,type:business_type;
		available_service_location	service_location('$(object)'), verb: false, required: true, referenceBy: eventApplyPersonalEmplacementList,type:available_service_location;
		string_url	home_page('https://www/baidu.com'), verb: false, required: false,type:string_url;
		string	description('description|个人描述'), verb: false, required: true,type:string;
		string_china_mobile_phone	phone('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		string_image	avatar('avatar.jpg'), verb: false, required: true,type:string_image;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventApplyPersonalEmplacementList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_CHANGE, name=event_material_change_info, features=event}
event_material_change_info{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	material_name('material name|材料名称'), verb: false, required: true,type:string;
		string	model('model|型号规格'), verb: false, required: true,type:string;
		material_unit_of_measurement	uom('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeInfoList,type:material_unit_of_measurement;
		string	brand('brand|材料品牌'), verb: false, required: true,type:string;
		double	change_account('12345678.000'), verb: false, required: true,type:double;
		string	price_adjustment('price adjustment|价格调整'), verb: false, required: true,type:string;
		date	application_time('2099-12-31'), verb: false, required: true,type:date;
		string	applicant_unit('applicant unit|变更申请单位'), verb: false, required: true,type:string;
		project_nomination	applicant('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeInfoList,type:project_nomination;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{bind_with_cr_type=CREATE_CONTRACT, name=event_contract_basic_info, features=event}
event_contract_basic_info{
	fields(21){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	contract_type_id('contract type id|null'), verb: false, required: true,type:string;
		string	name('name|合同名称'), verb: false, required: true,type:string;
		string_longtext	number('text()'), verb: false, required: true,type:string_longtext;
		string	contract_type('contract type|合同类型'), verb: false, required: true,type:string;
		contract_status	status('$(object)'), verb: false, required: true, referenceBy: eventContractBasicInfoList,type:contract_status;
		string	project_name('project name|工程名称'), verb: false, required: true,type:string;
		string	project_location('project location|工程地址'), verb: false, required: true,type:string;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	important_rules('text()'), verb: false, required: true,type:string_longtext;
		money	amount('$12345678.000'), verb: false, required: true,type:money;
		merchant	party_a('$(object)'), verb: false, required: true, referenceBy: eventContractBasicInfoListAsPartyA,type:merchant;
		merchant	party_b('$(object)'), verb: false, required: true, referenceBy: eventContractBasicInfoListAsPartyB,type:merchant;
		date_time	start_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		date_time	end_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventContractBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_ACCEPTANCE, name=event_material_acceptance_basic_info, features=event}
event_material_acceptance_basic_info{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('title|验收单名称'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: eventMaterialAcceptanceBasicInfoList,type:standard_contract;
		string	material_name('material name|材料名称'), verb: false, required: true,type:string;
		string	material_type('material type|材料类型'), verb: false, required: true,type:string;
		string	user_part('user part|使用部位'), verb: false, required: true,type:string;
		string	model('model|型号规格'), verb: false, required: true,type:string;
		material_unit_of_measurement	uom('$(object)'), verb: false, required: true, referenceBy: eventMaterialAcceptanceBasicInfoList,type:material_unit_of_measurement;
		string	brand('brand|材料品牌'), verb: false, required: true,type:string;
		string	supplier('supplier|供货单位'), verb: false, required: true,type:string;
		project_nomination	auditor('$(object)'), verb: false, required: true, referenceBy: eventMaterialAcceptanceBasicInfoList,type:project_nomination;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialAcceptanceBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{bind_with_cr_type=REVIEW_MATERIALS, name=event_material_review, features=event}
event_material_review{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	material_id('material id|ID'), verb: false, required: true,type:string;
		string	scene_code('scene code|场景'), verb: false, required: true,type:string;
		bool	passed('true|false'), verb: false, required: true,type:bool;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialReviewList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=CREATE_MATERIAL_PRESERVED_SAMPLE|CREATE_MATERIAL_BID_SAMPLE, name=event_material_preserved_info, features=event}
event_material_preserved_info{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	seal_up_material_name('seal up material name|存样材料名称'), verb: false, required: true,type:string;
		project_nomination	material_manager('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedInfoList,type:project_nomination;
		string	images('images|旁站、巡视、见证资料'), verb: false, required: true,type:string;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	create_time('create time|日期'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_CHANGE, name=event_material_change_contract_info, features=event}
event_material_change_contract_info{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeContractInfoList,type:standard_contract;
		string	material_category_id('material category id|材料分类'), verb: false, required: true,type:string;
		string	material_name('material name|材料名称'), verb: false, required: true,type:string;
		string	model('model|型号规格'), verb: false, required: true,type:string;
		material_unit_of_measurement	uom('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeContractInfoList,type:material_unit_of_measurement;
		string	brand('brand|材料品牌'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeContractInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{bind_with_cr_type=REVIEW, name=event_review, features=event}
event_review{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	audit_record_id('audit record id|null'), verb: false, required: true,type:string;
		string	review_result('review result|审核结论'), verb: false, required: true,type:string;
		string	comments('comments|备注'), verb: false, required: false,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventReviewList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_CHANGE, name=event_material_change_data_upload, features=event}
event_material_change_data_upload{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		images	images('images()'), verb: false, required: true,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeDataUploadList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=FILL_PERSONAL_DETAIL, name=event_fill_personal_detail, features=event}
event_fill_personal_detail{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	merchant_id('merchant id|null'), verb: false, required: true,type:string;
		string_image	avatar('avatar.jpg'), verb: false, required: true,type:string_image;
		string	merchant_name('merchant name|姓名'), verb: false, required: true,type:string;
		string	phone('phone|电话'), verb: false, required: true,type:string;
		string	gender('gender|性别'), verb: false, required: true,type:string;
		string	id_number('id number|身份证号'), verb: false, required: true,type:string;
		string	address('address|家庭住址'), verb: false, required: true,type:string;
		industry_type	industry_type('$(object)'), verb: false, required: true, referenceBy: eventFillPersonalDetailList,type:industry_type;
		engineering_type	engineering_type('$(object)'), verb: false, required: true, referenceBy: eventFillPersonalDetailList,type:engineering_type;
		career_type	career_type('$(object)'), verb: false, required: true, referenceBy: eventFillPersonalDetailList,type:career_type;
		int	working_years('12345678'), verb: false, required: true,type:int;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventFillPersonalDetailList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=ADD_PROJECT_NOMINATION, name=event_project_work_position, features=event}
event_project_work_position{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|项目ID'), verb: false, required: true,type:string;
		string	merchant_id('merchant id|服务商id'), verb: false, required: true,type:string;
		project_organization_type	project_job('$(object)'), verb: false, required: true, referenceBy: eventProjectWorkPositionList,type:project_organization_type;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		project_role	project_role('$(object)'), verb: false, required: true, referenceBy: eventProjectWorkPositionList,type:project_role;
		work_package	work_package('$(object)'), verb: false, required: false, referenceBy: eventProjectWorkPositionList,type:work_package;
		employee_nomination	employee('$(object)'), verb: false, required: true, referenceBy: eventProjectWorkPositionList,type:employee_nomination;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectWorkPositionList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{bind_with_cr_type=PROJECT_SUPERVISION_REPORT, name=event_project_supervisor_report_basic_info, features=event}
event_project_supervisor_report_basic_info{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|项目'), verb: false, required: true,type:string;
		string	daily_task_type_id('daily task type id|null'), verb: false, required: true,type:string;
		string	project_name('火车北站候车室装修工程|三峡大坝装修工程'), verb: false, required: true,type:string;
		string	title('title|标题'), verb: false, required: true,type:string;
		double	temperature('17.66|25.01'), verb: false, required: true,type:double;
		string	weather_conditions('weather conditions|天气情况'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectSupervisorReportBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=COMMENTS, name=event_comments, features=event}
event_comments{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comment_item_type('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	comment_item_id('text()'), verb: false, required: true,type:string_longtext;
		string	comments('comments|备注'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventCommentsList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=SUBCONTRACT_APPLICATION, name=event_subcontract_application, features=event}
event_subcontract_application{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		project	project('$(object)'), verb: false, required: true, referenceBy: eventSubcontractApplicationList,type:project;
		career_type	application_type('$(object)'), verb: false, required: true, referenceBy: eventSubcontractApplicationList,type:career_type;
		merchant_type	merchant_type('$(object)'), verb: false, required: true, referenceBy: eventSubcontractApplicationList,type:merchant_type;
		string	application_unit('application unit|申请单位'), verb: false, required: true,type:string;
		string	applicant('applicant|申请个人'), verb: false, required: true,type:string;
		work_package_type	work_package_type('$(object)'), verb: false, required: true, referenceBy: eventSubcontractApplicationList,type:work_package_type;
		string_longtext	application_reason('text()'), verb: false, required: true,type:string_longtext;
		string	phone('phone|联系电话'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventSubcontractApplicationList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{bind_with_cr_type=CREATE_MATERIAL_PRESERVED_SAMPLE|CREATE_MATERIAL_BID_SAMPLE, name=event_material_preserved_basic_info, features=event}
event_material_preserved_basic_info{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('title|验收单名称'), verb: false, required: true,type:string;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedBasicInfoList,type:standard_contract;
		string	material_name('material name|材料名称'), verb: false, required: true,type:string;
		material_category	material_category('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedBasicInfoList,type:material_category;
		string	user_part('user part|使用部位'), verb: false, required: true,type:string;
		string	model('model|型号规格'), verb: false, required: true,type:string;
		material_unit_of_measurement	uom('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedBasicInfoList,type:material_unit_of_measurement;
		string	brand('brand|材料品牌'), verb: false, required: true,type:string;
		string	supplier('supplier|供货单位'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{bind_with_cr_type=CREATE_CONTRACT, name=event_contract_payment_phase, features=event}
event_contract_payment_phase{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('name|名称'), verb: false, required: true,type:string;
		merchant	payer('$(object)'), verb: false, required: true, referenceBy: eventContractPaymentPhaseListAsPayer,type:merchant;
		merchant	payee('$(object)'), verb: false, required: true, referenceBy: eventContractPaymentPhaseListAsPayee,type:merchant;
		string_longtext	criteria('text()'), verb: false, required: true,type:string_longtext;
		double	proportion('12345678.000'), verb: false, required: true,type:double;
		money	sub_total('$12345678.000'), verb: false, required: true,type:money;
		money	labor_fee('$12345678.000'), verb: false, required: true,type:money;
		money	material_fee('$12345678.000'), verb: false, required: true,type:money;
		money	other_fee('$12345678.000'), verb: false, required: true,type:money;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		project_progress	project_progress('$(object)'), verb: false, required: true, referenceBy: eventContractPaymentPhaseList,type:project_progress;
		date	expected_pay_time('2099-12-31'), verb: false, required: true,type:date;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventContractPaymentPhaseList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{bind_with_cr_type=SHOW_ALL_TYPE, name=event_show_all_type_step_one, features=event}
event_show_all_type_step_one{
	fields(23){
		string	id('AB'), verb: false, required: true,type:id;
		string	field_text('field_text|短文本'), verb: false, required: true,type:string;
		string	field_id_number('field_id_number|身份证'), verb: false, required: true,type:string;
		string_email	field_email('someone@company.com'), verb: false, required: true,type:string_email;
		string_url	field_url('https://www/baidu.com'), verb: false, required: true,type:string_url;
		string	field_one_of('field_one_of|单选'), verb: false, required: true,type:string;
		string_longtext	field_some_of('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	field_longtext('text()'), verb: false, required: true,type:string_longtext;
		bool	field_boolean('true|false'), verb: false, required: true,type:bool;
		images	field_images('images()'), verb: false, required: true,type:images;
		string_image	field_image('fieldImage.jpg'), verb: false, required: true,type:string_image;
		date	field_date('2099-12-31'), verb: false, required: true,type:date;
		date_time	field_datetime('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		int	field_integer('12345678'), verb: false, required: true,type:int;
		double	field_decimal('12345678.000'), verb: false, required: true,type:double;
		money	field_money('$12345678.000'), verb: false, required: true,type:money;
		merchant	field_biz_candidate('$(object)'), verb: false, required: true, referenceBy: eventShowAllTypeStepOneList,type:merchant;
		string_longtext	field_multi_model('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventShowAllTypeStepOneList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=LABOR_DISPUTE, name=event_labor_dispute, features=event}
event_labor_dispute{
	fields(15){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	title('title|纠纷名称'), verb: false, required: true,type:string;
		work_package	work_package('$(object)'), verb: false, required: true, referenceBy: eventLaborDisputeList,type:work_package;
		labor_dispute_type	type('$(object)'), verb: false, required: true, referenceBy: eventLaborDisputeList,type:labor_dispute_type;
		string	level('level|纠纷等级'), verb: false, required: true,type:string;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string	litigant('litigant|当事人'), verb: false, required: true,type:string;
		project_nomination	applicant('$(object)'), verb: false, required: true, referenceBy: eventLaborDisputeList,type:project_nomination;
		string	create_time('create time|申请时间'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventLaborDisputeList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{bind_with_cr_type=PROJECT_MANAGER_REPORT, name=event_project_manager_report_basic_info, features=event}
event_project_manager_report_basic_info{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	daily_task_type_id('daily task type id|null'), verb: false, required: true,type:string;
		string	project_id('project id|项目'), verb: false, required: true,type:string;
		string	project_name('火车北站候车室装修工程|三峡大坝装修工程'), verb: false, required: true,type:string;
		string	title('title|标题'), verb: false, required: true,type:string;
		double	temperature('17.66|25.01'), verb: false, required: true,type:double;
		string	weather_conditions('weather conditions|天气情况'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectManagerReportBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=AFTER_SALES, name=event_after_sales, features=event}
event_after_sales{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	daily_task_type_id('daily task type id|null'), verb: false, required: true,type:string;
		string	daily_task_type('daily task type|售后类型'), verb: false, required: true,type:string;
		bool	under_warranty('true|false'), verb: false, required: true,type:bool;
		string	title('title|标题'), verb: false, required: true,type:string;
		string	question_description('question description|问题描述'), verb: false, required: true,type:string;
		images	images('images()'), verb: false, required: true,type:images;
		string	creator('creator|创建人'), verb: false, required: true,type:string;
		date_time	time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAfterSalesList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_DECORATION, name=event_apply_decoration, features=event}
event_apply_decoration{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		estate_property_type	property_type('$(object)'), verb: false, required: true, referenceBy: eventApplyDecorationList,type:estate_property_type;
		double	property_area('12345678.000'), verb: false, required: true,type:double;
		string	property_location('property_location|物业地址'), verb: false, required: true,type:string;
		string	contact_name('contact name|联系人'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventApplyDecorationList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=TASK_REPORT, name=event_task_report_basic_info, features=event}
event_task_report_basic_info{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	daily_task_type_id('daily task type id|null'), verb: false, required: true,type:string;
		string	project_name('project name|工程名称'), verb: false, required: true,type:string;
		string	title('title|标题'), verb: false, required: true,type:string;
		string_longtext	subcontractor('text()'), verb: false, required: true,type:string_longtext;
		string	task_name('墙面施工|水电改造|隔离层鼓包二次整改'), verb: false, required: true,type:string;
		string	submitter_id('submitter id|null'), verb: false, required: true,type:string;
		string	submitter('submitter|填报人'), verb: false, required: true,type:string;
		double	temperature('17.66|25.01'), verb: false, required: true,type:double;
		string	weather_conditions('weather conditions|天气情况'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventTaskReportBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=COMMENTS_ON_MATERIALS, name=event_material_comment, features=event}
event_material_comment{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	material_id('material id|ID'), verb: false, required: true,type:string;
		string	scene_code('scene code|场景'), verb: false, required: true,type:string;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialCommentList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_MANAGER_REPORT|PROJECT_SUPERVISION_REPORT, name=event_report_check_item, features=event}
event_report_check_item{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	check_result('check result|检查结果'), verb: false, required: true,type:string;
		string	process_result('process result|处理结果'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventReportCheckItemList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=CREATE_CONTRACT_PAYMENT_APPLICATION, name=event_expected_pay_item_comments, features=event}
event_expected_pay_item_comments{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	pay_item_id('pay item id|null'), verb: false, required: true,type:string;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	document('document|上传资料'), verb: false, required: true,type:string;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	send_to('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	cc_to('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventExpectedPayItemCommentsList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=LABOR_SUPERVISOR, name=event_labor_supervisor, features=event}
event_labor_supervisor{
	fields(23){
		string	id('AB'), verb: false, required: true,type:id;
		string	number('number|编号'), verb: false, required: true,type:string;
		string	creator('creator|编制单位/部门'), verb: false, required: true,type:string;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	contract_number('contract number|分包合同编号'), verb: false, required: true,type:string;
		string	bid_price_list('bid price list|中标价格清单上传'), verb: false, required: true,type:string;
		money	total_labor_cost('$12345678.000'), verb: false, required: true,type:money;
		string	project_progress('project progress|发放阶段'), verb: false, required: true,type:string;
		date	plan_pay_date('2099-12-31'), verb: false, required: true,type:date;
		money	plan_pay_amount('$12345678.000'), verb: false, required: true,type:money;
		string	contract_payment_manager('contract payment manager|合同支付负责人'), verb: false, required: true,type:string;
		string	platform_labor_manager('platform labor manager|平台劳务管理负责人'), verb: false, required: true,type:string;
		date	actual_pay_date('2099-12-31'), verb: false, required: true,type:date;
		money	actual_pay_amount('$12345678.000'), verb: false, required: true,type:money;
		string	payment_manager('payment manager|支付负责人'), verb: false, required: true,type:string;
		string	contractor_commitment('contractor commitment|分包单位承诺'), verb: false, required: true,type:string;
		string	create_time('create time|null'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventLaborSupervisorList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_PENALTIES, name=event_project_penalties, features=event}
event_project_penalties{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	penalties_id('penalties id|处罚编号'), verb: false, required: true,type:string;
		string	project_id('project id|项目ID'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		standard_contract	work_package_contract('$(object)'), verb: false, required: true, referenceBy: eventProjectPenaltiesList,type:standard_contract;
		string	daily_task_type_id('daily task type id|处罚类型id'), verb: false, required: true,type:string;
		string	penalties_type('penalties type|处罚类型'), verb: false, required: true,type:string;
		employee_nomination	penalties_executor('$(object)'), verb: false, required: true, referenceBy: eventProjectPenaltiesList,type:employee_nomination;
		money	forfeit('$12345678.000'), verb: false, required: true,type:money;
		string_longtext	reason('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectPenaltiesList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{bind_with_cr_type=APPLY_EMPLACEMENT, name=event_apply_emplacement, features=event}
event_apply_emplacement{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		string	merchant_name('merchant_name|公司名称'), verb: false, required: true,type:string;
		string	merchant_location('merchant_location|公司地址'), verb: false, required: true,type:string;
		partner_type	partner_type('$(object)'), verb: false, required: true, referenceBy: eventApplyEmplacementList,type:partner_type;
		available_service_location	service_location('$(object)'), verb: false, required: true, referenceBy: eventApplyEmplacementList,type:available_service_location;
		string_url	merchant_website('https://www/baidu.com'), verb: false, required: false,type:string_url;
		string	comments('comments|备注'), verb: false, required: true,type:string;
		string	contact_name('contact name|联系人'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventApplyEmplacementList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_CHANGE, name=event_material_change_audit, features=event}
event_material_change_audit{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_constructor('project constructor|项目建设方'), verb: false, required: true,type:string;
		string	project_supervision('project supervision|项目监理'), verb: false, required: true,type:string;
		string	project_manager('project manager|项目经理'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeAuditList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_PROGRESS, name=event_project_progress, features=event}
event_project_progress{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	phase_name('phase name|项目阶段'), verb: false, required: true,type:string;
		string	phase_id('phase id|null'), verb: false, required: true,type:string;
		string	title('title|标题'), verb: false, required: true,type:string;
		project_progress_status	project_progress_status('$(object)'), verb: false, required: true, referenceBy: eventProjectProgressList,type:project_progress_status;
		string	brief('brief|简介'), verb: false, required: true,type:string;
		date	plan_start_date('2099-12-31'), verb: false, required: true,type:date;
		date	actual_start_date('2099-12-31'), verb: false, required: true,type:date;
		date	plan_finish_date('2099-12-31'), verb: false, required: true,type:date;
		date	actual_finish_date('2099-12-31'), verb: false, required: true,type:date;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectProgressList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=REVIEW_CONTRACT, name=event_contract_review, features=event}
event_contract_review{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	contract_id('contract id|ID'), verb: false, required: true,type:string;
		string	scene_code('scene code|场景'), verb: false, required: true,type:string;
		bool	passed('true|false'), verb: false, required: true,type:bool;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventContractReviewList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_ADVANCE_COMPENSATION, name=event_apply_for_advance_compensation, features=event}
event_apply_for_advance_compensation{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	compensation_application_name('compensation application name|标题'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	reason('reason|赔付原因'), verb: false, required: true,type:string;
		images	images('images()'), verb: false, required: true,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventApplyForAdvanceCompensationList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=COMMENTS_ON_CONTRACT, name=event_contract_comment, features=event}
event_contract_comment{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	contract_id('contract id|ID'), verb: false, required: true,type:string;
		string	scene_code('scene code|场景'), verb: false, required: true,type:string;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventContractCommentList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=business_type, group_by=category, features=setting}
business_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('商业连锁|精装楼盘|商会协会|企事业单位|政府机构|其它|咨询服务|设计服务|实施管理服务|招投标服务|造价服务|施工分包服务|技术服务|其它|财务管理|项目管理|金融服务|运营管理|法律服务|其它|建材销售|项目设计|设备租赁|科研教学|执法监督|其它'), verb: false, required: true,type:string;
		string	code('ABCDEFGHIJKLMNOPQRSTUVWXYZ'), verb: false, required: true,type:string;
		string	category('项目建设分类|项目建设分类|项目建设分类|项目建设分类|项目建设分类|项目建设分类|工程服务分类|工程服务分类|工程服务分类|工程服务分类|工程服务分类|工程服务分类|工程服务分类|工程服务分类|工程管理分类|工程管理分类|工程管理分类|工程管理分类|工程管理分类|工程管理分类|行业属性分类|行业属性分类|行业属性分类|行业属性分类|行业属性分类|行业属性分类'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: businessTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		personalEmplacementApplicationList	business_type(__no_group)--business_type;
		eventApplyPersonalEmplacementList	business_type(__no_group)--business_type;
	}
} depth=1; isRoot = false

meta{name=audit_status, features=status, identified_by=code}
audit_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待审核|已通过|未通过'), verb: false, required: true,type:string;
		string	code('PENDING|APPROVED|UNAPPROVED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: auditStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		supplementaryContractPayItemList	status(__no_group)--status;
		contractPaymentApplicationList	status(__no_group)--status;
		personalEmplacementApplicationList	status(__no_group)--status;
		auditRecordList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{name=audit_record}
audit_record{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	audit_object_type('attendance|salary'), verb: false, required: true,type:string;
		string	audit_object_id('SU00001'), verb: false, required: true,type:string;
		audit_status	status('$(object)'), verb: false, required: true, referenceBy: auditRecordList,type:audit_status;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		merchant	reviewer('$(object)'), verb: false, required: true, referenceBy: auditRecordList,type:merchant;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=comments_record}
comments_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment_object_type('attendance|salary'), verb: false, required: true,type:string;
		string	comment_object_id('SU00001'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		merchant	submitter('$(object)'), verb: false, required: true, referenceBy: commentsRecordList,type:merchant;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=cc_record}
cc_record{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		merchant	cc_to('$(object)'), verb: false, required: true, referenceBy: ccRecordList,type:merchant;
		string	cc_item_type('attendance|salary'), verb: false, required: true,type:string;
		string	cc_item_id('SU00001'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=模板中心, name=contract_template_file}
contract_template_file{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX合同模板'), verb: false, required: true,type:string;
		string_document	document_url('file.doc'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractTemplateFileList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		fundingCloseTrusteeshipContractList	contract_template_file(__no_group)--contract_template_file;
		projectCloseTrusteeshipContractList	contract_template_file(__no_group)--contract_template_file;
	}
} depth=1; isRoot = false

meta{vg4platform=模板中心, name=finance_template}
finance_template{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX财务模板'), verb: false, required: true,type:string;
		string_document	document_url('file.doc'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: financeTemplateList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=模板中心, name=five_book_template}
five_book_template{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX优荣五书模板'), verb: false, required: true,type:string;
		string_document	document_url('file.doc'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fiveBookTemplateList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=模板中心, name=project_engineering_template}
project_engineering_template{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX项目工程表单模板'), verb: false, required: true,type:string;
		string_document	document_url('file.doc'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectEngineeringTemplateList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=流程管理, name=process_map}
process_map{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX流程'), verb: false, required: true,type:string;
		process	process('$(object)'), verb: false, required: true, referenceBy: processMapList,type:process;
		string_image	process_image('process_image_800_600.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: processMapList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=流程管理, name=process}
process{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx流程'), verb: false, required: true,type:string;
		string	content('xxx流程内容'), verb: false, required: true,type:string;
		string	rules('流程规则'), verb: false, required: true,type:string;
		employee_nomination	creator('$(object)'), verb: false, required: true, referenceBy: processList,type:employee_nomination;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: processList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		processMapList	process(__no_group)--process;
		processAuditList	process(__no_group)--process;
	}
} depth=5; isRoot = false

meta{vg4platform=流程管理, name=todo_list, vg4owner=流程管理}
todo_list{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('垃圾清运|地砖补货'), verb: false, required: true,type:string;
		string	content('垃圾清运垃圾清运垃圾清运垃圾清运'), verb: false, required: true,type:string;
		employee_nomination	creator('$(object)'), verb: false, required: true, referenceBy: todoListList,type:employee_nomination;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: todoListList,type:merchant;
		todo_list_status	todo_list_status('$(object)'), verb: false, required: true, referenceBy: todoListList,type:todo_list_status;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: todoListList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=todo_list_status, identified_by=code, features=setting}
todo_list_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待办|已完成'), verb: false, required: true,type:string;
		string	code('PENDING|FINISHED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: todoListStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		todoListList	todo_list_status(__no_group)--todo_list_status;
	}
} depth=1; isRoot = false

meta{vg4platform=流程管理, name=process_audit, vg4auditor=流程管理}
process_audit{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx流程督办'), verb: false, required: true,type:string;
		process	process('$(object)'), verb: false, required: true, referenceBy: processAuditList,type:process;
		merchant	auditor('$(object)'), verb: false, required: true, referenceBy: processAuditList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: processAuditList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=流程管理, name=process_application, vg4owner=流程管理}
process_application{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('我的请求'), verb: false, required: true,type:string;
		employee_nomination	creator('$(object)'), verb: false, required: true, referenceBy: processApplicationList,type:employee_nomination;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: processApplicationList,type:merchant;
		date_time_create	creat_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: processApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=合同管理, vg4second_part_merchant=合同管理, name=contract_ledger, vg4first_part_merchant=合同管理}
contract_ledger{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('合同名称'), verb: false, required: true,type:string;
		contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: contractLedgerList,type:contract_type;
		standard_contract	project_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractLedgerListAsProjectParticipatorContract,type:standard_contract;
		standard_contract	project_running_contract('$(object)'), verb: false, required: false, referenceBy: contractLedgerListAsProjectRunningContract,type:standard_contract;
		standard_contract	work_package_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractLedgerListAsWorkPackageParticipatorContract,type:standard_contract;
		merchant	first_part_merchant('$(object)'), verb: false, required: true, referenceBy: contractLedgerListAsFirstPartMerchant,type:merchant;
		merchant	second_part_merchant('$(object)'), verb: false, required: true, referenceBy: contractLedgerListAsSecondPartMerchant,type:merchant;
		money	income('$3000.00|$99999.00|$0.00'), verb: false, required: true,type:money;
		money	outgo('$3000.00|$99999.00|$0.00'), verb: false, required: true,type:money;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractLedgerList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=合同管理, name=contract_risk, vg4owner=合同管理}
contract_risk{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('合同风险名称'), verb: false, required: true,type:string;
		string	risk('合同风险内容'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: contractRiskList,type:contract_type;
		standard_contract	project_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractRiskListAsProjectParticipatorContract,type:standard_contract;
		standard_contract	project_running_contract('$(object)'), verb: false, required: false, referenceBy: contractRiskListAsProjectRunningContract,type:standard_contract;
		standard_contract	work_package_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractRiskListAsWorkPackageParticipatorContract,type:standard_contract;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: contractRiskList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractRiskList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=合同管理, name=contract_report, vg4owner=合同管理}
contract_report{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx合同报表'), verb: false, required: true,type:string;
		contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: contractReportList,type:contract_type;
		standard_contract	project_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractReportListAsProjectParticipatorContract,type:standard_contract;
		standard_contract	project_running_contract('$(object)'), verb: false, required: false, referenceBy: contractReportListAsProjectRunningContract,type:standard_contract;
		standard_contract	work_package_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractReportListAsWorkPackageParticipatorContract,type:standard_contract;
		string	report_link_url('/merchant/report/link'), verb: false, required: true,type:string;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: contractReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=大数据, name=contract_statistic_report, vg4owner=大数据}
contract_statistic_report{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx统计报表名称'), verb: false, required: true,type:string;
		string	report_link_url('/merchant/report/link'), verb: false, required: true,type:string;
		contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: contractStatisticReportList,type:contract_type;
		standard_contract	project_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractStatisticReportListAsProjectParticipatorContract,type:standard_contract;
		standard_contract	project_running_contract('$(object)'), verb: false, required: false, referenceBy: contractStatisticReportListAsProjectRunningContract,type:standard_contract;
		standard_contract	work_package_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractStatisticReportListAsWorkPackageParticipatorContract,type:standard_contract;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: contractStatisticReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractStatisticReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=大数据, name=project_statistic_report, vg4owner=大数据}
project_statistic_report{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx统计报表名称'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectStatisticReportList,type:project;
		string	report_link_url('/merchant/report/link'), verb: false, required: true,type:string;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: projectStatisticReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectStatisticReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=大数据, name=service_vendor_statistic_report, vg4vendor=大数据, vg4owner=大数据}
service_vendor_statistic_report{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx统计报表名称'), verb: false, required: true,type:string;
		merchant	vendor('$(object)'), verb: false, required: true, referenceBy: serviceVendorStatisticReportListAsVendor,type:merchant;
		string	report_link_url('/merchant/report/link'), verb: false, required: true,type:string;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: serviceVendorStatisticReportListAsOwner,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: serviceVendorStatisticReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=大数据, name=financial_service_statistic_report, vg4vendor=大数据, vg4owner=大数据}
financial_service_statistic_report{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx统计报表名称'), verb: false, required: true,type:string;
		loan_fund	loan_fund('$(object)'), verb: false, required: true, referenceBy: financialServiceStatisticReportList,type:loan_fund;
		loan_application	loan_application('$(object)'), verb: false, required: true, referenceBy: financialServiceStatisticReportList,type:loan_application;
		loan_contract	loan_contract('$(object)'), verb: false, required: true, referenceBy: financialServiceStatisticReportList,type:loan_contract;
		string	report_link_url('/merchant/report/link'), verb: false, required: true,type:string;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: financialServiceStatisticReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: financialServiceStatisticReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=人力资源, name=recruitment_requirement, vg4employee=人力资源}
recruitment_requirement{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('招聘需求'), verb: false, required: true,type:string;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: recruitmentRequirementList,type:merchant;
		date_time	post_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: recruitmentRequirementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		jobPositionList	recruitment_requirement(__no_group)--recruitment_requirement;
	}
} depth=3; isRoot = false

meta{vg4platform=人力资源, name=job_position}
job_position{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('工作岗位 名称'), verb: false, required: true,type:string;
		string	job_description('工作岗位 描述信息'), verb: false, required: true,type:string;
		recruitment_requirement	recruitment_requirement('$(object)'), verb: false, required: true, referenceBy: jobPositionList,type:recruitment_requirement;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: jobPositionList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		candidateTalentList	job_position(__no_group)--job_position;
	}
} depth=4; isRoot = false

meta{vg4platform=人力资源, name=candidate_talent, vg4candidate=人力资源}
candidate_talent{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('人才信息'), verb: false, required: true,type:string;
		job_position	job_position('$(object)'), verb: false, required: true, referenceBy: candidateTalentList,type:job_position;
		merchant	candidate('$(object)'), verb: false, required: true, referenceBy: candidateTalentList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: candidateTalentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=人力资源, vg4employer=人力资源, name=staff_files, vg4employee=人力资源}
staff_files{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('人才信息'), verb: false, required: true,type:string;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: staffFilesListAsEmployer,type:merchant;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: staffFilesListAsEmployee,type:merchant;
		employee_nomination	employment('$(object)'), verb: false, required: true, referenceBy: staffFilesList,type:employee_nomination;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: staffFilesList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=人力资源, vg4employer=人力资源, name=employee_relation, vg4employee=人力资源}
employee_relation{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('人才信息'), verb: false, required: true,type:string;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: employeeRelationListAsEmployer,type:merchant;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: employeeRelationListAsEmployee,type:merchant;
		employee_nomination	employment('$(object)'), verb: false, required: true, referenceBy: employeeRelationList,type:employee_nomination;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeeRelationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=人力资源, vg4employer=人力资源, name=employee_salary}
employee_salary{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('人才信息'), verb: false, required: true,type:string;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: employeeSalaryList,type:merchant;
		money	base_salary('$3000.00|$999.00|$0.00'), verb: false, required: true,type:money;
		money	bonus_salary('$3000.00|$999.00|$0.00'), verb: false, required: true,type:money;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeeSalaryList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=人力资源, vg4employer=人力资源, name=employee_performance, vg4employee=人力资源}
employee_performance{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	summary('张晓明,天水市喜来登,业主代表'), verb: false, required: true,type:string;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: employeePerformanceListAsEmployee,type:merchant;
		double	project_rating('10.0|0.0|5.0'), verb: false, required: true,type:double;
		double	work_package_rating('10.0|0.0|5.0'), verb: false, required: true,type:double;
		double	task_rating('10.0|0.0|5.0'), verb: false, required: true,type:double;
		double	client_rating('10.0|0.0|5.0'), verb: false, required: true,type:double;
		string	rating_month('2099-12'), verb: false, required: true,type:string;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: employeePerformanceListAsEmployer,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeePerformanceList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=merchant_seal, vg4owner=商户管理}
merchant_seal{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XX商户的印章'), verb: false, required: true,type:string;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: merchantSealList,type:merchant;
		string_image	seal_image('seal_200_200.png'), verb: false, required: true,type:string_image;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantSealList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		economicVerificationFormList	merchant_seal(__no_group)--merchant_seal;
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=cooperate_application}
cooperate_application{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XX合作申请'), verb: false, required: true,type:string;
		string	contact_name('张三'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_mobile('18012341234'), verb: false, required: true,type:string_china_mobile_phone;
		string	contact_address('成都市武侯区天府二街新希望天祥广场'), verb: false, required: true,type:string;
		date_time_create	apply_date_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: cooperateApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=商户管理, name=project_application}
project_application{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('小龙坎火锅店装修'), verb: false, required: true,type:string;
		string	address('成都市武侯区天府二街新希望天祥广场'), verb: false, required: true,type:string;
		string	contact('张三'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('18012341234'), verb: false, required: true,type:string_china_mobile_phone;
		double	area('200.00'), verb: false, required: true,type:double;
		date_time_create	apply_date_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=商户管理, name=project_attract_investment, vg4project=商户管理, vg4post_by=商户管理}
project_attract_investment{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx项目招商'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectAttractInvestmentList,type:project;
		money	project_scale('$999999.00'), verb: false, required: true,type:money;
		string	attract_investment_content('项目招商需求描述'), verb: false, required: true,type:string;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: projectAttractInvestmentList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectAttractInvestmentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=商户管理, name=serivce_vendor_attract_investment, vg4post_by=商户管理}
serivce_vendor_attract_investment{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx服务商招商'), verb: false, required: true,type:string;
		string	attract_investment_content('服务商招商内容'), verb: false, required: true,type:string;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: serivceVendorAttractInvestmentList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: serivceVendorAttractInvestmentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=brand_attract_investment, vg4post_by=商户管理}
brand_attract_investment{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx品牌招商'), verb: false, required: true,type:string;
		string	attract_investment_content('服务商招商内容'), verb: false, required: true,type:string;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: brandAttractInvestmentList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: brandAttractInvestmentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=project_settlement, vg4project=商户管理, vg4responsible_merchant=商户管理}
project_settlement{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目入驻'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectSettlementList,type:project;
		date_time	settlement_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		merchant	responsible_merchant('$(object)'), verb: false, required: true, referenceBy: projectSettlementList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=商户管理, name=service_vendor_settlement, vg4vendor=商户管理}
service_vendor_settlement{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx服务商入驻'), verb: false, required: true,type:string;
		merchant	vendor('$(object)'), verb: false, required: true, referenceBy: serviceVendorSettlementList,type:merchant;
		date_time	settlement_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: serviceVendorSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, vg4partner=商户管理, name=brand_partner_settlement}
brand_partner_settlement{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx牌战略合作商入驻'), verb: false, required: true,type:string;
		merchant	partner('$(object)'), verb: false, required: true, referenceBy: brandPartnerSettlementList,type:merchant;
		date_time	settlement_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: brandPartnerSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=merchant_verification, vg4merchant=商户管理}
merchant_verification{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx商家验证'), verb: false, required: true,type:string;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: merchantVerificationList,type:merchant;
		string	comments('验证备注'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantVerificationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=qualification_examination}
qualification_examination{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx资格审查'), verb: false, required: true,type:string;
		string	comments('验证备注'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: qualificationExaminationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=商户管理, name=qualification_research}
qualification_research{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx资格调研'), verb: false, required: true,type:string;
		string	comments('验证备注'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: qualificationResearchList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=平台营销, vg4partner=平台营销, name=partner_recommendation}
partner_recommendation{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx伙伴推荐'), verb: false, required: true,type:string;
		merchant	partner('$(object)'), verb: false, required: true, referenceBy: partnerRecommendationList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: partnerRecommendationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=项目运营, name=project_directive, vg4post_by=项目运营, vg4responsible_merchant=项目运营}
project_directive{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目指令'), verb: false, required: true,type:string;
		string	directive('墙体拆除'), verb: false, required: true,type:string;
		merchant	responsible_merchant('$(object)'), verb: false, required: true, referenceBy: projectDirectiveListAsResponsibleMerchant,type:merchant;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: projectDirectiveListAsPostBy,type:merchant;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectDirectiveList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=项目运营, name=project_daily_report, vg4reporter=项目运营, vg4project=项目运营}
project_daily_report{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx项目报告'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectDailyReportList,type:project;
		string	content('报告内容'), verb: false, required: true,type:string;
		string_image	image1('image.png'), verb: false, required: true,type:string_image;
		string_image	image2('image.png'), verb: false, required: true,type:string_image;
		string_image	image3('image.png'), verb: false, required: true,type:string_image;
		string_image	image4('image.png'), verb: false, required: true,type:string_image;
		string_image	image5('image.png'), verb: false, required: true,type:string_image;
		date_time_create	report_datetime('createTime()'), verb: false, required: true,type:date_time_create;
		merchant	reporter('$(object)'), verb: false, required: true, referenceBy: projectDailyReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectDailyReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目运营, name=project_progress_report, vg4reporter=项目运营, vg4project=项目运营}
project_progress_report{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx项目进度'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectProgressReportList,type:project;
		string	project_status('项目进度状态信息'), verb: false, required: true,type:string;
		string_image	image1('image.png'), verb: false, required: true,type:string_image;
		string_image	image2('image.png'), verb: false, required: true,type:string_image;
		string_image	image3('image.png'), verb: false, required: true,type:string_image;
		string_image	image4('image.png'), verb: false, required: true,type:string_image;
		string_image	image5('image.png'), verb: false, required: true,type:string_image;
		date_time_create	report_datetime('createTime()'), verb: false, required: true,type:date_time_create;
		merchant	reporter('$(object)'), verb: false, required: true, referenceBy: projectProgressReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectProgressReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目运营, name=project_notification, vg4recipient_merchant=项目运营, vg4post_by=项目运营}
project_notification{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目通知'), verb: false, required: true,type:string;
		string	title('项目通知标题'), verb: false, required: true,type:string;
		string	content('项目通知内容'), verb: false, required: true,type:string;
		merchant	recipient_merchant('$(object)'), verb: false, required: true, referenceBy: projectNotificationListAsRecipientMerchant,type:merchant;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: projectNotificationListAsPostBy,type:merchant;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectNotificationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=项目运营, name=design, vg4designer=项目运营, vg4project=项目运营, vg4reviewer=项目运营}
design{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx设计管理'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: designList,type:project;
		work_package	work_package('$(object)'), verb: false, required: true, referenceBy: designList,type:work_package;
		merchant	designer('$(object)'), verb: false, required: true, referenceBy: designListAsDesigner,type:merchant;
		string_document	design_work('design.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	reviewer('$(object)'), verb: false, required: true, referenceBy: designListAsReviewer,type:merchant;
		working_status	design_status('$(object)'), verb: false, required: true, referenceBy: designList,type:working_status;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: designList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		designChangeList	design(__no_group)--design;
	}
} depth=5; isRoot = false

meta{vg4platform=项目运营, name=construction_schema, vg4project=项目运营, vg4post_by=项目运营}
construction_schema{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目施工方案'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: constructionSchemaList,type:project;
		string	schema_content('项目施工方案内容'), verb: false, required: true,type:string;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: constructionSchemaList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: constructionSchemaList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目运营, name=project_bid, vg4project_owner=项目运营, vg4responsible_merchant=项目运营}
project_bid{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目招标'), verb: false, required: true,type:string;
		string	bid_name('XXX招标文件'), verb: false, required: true,type:string;
		string_document	bid_file('XXX招标结果文件.doc|XXX招标结果文件.pdf'), verb: false, required: true,type:string_document;
		merchant	project_owner('$(object)'), verb: false, required: true, referenceBy: projectBidListAsProjectOwner,type:merchant;
		merchant	responsible_merchant('$(object)'), verb: false, required: false, referenceBy: projectBidListAsResponsibleMerchant,type:merchant;
		string_image	project_owner_signature('signature.jpg'), verb: false, required: true,type:string_image;
		string_image	responsible_merchant_signature('signature.jpg'), verb: false, required: true,type:string_image;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectBidList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=项目运营, vg4employer=项目运营, name=labor_supervision, vg4employee=项目运营}
labor_supervision{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx劳务监督'), verb: false, required: true,type:string;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: laborSupervisionListAsEmployee,type:merchant;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: laborSupervisionListAsEmployer,type:merchant;
		string	work_content('工作内容'), verb: false, required: true,type:string;
		date_time	work_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		task	work_task('$(object)'), verb: false, required: true, referenceBy: laborSupervisionList,type:task;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: laborSupervisionList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=项目运营, name=safety_instruction, vg4post_by=项目运营}
safety_instruction{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('安全文明'), verb: false, required: true,type:string;
		string	content('不能高空抛物'), verb: false, required: true,type:string;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: safetyInstructionList,type:merchant;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: safetyInstructionList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=项目运营, name=design_change, vg4designer=项目运营, vg4sponsor=项目运营}
design_change{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx设计变更'), verb: false, required: true,type:string;
		merchant	designer('$(object)'), verb: false, required: true, referenceBy: designChangeListAsDesigner,type:merchant;
		design	design('$(object)'), verb: false, required: true, referenceBy: designChangeList,type:design;
		string	change_content('变更内容'), verb: false, required: true,type:string;
		string_document	change_file('变更CR12345.pdf'), verb: false, required: true,type:string_document;
		merchant	sponsor('$(object)'), verb: false, required: true, referenceBy: designChangeListAsSponsor,type:merchant;
		project	project('$(object)'), verb: false, required: true, referenceBy: designChangeList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: designChangeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=项目运营, name=violation, vg4impact_merchant=项目运营, vg4project=项目运营, vg4responsible_merchant=项目运营}
violation{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('未按时完工'), verb: false, required: true,type:string;
		string	description('未按时完工'), verb: false, required: true,type:string;
		string_image	violation_image1('img.jpg'), verb: false, required: true,type:string_image;
		string_image	violation_image2('img.jpg'), verb: false, required: true,type:string_image;
		string_image	violation_image3('img.jpg'), verb: false, required: true,type:string_image;
		string_image	violation_image4('img.jpg'), verb: false, required: true,type:string_image;
		string_image	violation_image5('img.jpg'), verb: false, required: true,type:string_image;
		date	occur_time('2097-03-09'), verb: false, required: true,type:date;
		money	deduct_amount('$1900.88'), verb: false, required: true,type:money;
		project	project('$(object)'), verb: false, required: true, referenceBy: violationList,type:project;
		work_package	related_work_package('$(object)'), verb: false, required: false, referenceBy: violationList,type:work_package;
		merchant	responsible_merchant('$(object)'), verb: false, required: true, referenceBy: violationListAsResponsibleMerchant,type:merchant;
		merchant	impact_merchant('$(object)'), verb: false, required: true, referenceBy: violationListAsImpactMerchant,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: violationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=项目运营, name=project_funding, vg4project=项目运营}
project_funding{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目资金'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectFundingList,type:project;
		money	funding_amount('$300000.00'), verb: false, required: true,type:money;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectFundingList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=construction_start_working_files, vg4project=项目资料, vg4upload_user=项目资料}
construction_start_working_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx开工资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: constructionStartWorkingFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: constructionStartWorkingFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: constructionStartWorkingFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=qualitiy_acceptance_files, vg4project=项目资料, vg4upload_user=项目资料}
qualitiy_acceptance_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx质量验收资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: qualitiyAcceptanceFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: qualitiyAcceptanceFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: qualitiyAcceptanceFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=engineering_experiment_files, vg4project=项目资料, vg4upload_user=项目资料}
engineering_experiment_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx试验资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: engineeringExperimentFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: engineeringExperimentFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: engineeringExperimentFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=construction_process_files, vg4project=项目资料, vg4upload_user=项目资料}
construction_process_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx施工过程资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: constructionProcessFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: constructionProcessFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: constructionProcessFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=necessary_supplement_files, vg4project=项目资料, vg4upload_user=项目资料}
necessary_supplement_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx必要增补资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: necessarySupplementFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: necessarySupplementFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: necessarySupplementFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=construction_completion_files, vg4project=项目资料, vg4upload_user=项目资料}
construction_completion_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx竣工资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: constructionCompletionFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: constructionCompletionFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: constructionCompletionFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=engineering_quality_supervision_files, vg4project=项目资料, vg4upload_user=项目资料}
engineering_quality_supervision_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx建筑工程质量监督资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=project_files_archive, vg4project=项目资料, vg4upload_user=项目资料}
project_files_archive{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目资料存档'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: projectFilesArchiveList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectFilesArchiveList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectFilesArchiveList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=engineering_quality_supervision_archive, vg4project=项目资料, vg4upload_user=项目资料}
engineering_quality_supervision_archive{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx建筑工程质量监督资料存档'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionArchiveList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionArchiveList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionArchiveList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=财务管理, name=contract_collection}
contract_collection{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx合同收款管理'), verb: false, required: true,type:string;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractCollectionList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=财务管理, name=contract_payment}
contract_payment{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx合同付款管理'), verb: false, required: true,type:string;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractPaymentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=财务管理, name=contract_settlement}
contract_settlement{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx合同结算管理'), verb: false, required: true,type:string;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=财务管理, name=economic_verification_form, vg4service_vendor=财务管理}
economic_verification_form{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx经济签证单管理'), verb: false, required: true,type:string;
		merchant	service_vendor('$(object)'), verb: false, required: true, referenceBy: economicVerificationFormList,type:merchant;
		date_time	construction_datetime('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		string	content('施工内容'), verb: false, required: true,type:string;
		employee_nomination	responsible_employee('$(object)'), verb: false, required: true, referenceBy: economicVerificationFormList,type:employee_nomination;
		merchant_seal	merchant_seal('$(object)'), verb: false, required: true, referenceBy: economicVerificationFormList,type:merchant_seal;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: economicVerificationFormList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=财务管理, name=project_objective, vg4service_store=财务管理, vg4project=财务管理}
project_objective{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目目标管理'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectObjectiveList,type:project;
		merchant	service_store('$(object)'), verb: false, required: true, referenceBy: projectObjectiveList,type:merchant;
		string	objective_content('100天完工'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectObjectiveList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=财务管理, name=project_progress_funding_trusteeship_plan, vg4service_store=财务管理, vg4project=财务管理, vg4owner=财务管理}
project_progress_funding_trusteeship_plan{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目进度资金托管计划'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectProgressFundingTrusteeshipPlanList,type:project;
		money	funding('$103000000.005'), verb: false, required: true,type:money;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: projectProgressFundingTrusteeshipPlanListAsOwner,type:merchant;
		merchant	service_store('$(object)'), verb: false, required: true, referenceBy: projectProgressFundingTrusteeshipPlanListAsServiceStore,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectProgressFundingTrusteeshipPlanList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=财务管理, name=contract_examine}
contract_examine{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx合同审批'), verb: false, required: true,type:string;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		string	comments('验证备注'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractExamineList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=财务管理, name=funding_close_trusteeship_contract, vg4funding_consumer=财务管理, vg4funding_vendor=财务管理}
funding_close_trusteeship_contract{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx资金封闭托管合同'), verb: false, required: true,type:string;
		contract_template_file	contract_template_file('$(object)'), verb: false, required: true, referenceBy: fundingCloseTrusteeshipContractList,type:contract_template_file;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		merchant	funding_vendor('$(object)'), verb: false, required: true, referenceBy: fundingCloseTrusteeshipContractListAsFundingVendor,type:merchant;
		merchant	funding_consumer('$(object)'), verb: false, required: true, referenceBy: fundingCloseTrusteeshipContractListAsFundingConsumer,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fundingCloseTrusteeshipContractList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4store=财务管理, vg4platform=财务管理, name=project_close_trusteeship_contract, vg4project=财务管理, vg4owner=财务管理}
project_close_trusteeship_contract{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目封闭拖管合同'), verb: false, required: true,type:string;
		contract_template_file	contract_template_file('$(object)'), verb: false, required: true, referenceBy: projectCloseTrusteeshipContractList,type:contract_template_file;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectCloseTrusteeshipContractList,type:project;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectCloseTrusteeshipContractList,type:platform;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: projectCloseTrusteeshipContractListAsOwner,type:merchant;
		merchant	store('$(object)'), verb: false, required: true, referenceBy: projectCloseTrusteeshipContractListAsStore,type:merchant;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=财务管理, name=funding_close_organization, vg4merchant=财务管理}
funding_close_organization{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('业主责任人|甲方代表|财务|监管员|财务|银行放贷员|银行监管员'), verb: false, required: true,type:string;
		funding_close_organization_type	funding_close_organization_type('$(object)'), verb: false, required: true, referenceBy: fundingCloseOrganizationList,type:funding_close_organization_type;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: fundingCloseOrganizationList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fundingCloseOrganizationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=funding_close_organization_type, features=setting, identified_by=code}
funding_close_organization_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('业主方|优荣平台方|银行委贷方'), verb: false, required: true,type:string;
		string	code('OWNER|PLATFORM|BANK'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fundingCloseOrganizationTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		fundingCloseOrganizationList	funding_close_organization_type(__no_group)--funding_close_organization_type;
	}
} depth=1; isRoot = false

meta{vg4store_merchant=财务管理, vg4platform=财务管理, vg4buyer_merchant=财务管理, name=task_order, vg4service_merchant=财务管理}
task_order{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx任务订单'), verb: false, required: true,type:string;
		task	task('$(object)'), verb: false, required: true, referenceBy: taskOrderList,type:task;
		money	amount('$20000.00'), verb: false, required: true,type:money;
		money	final_amount('$103000000.005'), verb: false, required: true,type:money;
		date_time	paid_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		date_time	deliver_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		date_time	receipt_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		date_time	closed_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		task_order_status	status('$(object)'), verb: false, required: true, referenceBy: taskOrderList,type:task_order_status;
		merchant	buyer_merchant('$(object)'), verb: false, required: true, referenceBy: taskOrderListAsBuyerMerchant,type:merchant;
		merchant	service_merchant('$(object)'), verb: false, required: true, referenceBy: taskOrderListAsServiceMerchant,type:merchant;
		merchant	store_merchant('$(object)'), verb: false, required: true, referenceBy: taskOrderListAsStoreMerchant,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: taskOrderList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=财务管理, name=task_order_status, identified_by=code, features=setting}
task_order_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('未就绪|待支付|待确认|已取消|已完成|处理中'), verb: false, required: true,type:string;
		string	code('INCOMPLETE|NEED_PAY|NEED_CONFIRM|CANCELLED|FINSIHED|PROCESSING'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: taskOrderStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		taskOrderList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{vg4platform=财务管理, name=work_package_acceptance_settlement, vg4service_vendor=财务管理}
work_package_acceptance_settlement{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx工作包验收结算'), verb: false, required: true,type:string;
		work_package	work_package('$(object)'), verb: false, required: true, referenceBy: workPackageAcceptanceSettlementList,type:work_package;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		merchant	service_vendor('$(object)'), verb: false, required: true, referenceBy: workPackageAcceptanceSettlementList,type:merchant;
		money	settlement_amount('$20000.00'), verb: false, required: true,type:money;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: workPackageAcceptanceSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=财务管理, name=project_acceptance_settlement, vg4project=财务管理, vg4owner=财务管理}
project_acceptance_settlement{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx工作包验收结算'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceSettlementList,type:project;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceSettlementList,type:merchant;
		money	settlement_amount('$20000.00'), verb: false, required: true,type:money;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=yourong_document}
yourong_document{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('资料名称'), verb: false, required: true,type:string;
		string_document	document('document.docx'), verb: false, required: true,type:string_document;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: yourongDocumentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=使用指南, name=user_guide}
user_guide{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('优荣装修平台使用指南'), verb: false, required: true,type:string;
		string_document	document('document.docx'), verb: false, required: true,type:string_document;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: userGuideList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=platform, features=custom}
platform{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('优荣装配管理平台'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(139){
		platformConfigurationList	platform(系统配置)--platform;
		contractTemplateList	platform(合同管理)--platform;
		contractTypeList	platform(__no_group)--platform;
		contractCategoryList	platform(__no_group)--platform;
		contractStatusList	platform(__no_group)--platform;
		standardContractList	platform(合同管理)--platform;
		supplementaryContractList	platform(合同管理)--platform;
		payItemStatusList	platform(__no_group)--platform;
		licenseCategoryList	platform(__no_group)--platform;
		licenseIndustryTypeList	platform(__no_group)--platform;
		validateStatusList	platform(__no_group)--platform;
		authenticateStatusList	platform(__no_group)--platform;
		licenseList	platform(人力资源)--platform;
		merchantBaseTypeList	platform(__no_group)--platform;
		merchantStatusList	platform(__no_group)--platform;
		merchantTypeList	platform(__no_group)--platform;
		merchantList	platform(人力资源)--platform;
		industryTypeList	platform(人力资源)--platform;
		engineeringTypeList	platform(人力资源)--platform;
		careerTypeList	platform(人力资源)--platform;
		roleList	platform(__no_group)--platform;
		jobList	platform(__no_group)--platform;
		employeeNominationList	platform(人力资源)--platform;
		taskStatusList	platform(__no_group)--platform;
		workStatusList	platform(__no_group)--platform;
		workPackageTypeList	platform(__no_group)--platform;
		projectList	platform(项目运营)--platform;
		projectTypeList	platform(__no_group)--platform;
		projectServiceTypeList	platform(__no_group)--platform;
		projectPhaseList	platform(__no_group)--platform;
		workingStatusList	platform(__no_group)--platform;
		projectOrganizationTypeList	platform(__no_group)--platform;
		projectRoleList	platform(__no_group)--platform;
		projectProgressStatusList	platform(__no_group)--platform;
		dailyTaskCategoryList	platform(__no_group)--platform;
		dailyTaskTypeList	platform(__no_group)--platform;
		dailyTaskSecondTypeList	platform(__no_group)--platform;
		dailyTaskThirdTypeList	platform(__no_group)--platform;
		dailyTaskTemplateList	platform(项目运营)--platform;
		projectMaterialTypeList	platform(__no_group)--platform;
		projectMaterialParentTypeList	platform(__no_group)--platform;
		projectMaterialReviewStatusList	platform(__no_group)--platform;
		materialReviewResultList	platform(__no_group)--platform;
		yourongProjectBookStatusList	platform(__no_group)--platform;
		yourongProjectBookTypeList	platform(__no_group)--platform;
		laborDisputeStatusList	platform(__no_group)--platform;
		laborDisputeTypeList	platform(__no_group)--platform;
		loanFundList	platform(金融服务)--platform;
		loanApplicationList	platform(金融服务)--platform;
		loanContractList	platform(金融服务)--platform;
		materialCategoryList	platform(项目运营)--platform;
		materialTypeList	platform(项目运营)--platform;
		materialUnitOfMeasurementList	platform(项目运营)--platform;
		accountBookTypeList	platform(__no_group)--platform;
		accountBookItemStatusList	platform(__no_group)--platform;
		recommendationList	platform(平台营销)--platform;
		emplacementApplicationList	platform(平台营销)--platform;
		personalEmplacementApplicationList	platform(平台营销)--platform;
		customerProjectApplicationList	platform(平台营销)--platform;
		partnerSettlementApplicationList	platform(平台营销)--platform;
		changeRequestTypeList	platform(__no_group)--platform;
		changeRequestList	platform(平台追踪)--platform;
		businessTypeList	platform(__no_group)--platform;
		auditStatusList	platform(__no_group)--platform;
		contractTemplateFileList	platform(模板中心)--platform;
		financeTemplateList	platform(模板中心)--platform;
		fiveBookTemplateList	platform(模板中心)--platform;
		projectEngineeringTemplateList	platform(模板中心)--platform;
		processMapList	platform(流程管理)--platform;
		processList	platform(流程管理)--platform;
		todoListList	platform(流程管理)--platform;
		todoListStatusList	platform(__no_group)--platform;
		processAuditList	platform(流程管理)--platform;
		processApplicationList	platform(流程管理)--platform;
		contractLedgerList	platform(合同管理)--platform;
		contractRiskList	platform(合同管理)--platform;
		contractReportList	platform(合同管理)--platform;
		contractStatisticReportList	platform(大数据)--platform;
		projectStatisticReportList	platform(大数据)--platform;
		serviceVendorStatisticReportList	platform(大数据)--platform;
		financialServiceStatisticReportList	platform(大数据)--platform;
		recruitmentRequirementList	platform(人力资源)--platform;
		jobPositionList	platform(人力资源)--platform;
		candidateTalentList	platform(人力资源)--platform;
		staffFilesList	platform(人力资源)--platform;
		employeeRelationList	platform(人力资源)--platform;
		employeeSalaryList	platform(人力资源)--platform;
		employeePerformanceList	platform(人力资源)--platform;
		merchantSealList	platform(商户管理)--platform;
		cooperateApplicationList	platform(商户管理)--platform;
		projectApplicationList	platform(商户管理)--platform;
		projectAttractInvestmentList	platform(商户管理)--platform;
		serivceVendorAttractInvestmentList	platform(商户管理)--platform;
		brandAttractInvestmentList	platform(商户管理)--platform;
		projectSettlementList	platform(商户管理)--platform;
		serviceVendorSettlementList	platform(商户管理)--platform;
		brandPartnerSettlementList	platform(商户管理)--platform;
		merchantVerificationList	platform(商户管理)--platform;
		qualificationExaminationList	platform(商户管理)--platform;
		qualificationResearchList	platform(商户管理)--platform;
		partnerRecommendationList	platform(平台营销)--platform;
		projectDirectiveList	platform(项目运营)--platform;
		projectDailyReportList	platform(项目运营)--platform;
		projectProgressReportList	platform(项目运营)--platform;
		projectNotificationList	platform(项目运营)--platform;
		designList	platform(项目运营)--platform;
		constructionSchemaList	platform(项目运营)--platform;
		projectBidList	platform(项目运营)--platform;
		laborSupervisionList	platform(项目运营)--platform;
		safetyInstructionList	platform(项目运营)--platform;
		designChangeList	platform(项目运营)--platform;
		violationList	platform(项目运营)--platform;
		projectFundingList	platform(项目运营)--platform;
		constructionStartWorkingFilesList	platform(项目资料)--platform;
		qualitiyAcceptanceFilesList	platform(项目资料)--platform;
		engineeringExperimentFilesList	platform(项目资料)--platform;
		constructionProcessFilesList	platform(项目资料)--platform;
		necessarySupplementFilesList	platform(项目资料)--platform;
		constructionCompletionFilesList	platform(项目资料)--platform;
		engineeringQualitySupervisionFilesList	platform(项目资料)--platform;
		projectFilesArchiveList	platform(项目资料)--platform;
		engineeringQualitySupervisionArchiveList	platform(项目资料)--platform;
		contractCollectionList	platform(财务管理)--platform;
		contractPaymentList	platform(财务管理)--platform;
		contractSettlementList	platform(财务管理)--platform;
		economicVerificationFormList	platform(财务管理)--platform;
		projectObjectiveList	platform(财务管理)--platform;
		projectProgressFundingTrusteeshipPlanList	platform(财务管理)--platform;
		contractExamineList	platform(财务管理)--platform;
		fundingCloseTrusteeshipContractList	platform(财务管理)--platform;
		projectCloseTrusteeshipContractList	platform(财务管理)--platform;
		fundingCloseOrganizationList	platform(财务管理)--platform;
		fundingCloseOrganizationTypeList	platform(__no_group)--platform;
		taskOrderList	platform(财务管理)--platform;
		taskOrderStatusList	platform(财务管理)--platform;
		workPackageAcceptanceSettlementList	platform(财务管理)--platform;
		projectAcceptanceSettlementList	platform(财务管理)--platform;
		yourongDocumentList	platform(项目资料)--platform;
		userGuideList	platform(使用指南)--platform;
	}
} depth=0; isRoot = true

meta{name=mobile_app}
mobile_app{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('移动端配置'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		pageList	mobile_app(页面管理)--mobile_app;
		pageTypeList	mobile_app(__no_group)--mobile_app;
		articleCategoryList	container(__no_group)--container;
		articleList	container(平台营销)--container;
	}
} depth=0; isRoot = true

meta{name=page, features=status, vg4mobile_app=页面管理}
page{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	page_title('小程序首页|金牌服务商|优选设计师|机构单位板块|商业协会板块|商业连锁板块|精装楼盘板块|旧改电梯|优质品牌|BIM应用'), verb: false, required: true,type:string;
		string	link_to_url('首页'), verb: false, required: true,type:string;
		page_type	page_type('$(object)'), verb: false, required: true, referenceBy: pageList,type:page_type;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageList,type:mobile_app;
		string	code('WXAPP_HOMEPAGE|GOLDEN_SERVICE|DESIGNER|ORGNIZATION|ASSOCIATION|BIZ_CHAIN|REAL_ESTATE|JGDT|YZPP|BIM'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		slideList	page(__no_group)--page;
		uiActionList	page(__no_group)--page;
		sectionList	page(__no_group)--page;
		welcomeSlideList	show_in(__no_group)--show_in;
	}
} depth=2; isRoot = false

meta{name=page_type, features=status, identified_by=code}
page_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('首页|我的|Generic Page|Listof Page|功能大厅|普通'), verb: false, required: true,type:string;
		string	code('home|me|generic-page|listof-page|service-center|simple'), verb: false, required: true,type:string;
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageTypeList,type:mobile_app;
		bool	footer_tab('true|false'), verb: false, required: true,type:bool;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		pageList	page_type(__no_group)--page_type;
	}
} depth=1; isRoot = false

meta{name=slide}
slide{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('首页Focus的内容'), verb: false, required: true,type:string;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string_image	video_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string	link_to_url('|/section/article/'), verb: false, required: false,type:string;
		page	page('$(object)'), verb: false, required: true, referenceBy: slideList,type:page;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=ui_action}
ui_action{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('submit|share|view|more'), verb: false, required: true,type:string;
		string	icon('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	title('提交|分享|查看|更多'), verb: false, required: true,type:string;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string	brief('Submit|Share|View|View More'), verb: false, required: true,type:string;
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string	link_to_url('wxappService/section/article/'), verb: false, required: true,type:string;
		string_longtext	extra_data('text()'), verb: false, required: true,type:string_longtext;
		page	page('$(object)'), verb: false, required: true, referenceBy: uiActionList,type:page;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=section}
section{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('文章|作品'), verb: false, required: true,type:string;
		string	brief('Article|Artwork'), verb: false, required: true,type:string;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string	view_group('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	link_to_url('wxappService/section/article/'), verb: false, required: true,type:string;
		page	page('$(object)'), verb: false, required: true, referenceBy: sectionList,type:page;
		article_category	article_category('$(object)'), verb: false, required: false, referenceBy: sectionList,type:article_category;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		pageArticleList	section(__no_group)--section;
	}
} depth=3; isRoot = false

meta{vg4platform=系统配置, name=platform_configuration}
platform_configuration{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string_image	homepage_action_background('https://yourongzhixing.com/mss/public/example/dssc/example/114/194/222/114/actionbk.jpg'), verb: false, required: true,type:string_image;
		string_image	default_service_fee_image('service_fee_image.jpg'), verb: false, required: true,type:string_image;
		string_image	default_project_fee_image('project_fee_image.jpg'), verb: false, required: true,type:string_image;
		string_image	default_task_fee_image('task_fee_image.jpg'), verb: false, required: true,type:string_image;
		string_image	default_fine_image('fine_image.jpg'), verb: false, required: true,type:string_image;
		string_image	default_merchant_image('personal_merchant.jpg'), verb: false, required: true,type:string_image;
		string_image	default_logo_image('personal_logo.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: platformConfigurationList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(6){
		iconConfigurationList	platform_configuration(__no_group)--platform_configuration;
		applicationStatusList	platform_configuration(__no_group)--platform_configuration;
		recommendationTypeList	platform_configuration(__no_group)--platform_configuration;
		estatePropertyTypeList	platform_configuration(__no_group)--platform_configuration;
		partnerTypeList	platform_configuration(__no_group)--platform_configuration;
		availableServiceLocationList	platform_configuration(__no_group)--platform_configuration;
	}
} depth=1; isRoot = false

meta{name=icon_configuration, features=status}
icon_configuration{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('我的推荐|装修申请|精装楼盘|商业连锁|商会协会|机构单位|我要装修|项目推荐|项目管理|企业入驻|项目封面|优荣五书|项目组织|合同任务|资料档案|管理员工|我的项目|我的账户|我的订单|切换账号|退出登录|测试|批注按钮|审核按钮|取消按钮|编辑按钮|添加按钮|银行卡|个人入驻|分包申请|精选设计|金牌服务|优质品牌|旧改电梯|BIM应用|超级账本|预期收支|合同对账|合同收款|合同付款|通知|审核|批注|认领|疑虑'), verb: false, required: true,type:string;
		string	code('ME_WDTJ|ME_ZXSQ|SY_RK_JZLP|SY_RK_SYLS|SY_RK_SHXH|SY_RK_JGDW|SY_GN_WYZX|SY_GN_XMTJ|SY_GN_XMGL|SY_GN_QYRZ|YM_XM_XMFM|XM_DT_YRWS|XM_DT_XMZZ|XM_DT_HTRW|XM_DT_ZLDA|ME_GLYG|ME_WDXM|ME_WDZH|ME_WDDD|ME_QHZH|ME_TCDL|TEST_FOR_YR|COMMENT_BTN|REVIEW_BTN|CANCEL_BTN|EDIT_BTN|ADD_BTN|DEBIT_CARD|SY_GN_GRRZ|SY_GN_FBSQ|SY_RK_JXSJ|SY_RK_JPFW|SY_RK_YZPP|SY_RK_JGDT|SY_RK_BIM|SUPER_ACCOUNT|EXPECTED_EXPENSE|CONTRACT_RECONCILIATION|CONTRACT_RECEIPT|CONTRACT_PAYMENT|NOTIFICATION|AUDIT|COMMENT|CONFIRM|CONCERN'), verb: false, required: true,type:string;
		string	description('我的推荐|装修申请|用于首页的‘精装楼盘’入口处的图标|用于首页的‘商业连锁’入口处的图标|用于首页的‘商会协会’入口处的图标|用于首页的‘机构单位’入口处的图标|用于首页中部的‘我要装修’申请入口的图标|用于首页中部的‘项目推荐’申请入口的图标|用于首页中部的‘项目管理’功能入口的图标|用于个人首页中部的‘我要入驻’功能入口的图标|用于页面上展示没有上传过项目图片的项目的时候，作为缺省的封面图|用于项目大厅里，幻灯片下方的 ‘优荣五书’ 的展示图标|用于项目大厅里，幻灯片下方的 ‘项目组织’ 的展示图标|用于项目大厅里，幻灯片下方的 ‘合同任务’ 的展示图标|用于项目大厅里，幻灯片下方的 ‘资料档案’ 的展示图标|用于'我的'页面, 管理员工的图标|用于'我的'页面, 我的项目的图标|用于'我的'页面, 我的账户的图标|用于'我的'页面, 我的订单的图标|用于'我的'页面, 切换账号的图标|用于'我的'页面, 登出登录的图标|用于测试图片功能是否正常，不会用于展示|批注按钮图标|审核按钮图标|取消按钮图标|编辑按钮图标|首页个人入驻图标|首页分包申请图标|首页精选设计图标|首页金牌服务图标|首页优质品牌图标|首页旧改电梯图标|首页营销中的BIM应用图标|用于我的页面-合同订单-超级账本|用于我的页面-合同订单-预期收支|用于我的页面-合同订单-合同对账|用于我的页面-合同订单-合同付款|合同订单顶部的通知图标|合同订单顶部的审核图标|合同订单顶部批注图标|合同订单顶部认领图标|合同订单顶部疑虑图标'), verb: false, required: true,type:string;
		string	icon('icon.jpg|form|form|form|form|form'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: iconConfigurationList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{vg4platform=合同管理, name=contract_template}
contract_template{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XX合同模板'), verb: false, required: true,type:string;
		contract_type	template_type('$(object)'), verb: false, required: true, referenceBy: contractTemplateList,type:contract_type;
		string_document	template('template.docx'), verb: false, required: true,type:string_document;
		employee_nomination	submitter('$(object)'), verb: false, required: false, referenceBy: contractTemplateList,type:employee_nomination;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractTemplateList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		standardContractList	contract_template(__no_group)--contract_template;
	}
} depth=5; isRoot = false

meta{name=contract_type, group_by=category, features=setting, identified_by=code}
contract_type{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目工程托管服务合同|项目资金委托授权管理合同|商户入驻合同|服务商项目管理平台服务合同|项目委托设计平台管理服务合同|项目工程分包合同|项目职业经理人聘用合同|项目委托设计合同|员工聘用合同|工程合同预期收益借款担保合同|平台项目资金委贷合同|服务商银行借款合同|品牌合作伙伴合同'), verb: false, required: true,type:string;
		string	code('PLATFORM_PROJECT_TRUST|PLATFORM_FUND_TRUST|VENDOR_SETTLEMENT|VENDOR_SERVICE|VENDOR_DESIGN|WORKPACKAGE_PACKAGE|WORKPACKAGE_MANAGEMENT|WORKPACKAGE_DESIGN|EMPLOYMENT|FINANCIAL_GUARANTEE|FINANCIAL_DEBIT|FINANCIAL_BANK|PARTNER'), verb: false, required: true,type:string;
		string	category('平台托管合同|平台托管合同|平台商户合同|平台商户合同|平台商户合同|平台分包合同|平台分包合同|平台分包合同|员工聘用合同|金融服务合同|金融服务合同|金融服务合同|品牌合作伙伴合同'), verb: false, required: true,type:string;
		contract_category	parent_category('$(object)'), verb: false, required: true, referenceBy: contractTypeList,type:contract_category;
		string_image	icon('contract.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(6){
		contractTemplateList	template_type(__no_group)--template_type;
		standardContractList	contract_type(__no_group)--contract_type;
		contractLedgerList	contract_type(__no_group)--contract_type;
		contractRiskList	contract_type(__no_group)--contract_type;
		contractReportList	contract_type(__no_group)--contract_type;
		contractStatisticReportList	contract_type(__no_group)--contract_type;
	}
} depth=2; isRoot = false

meta{name=contract_category, features=setting, identified_by=code}
contract_category{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('平台托管合同|平台商户合同|平台分包合同|员工聘用合同|金融服务合同|品牌合作伙伴合同'), verb: false, required: true,type:string;
		string	code('PLATFORM_EPC|PLATFORM_MERCHANT|PLATFORM_PACKAGE|PLATFORM_EMPLOYEE|PLATFORM_FINANCE|PLATFORM_BRAND'), verb: false, required: true,type:string;
		string_image	icon('contract.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractCategoryList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		contractTypeList	parent_category(__no_group)--parent_category;
	}
} depth=1; isRoot = false

meta{name=contract_status, features=status}
contract_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待确认|执行中|执行完毕|有风险|已取消'), verb: false, required: true,type:string;
		string	code('NEED_CONFIRM|FULFILLING|END_FULFILLED|RISK|CANCELLED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		standardContractList	contract_status(__no_group)--contract_status;
		supplementaryContractList	status(__no_group)--status;
		eventContractBasicInfoList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{vg4platform=合同管理, name=standard_contract, vg4project=合同管理, vg4party_b=合同管理, vg4party_a=合同管理}
standard_contract{
	fields(22){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('合同名称'), verb: false, required: true,type:string;
		string	contract_number('SWB-JS-2015-001(01)'), verb: false, required: true,type:string;
		merchant	party_a('$(object)'), verb: false, required: true, referenceBy: standardContractListAsPartyA,type:merchant;
		merchant	party_b('$(object)'), verb: false, required: true, referenceBy: standardContractListAsPartyB,type:merchant;
		contract_status	contract_status('$(object)'), verb: false, required: true, referenceBy: standardContractList,type:contract_status;
		contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: standardContractList,type:contract_type;
		contract_template	contract_template('$(object)'), verb: false, required: true, referenceBy: standardContractList,type:contract_template;
		images	images('images()'), verb: false, required: true,type:images;
		string_document	contract('contract.docx'), verb: false, required: true,type:string_document;
		date	start_date('2100-01-01'), verb: false, required: true,type:date;
		date	end_date('2100-01-01'), verb: false, required: true,type:date;
		string_longtext	contract_summary('text()'), verb: false, required: true,type:string_longtext;
		employee_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: standardContractList,type:employee_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		money	amount('$0.00|$9999999.99'), verb: false, required: true,type:money;
		project	project('$(object)'), verb: false, required: false, referenceBy: standardContractList,type:project;
		work_package	work_package('$(object)'), verb: false, required: false, referenceBy: standardContractList,type:work_package;
		task	task('$(object)'), verb: false, required: false, referenceBy: standardContractList,type:task;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: standardContractList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(30){
		contractPayItemList	contract(__no_group)--contract;
		supplementaryContractList	contract(__no_group)--contract;
		commissionPayItemList	contract(__no_group)--contract;
		contractReviewRecordList	contract(__no_group)--contract;
		contractCommentsRecordList	contract(__no_group)--contract;
		contractViewRecordList	contract(__no_group)--contract;
		contractOperationLogList	contract(__no_group)--contract;
		projectPenaltiesList	contract(__no_group)--contract;
		laborWageManagementSheetList	contract(__no_group)--contract;
		materialPreservedSampleList	contract(__no_group)--contract;
		materialBidSampleList	contract(__no_group)--contract;
		materialRecordList	contract(__no_group)--contract;
		materialChangeList	contract(__no_group)--contract;
		materialAcceptanceApplicationList	contract(__no_group)--contract;
		eventMaterialAcceptanceBasicInfoList	contract(__no_group)--contract;
		eventMaterialChangeContractInfoList	contract(__no_group)--contract;
		eventMaterialPreservedBasicInfoList	contract(__no_group)--contract;
		eventProjectPenaltiesList	work_package_contract(__no_group)--work_package_contract;
		contractLedgerListAsProjectParticipatorContract	project_participator_contract(__no_group)--project_participator_contract;
		contractLedgerListAsProjectRunningContract	project_running_contract(__no_group)--project_participator_contract;
		contractLedgerListAsWorkPackageParticipatorContract	work_package_participator_contract(__no_group)--project_participator_contract;
		contractRiskListAsProjectParticipatorContract	project_participator_contract(__no_group)--project_participator_contract;
		contractRiskListAsProjectRunningContract	project_running_contract(__no_group)--project_participator_contract;
		contractRiskListAsWorkPackageParticipatorContract	work_package_participator_contract(__no_group)--project_participator_contract;
		contractReportListAsProjectParticipatorContract	project_participator_contract(__no_group)--project_participator_contract;
		contractReportListAsProjectRunningContract	project_running_contract(__no_group)--project_participator_contract;
		contractReportListAsWorkPackageParticipatorContract	work_package_participator_contract(__no_group)--project_participator_contract;
		contractStatisticReportListAsProjectParticipatorContract	project_participator_contract(__no_group)--project_participator_contract;
		contractStatisticReportListAsProjectRunningContract	project_running_contract(__no_group)--project_participator_contract;
		contractStatisticReportListAsWorkPackageParticipatorContract	work_package_participator_contract(__no_group)--project_participator_contract;
	}
} depth=6; isRoot = false

meta{name=contract_pay_item, vg4payer=合同管理, vg4payee=合同管理}
contract_pay_item{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('平台项目管理服务费'), verb: false, required: true,type:string;
		string	brief('托管服务费首期支付|托管服务费二期支付|托管服务费三期支付|托管服务费四期支付|托管服务费五期支付'), verb: false, required: true,type:string;
		int	payment_phase('0|1|2|3|4'), verb: false, required: true,type:int;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: contractPayItemList,type:standard_contract;
		merchant	payer('$(object)'), verb: false, required: true, referenceBy: contractPayItemListAsPayer,type:merchant;
		merchant	payee('$(object)'), verb: false, required: true, referenceBy: contractPayItemListAsPayee,type:merchant;
		money	pay_amount('$0.00|$9999999.99'), verb: false, required: true,type:money;
		money	labor_fee('$0.00|$9999999.99'), verb: false, required: true,type:money;
		money	material_fee('$0.00|$9999999.99'), verb: false, required: true,type:money;
		money	other_fee('$0.00|$9999999.99'), verb: false, required: true,type:money;
		string	pay_criteira('合同款项支付条件文本描述'), verb: false, required: true,type:string;
		pay_item_status	pay_item_status('$(object)'), verb: false, required: true, referenceBy: contractPayItemList,type:pay_item_status;
		date	expected_pay_time('2020-05-05'), verb: false, required: true,type:date;
		project_progress	project_progress('$(object)'), verb: false, required: true, referenceBy: contractPayItemList,type:project_progress;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		supplementaryContractPayItemList	contract_pay_item(__no_group)--contract_pay_item;
		commissionPayItemList	contract_pay_item(__no_group)--contract_pay_item;
		contractPaymentApplicationList	pay_item(__no_group)--pay_item;
		eventAdditionalContractPaymentPhaseList	payment_item(__no_group)--payment_item;
	}
} depth=7; isRoot = false

meta{name=supplementary_contract_type, features=status, identified_by=code}
supplementary_contract_type{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('增补合同|工程签证'), verb: false, required: true,type:string;
		string	code('SUPPLEMENTARY|PROJECT_VISA'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		supplementaryContractList	type(__no_group)--type;
		eventAdditionalContractBasicInfoList	contract_type(__no_group)--contract_type;
	}
} depth=0; isRoot = true

meta{vg4platform=合同管理, name=supplementary_contract, vg4project=合同管理, vg4party_b=合同管理, vg4party_a=合同管理}
supplementary_contract{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('平台项目管理服务费增补合同'), verb: false, required: true,type:string;
		string	contract_number('SWB-JS-2015-001(01)'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: supplementaryContractList,type:standard_contract;
		string_document	document('document.doc'), verb: false, required: true,type:string_document;
		supplementary_contract_type	type('$(object)'), verb: false, required: true, referenceBy: supplementaryContractList,type:supplementary_contract_type;
		string	brief('托管服务费首期支付增补|托管服务费二期支付增补|托管服务费三期支付增补|托管服务费四期支付增补|托管服务费五期支付增补'), verb: false, required: true,type:string;
		contract_status	status('$(object)'), verb: false, required: true, referenceBy: supplementaryContractList,type:contract_status;
		images	images('images()'), verb: false, required: true,type:images;
		employee_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: supplementaryContractList,type:employee_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: supplementaryContractList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		supplementaryContractPayItemList	supplementary_contract(__no_group)--supplementary_contract;
	}
} depth=7; isRoot = false

meta{name=supplementary_contract_pay_item}
supplementary_contract_pay_item{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		contract_pay_item	contract_pay_item('$(object)'), verb: false, required: false, referenceBy: supplementaryContractPayItemList,type:contract_pay_item;
		supplementary_contract	supplementary_contract('$(object)'), verb: false, required: true, referenceBy: supplementaryContractPayItemList,type:supplementary_contract;
		string	name('平台项目管理服务费调整'), verb: false, required: true,type:string;
		string	brief('托管服务费首期支付|托管服务费二期支付|托管服务费三期支付|托管服务费四期支付|托管服务费五期支付'), verb: false, required: true,type:string;
		merchant	payer('$(object)'), verb: false, required: true, referenceBy: supplementaryContractPayItemListAsPayer,type:merchant;
		merchant	payee('$(object)'), verb: false, required: true, referenceBy: supplementaryContractPayItemListAsPayee,type:merchant;
		double	ajustment('0.99'), verb: false, required: true,type:double;
		string	pay_criteira('合同款项支付条件文本描述'), verb: false, required: true,type:string;
		audit_status	status('$(object)'), verb: false, required: true, referenceBy: supplementaryContractPayItemList,type:audit_status;
		date	expected_pay_time('2020-05-05'), verb: false, required: true,type:date;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{name=commission_pay_item, vg4payer=合同管理, vg4payee=合同管理}
commission_pay_item{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('平台项目管理服务费'), verb: false, required: true,type:string;
		string	brief('托管服务费首期支付|托管服务费二期支付|托管服务费三期支付|托管服务费四期支付|托管服务费五期支付'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: commissionPayItemList,type:standard_contract;
		contract_pay_item	contract_pay_item('$(object)'), verb: false, required: true, referenceBy: commissionPayItemList,type:contract_pay_item;
		merchant	payer('$(object)'), verb: false, required: true, referenceBy: commissionPayItemListAsPayer,type:merchant;
		merchant	payee('$(object)'), verb: false, required: true, referenceBy: commissionPayItemListAsPayee,type:merchant;
		double	pay_rate('0.0001|0.050|1.00'), verb: false, required: true,type:double;
		money	pay_amount('$0.00|$9999999.99'), verb: false, required: true,type:money;
		string	pay_criteira('合同款项支付条件文本描述'), verb: false, required: true,type:string;
		pay_item_status	pay_item_status('$(object)'), verb: false, required: true, referenceBy: commissionPayItemList,type:pay_item_status;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{name=pay_item_status, features=status, identified_by=code}
pay_item_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待申请|待审核|有疑虑|待认领|已认领'), verb: false, required: true,type:string;
		string	code('PENDING_ON_APPLICATION|PENDING_ON_AUDIT|CONCERN|PENDING_ON_CONFIRMATION|CONFIRMED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: payItemStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		contractPayItemList	pay_item_status(__no_group)--pay_item_status;
		commissionPayItemList	pay_item_status(__no_group)--pay_item_status;
	}
} depth=1; isRoot = false

meta{name=contract_review_record}
contract_review_record{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		bool	review_passed('false|true'), verb: false, required: true,type:bool;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: contractReviewRecordList,type:standard_contract;
		project_nomination	reviewer('$(object)'), verb: false, required: true, referenceBy: contractReviewRecordList,type:project_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=contract_comments_record}
contract_comments_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		project_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: contractCommentsRecordList,type:project_nomination;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: contractCommentsRecordList,type:standard_contract;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=contract_view_record, max_count=1000000000, vg4merchant=合同管理}
contract_view_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		int	view_count('0|1|300'), verb: false, required: true,type:int;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: contractViewRecordList,type:standard_contract;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: contractViewRecordList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=contract_operation_log, vg4operator_merchant=商户管理, features=log, max_count=1000000000}
contract_operation_log{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('创建合同|款项支付申请|款项支付完成'), verb: false, required: true,type:string;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		string	log_type('create|pay|apply'), verb: false, required: true,type:string;
		string	refer_object_type('project'), verb: false, required: true,type:string;
		string	refer_object_id('p000001'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: contractOperationLogList,type:standard_contract;
		merchant	operator_merchant('$(object)'), verb: false, required: false, referenceBy: contractOperationLogList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=contract_payment_application}
contract_payment_application{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		audit_status	status('$(object)'), verb: false, required: true, referenceBy: contractPaymentApplicationList,type:audit_status;
		contract_pay_item	pay_item('$(object)'), verb: false, required: true, referenceBy: contractPaymentApplicationList,type:contract_pay_item;
		merchant	submitter('$(object)'), verb: false, required: true, referenceBy: contractPaymentApplicationList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{name=account_book_record, max_count=1000000000}
account_book_record{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		bool	confirmed('true|false'), verb: false, required: true,type:bool;
		string	title('支付项目第一阶段款项|智能秤订单收入'), verb: false, required: true,type:string;
		string_longtext	brief('text()'), verb: false, required: true,type:string_longtext;
		money	amount('$99999999.999'), verb: false, required: true,type:money;
		string	refer_object_type('MainOrder|Project|Task|ContractPayItem'), verb: false, required: true,type:string;
		string	refer_object_id('MainOrder|Project|Task|ContractPayItem'), verb: false, required: true,type:string;
		account_book	payer_account('$(object)'), verb: false, required: true, referenceBy: accountBookRecordListAsPayerAccount,type:account_book;
		account_book	payee_account('$(object)'), verb: false, required: true, referenceBy: accountBookRecordListAsPayeeAccount,type:account_book;
		money	payer_balance('$99999999.999'), verb: false, required: true,type:money;
		money	payee_balance('$99999999.999'), verb: false, required: true,type:money;
		string	change_request('CR000001'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=article_category, group_by=name}
article_category{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('精选案例|品牌故事|装修设计|时尚|使用指南'), verb: false, required: true,type:string;
		string_image	cover_image('cover_image.jpg'), verb: false, required: true,type:string_image;
		mobile_app	container('$(object)'), verb: false, required: true, referenceBy: articleCategoryList,type:mobile_app;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		sectionList	article_category(__no_group)--article_category;
		articleList	category(__no_group)--category;
	}
} depth=1; isRoot = false

meta{name=article, vg4container=平台营销}
article{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('如何有效利用空间'), verb: false, required: true,type:string;
		string_image	cover_image('cover_image.jpg'), verb: false, required: true,type:string_image;
		string	author_name('佚名|李志伟|曾明'), verb: false, required: true,type:string;
		article_category	category('$(object)'), verb: false, required: true, referenceBy: articleList,type:article_category;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		mobile_app	container('$(object)'), verb: false, required: true, referenceBy: articleList,type:mobile_app;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		articleParagraphList	article(__no_group)--article;
		pageArticleList	article(__no_group)--article;
	}
} depth=2; isRoot = false

meta{name=article_paragraph}
article_paragraph{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		string_image	image_url('example.jpg'), verb: false, required: true,type:string_image;
		string	video_url('example.mp4'), verb: false, required: true,type:string;
		article	article('$(object)'), verb: false, required: true, referenceBy: articleParagraphList,type:article;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=welcome_slide}
welcome_slide{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string_image	image_url('https://yourong-image.oss-cn-shenzhen.aliyuncs.com/yourong-image%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20181026210342-rc-upload-1540558987949-2.jpeg|https://yourong-image.oss-cn-shenzhen.aliyuncs.com/yourong-image%2F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20181026210333-rc-upload-1540558987949-7.jpeg'), verb: false, required: true,type:string_image;
		page	show_in('$(object)'), verb: false, required: true, referenceBy: welcomeSlideList,type:page;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=page_article}
page_article{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string_image	cover_image('example.jpg'), verb: false, required: true,type:string_image;
		article	article('$(object)'), verb: false, required: true, referenceBy: pageArticleList,type:article;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		section	section('$(object)'), verb: false, required: true, referenceBy: pageArticleList,type:section;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=merchant_active_nomination, vg4merchant=人力资源}
merchant_active_nomination{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('财务总管'), verb: false, required: true,type:string;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: merchantActiveNominationList,type:merchant;
		employee_nomination	nomination('$(object)'), verb: false, required: true, referenceBy: merchantActiveNominationList,type:employee_nomination;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=license_category, group_by=category, features=setting, identified_by=code}
license_category{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('营业执照|企业资质|安全许可证|其它证件|身份证|护照|港澳通行证|其它证件|建造师证|监理证|造价师证|审计师证|上岗职称证|其它证件|驾照|工作证|其它证件'), verb: false, required: true,type:string;
		string	category('企业证件|企业证件|企业证件|企业证件|个人证件|个人证件|个人证件|个人证件|职业资格证件|职业资格证件|职业资格证件|职业资格证件|职业资格证件|职业资格证件|其它证件|其它证件|其它证件'), verb: false, required: true,type:string;
		string	code('E_BUSINESS|E_QUALIFIED|E_SECURITY|E_OTHER|P_IDCARD|P_PASSPORT|P_HKMACAOPASS|P_OTHER|J_ARCHITECT|J_SUPERVSION|J_COST|J_AUDIT|J_WORKPERMIT|J_OTHER|O_DRIVER|O_WORK|O_OTHER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: licenseCategoryList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		licenseList	license_category(__no_group)--license_category;
	}
} depth=1; isRoot = false

meta{name=license_industry_type, features=setting, identified_by=code}
license_industry_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('建筑土建|建筑安装|编制内容'), verb: false, required: true,type:string;
		string	code('JZTJ|JZAZ|BZNR'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: licenseIndustryTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		licenseList	license_industry_type(__no_group)--license_industry_type;
	}
} depth=1; isRoot = false

meta{name=validate_status, features=status, identified_by=code}
validate_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('有效|过期|声明作废|吊销'), verb: false, required: true,type:string;
		string	code('VALID|EXPIRED|ABOLISHED|REVOKE'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: validateStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		licenseList	validate_status(__no_group)--validate_status;
	}
} depth=1; isRoot = false

meta{name=authenticate_status, features=status, identified_by=code}
authenticate_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已认证|未认证'), verb: false, required: true,type:string;
		string	code('AUTHENTICATED|PENDING'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: authenticateStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		licenseList	authenticate_status(__no_group)--authenticate_status;
	}
} depth=1; isRoot = false

meta{vg4platform=人力资源, name=license, vg4owner=人力资源}
license{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('张三的身份证|浩睿装饰有限公司营业执照'), verb: false, required: true,type:string;
		images	license_copy('images()'), verb: false, required: true,type:images;
		string	license_number('|91530600MA6KAYJW6M'), verb: false, required: false,type:string;
		string	expired_date('00:00'), verb: false, required: false,type:string;
		license_category	license_category('$(object)'), verb: false, required: true, referenceBy: licenseList,type:license_category;
		license_industry_type	license_industry_type('$(object)'), verb: false, required: false, referenceBy: licenseList,type:license_industry_type;
		validate_status	validate_status('$(object)'), verb: false, required: true, referenceBy: licenseList,type:validate_status;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: licenseList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: licenseList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		employee_nomination	authenticator('$(object)'), verb: false, required: false, referenceBy: licenseList,type:employee_nomination;
		authenticate_status	authenticate_status('$(object)'), verb: false, required: true, referenceBy: licenseList,type:authenticate_status;
		date_time	authenticate_date_time('2100-12-31T23:59:59'), verb: false, required: false,type:date_time;
		string	authenticate_comment('审核意见'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=merchant_base_type, group_by=category, features=status}
merchant_base_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('全国中心|省级中心|地市级中心|区域营业厅|项目业主|服务商户|设计机构|上游品牌机构|下游品牌机构|项目监理|项目管理|项目勘察|项目审计|质量监察|住建局|规划局|商会协会|企业高管|技术管理|企业管理|企业员工|工程管理|施工技工|其它商户'), verb: false, required: true,type:string;
		string	category('平台|平台|平台|平台|建设方|服务商|服务商|品牌方|品牌方|项目第三方职业人|项目第三方职业人|项目第三方职业人|项目第三方职业人|行业行政管理|行业行政管理|行业行政管理|商会协会|个人商户|个人商户|个人商户|个人商户|个人商户|个人商户|其它'), verb: false, required: true,type:string;
		string	code('PLATFORM_CIVIL_CENTER|PLATFORM_PROVINCE_CENTER|PLATFORM_CITY_CENTER|PLATFORM_DISTRICT_CENTER|PROPRIETOR|VENDOR_CONSTRUCTION|VENDOR_DESIGNER|PARTNER_UP_ORG|PARTNER_DOWN_ORG|MANAGEMENT_SUPERVISOR|MANAGEMENT_MANAGER|MANAGEMENT_SURVEYOR|MANAGEMENT_AUDITOR|MONITOR_QUALITY|MONITOR_CONSTRUCTION|MONITOR_PLANNING|COMMERCE_ASSOCIATION|PERSONAL_SENIOR_MANAGER|PERSONAL_TECH_MANAGER|PERSONAL_ENTERPRISE_MANAGER|PERSONAL_EMPLOYEE|PERSONAL_ENGINEER|PERSONAL_MECHANIC|OTHER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantBaseTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		merchantList	merchant_base_type(__no_group)--merchant_base_type;
	}
} depth=1; isRoot = false

meta{name=merchant_status, identified_by=code, features=status}
merchant_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('在业|停业|注销'), verb: false, required: true,type:string;
		string	code('OPENNING|STOPPED|CANCELLED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		merchantList	merchant_status(__no_group)--merchant_status;
	}
} depth=1; isRoot = false

meta{name=merchant_type, features=status, identified_by=code}
merchant_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('个人|机构'), verb: false, required: true,type:string;
		string	code('PERSONAL|ORGANIZATION'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		merchantList	merchant_type(__no_group)--merchant_type;
		subcontractApplicationList	merchant_type(__no_group)--merchant_type;
		eventSubcontractApplicationList	merchant_type(__no_group)--merchant_type;
	}
} depth=1; isRoot = false

meta{vg4platform=人力资源, name=merchant, features=merchant}
merchant{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('汪丁丁|成都双链科技有限责任公司'), verb: false, required: true,type:string;
		merchant_type	merchant_type('$(object)'), verb: false, required: true, referenceBy: merchantList,type:merchant_type;
		merchant_base_type	merchant_base_type('$(object)'), verb: false, required: true, referenceBy: merchantList,type:merchant_base_type;
		merchant_status	merchant_status('$(object)'), verb: false, required: true, referenceBy: merchantList,type:merchant_status;
		string_china_mobile_phone	contact_mobile('18012341234'), verb: false, required: true,type:string_china_mobile_phone;
		string	contact_address('成都市武侯区天府二街新希望天祥广场A座2511室'), verb: false, required: true,type:string;
		string_image	avatar('avatar.jpg|logoImage.jpg'), verb: false, required: true,type:string_image;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(120){
		standardContractListAsPartyA	party_a(合同管理)--party_a;
		standardContractListAsPartyB	party_b(合同管理)--party_a;
		contractPayItemListAsPayer	payer(合同管理)--payer;
		contractPayItemListAsPayee	payee(合同管理)--payer;
		supplementaryContractPayItemListAsPayer	payer(__no_group)--payer;
		supplementaryContractPayItemListAsPayee	payee(__no_group)--payer;
		commissionPayItemListAsPayer	payer(合同管理)--payer;
		commissionPayItemListAsPayee	payee(合同管理)--payer;
		contractViewRecordList	merchant(合同管理)--merchant;
		contractOperationLogList	operator_merchant(商户管理)--operator_merchant;
		contractPaymentApplicationList	submitter(__no_group)--submitter;
		merchantActiveNominationList	merchant(人力资源)--merchant;
		licenseList	owner(人力资源)--owner;
		debitCardList	merchant(__no_group)--merchant;
		merchantDetailList	merchant(__no_group)--merchant;
		jobList	merchant(__no_group)--merchant;
		employeeNominationListAsEmployee	employee(人力资源)--employee;
		employeeNominationListAsEmployer	employer(人力资源)--employee;
		workPackageList	vendor(项目运营)--vendor;
		projectListAsProjectOwner	project_owner(我的项目)--project_owner;
		projectListAsStore	store(项目运营)--project_owner;
		projectListAsPartner	partner(项目运营)--project_owner;
		projectMaterialViewRecordList	merchant(项目运营)--merchant;
		projectMaterialOperationLogList	operator_merchant(项目运营)--operator_merchant;
		projectAcceptanceList	property_owner(项目运营)--property_owner;
		loanFundList	fund_vendor(金融服务)--fund_vendor;
		loanApplicationList	applicant(金融服务)--applicant;
		loanContractListAsBorrower	borrower(金融服务)--borrower;
		loanContractListAsLender	lender(金融服务)--borrower;
		compensationInvestigationList	submitter(__no_group)--submitter;
		compensationResultList	submitter(__no_group)--submitter;
		materialRecordList	platform_information_manager(__no_group)--platform_information_manager;
		accountBookList	owner(财务管理)--owner;
		recommendationList	applicant_merchant(平台营销)--applicant_merchant;
		emplacementApplicationList	applicant_merchant(平台营销)--applicant_merchant;
		customerProjectApplicationList	applicant_merchant(平台营销)--applicant_merchant;
		partnerSettlementApplicationList	applicant_merchant(平台营销)--applicant_merchant;
		subcontractApplicationListAsApplicationMerchant	application_merchant(__no_group)--application_merchant;
		subcontractApplicationListAsApplicant	applicant(__no_group)--application_merchant;
		notificationListAsReceiver	receiver(商户管理)--receiver;
		notificationListAsSender	sender(商户管理)--receiver;
		eventContractBasicInfoListAsPartyA	party_a(__no_group)--party_a;
		eventContractBasicInfoListAsPartyB	party_b(__no_group)--party_a;
		eventContractPaymentPhaseListAsPayer	payer(__no_group)--payer;
		eventContractPaymentPhaseListAsPayee	payee(__no_group)--payer;
		eventShowAllTypeStepOneList	field_biz_candidate(__no_group)--field_biz_candidate;
		auditRecordList	reviewer(__no_group)--reviewer;
		commentsRecordList	submitter(__no_group)--submitter;
		ccRecordList	cc_to(__no_group)--cc_to;
		todoListList	owner(流程管理)--owner;
		processAuditList	auditor(流程管理)--auditor;
		processApplicationList	owner(流程管理)--owner;
		contractLedgerListAsFirstPartMerchant	first_part_merchant(合同管理)--first_part_merchant;
		contractLedgerListAsSecondPartMerchant	second_part_merchant(合同管理)--first_part_merchant;
		contractRiskList	owner(合同管理)--owner;
		contractReportList	owner(合同管理)--owner;
		contractStatisticReportList	owner(大数据)--owner;
		projectStatisticReportList	owner(大数据)--owner;
		serviceVendorStatisticReportListAsVendor	vendor(大数据)--vendor;
		serviceVendorStatisticReportListAsOwner	owner(大数据)--vendor;
		financialServiceStatisticReportList	owner(大数据)--owner;
		recruitmentRequirementList	employee(人力资源)--employee;
		candidateTalentList	candidate(人力资源)--candidate;
		staffFilesListAsEmployer	employer(人力资源)--employer;
		staffFilesListAsEmployee	employee(人力资源)--employer;
		employeeRelationListAsEmployer	employer(人力资源)--employer;
		employeeRelationListAsEmployee	employee(人力资源)--employer;
		employeeSalaryList	employer(人力资源)--employer;
		employeePerformanceListAsEmployee	employee(人力资源)--employee;
		employeePerformanceListAsEmployer	employer(人力资源)--employee;
		merchantSealList	owner(商户管理)--owner;
		projectAttractInvestmentList	post_by(商户管理)--post_by;
		serivceVendorAttractInvestmentList	post_by(商户管理)--post_by;
		brandAttractInvestmentList	post_by(商户管理)--post_by;
		projectSettlementList	responsible_merchant(商户管理)--responsible_merchant;
		serviceVendorSettlementList	vendor(商户管理)--vendor;
		brandPartnerSettlementList	partner(商户管理)--partner;
		merchantVerificationList	merchant(商户管理)--merchant;
		partnerRecommendationList	partner(平台营销)--partner;
		projectDirectiveListAsResponsibleMerchant	responsible_merchant(项目运营)--responsible_merchant;
		projectDirectiveListAsPostBy	post_by(项目运营)--responsible_merchant;
		projectDailyReportList	reporter(项目运营)--reporter;
		projectProgressReportList	reporter(项目运营)--reporter;
		projectNotificationListAsRecipientMerchant	recipient_merchant(项目运营)--recipient_merchant;
		projectNotificationListAsPostBy	post_by(项目运营)--recipient_merchant;
		designListAsDesigner	designer(项目运营)--designer;
		designListAsReviewer	reviewer(项目运营)--designer;
		constructionSchemaList	post_by(项目运营)--post_by;
		projectBidListAsProjectOwner	project_owner(项目运营)--project_owner;
		projectBidListAsResponsibleMerchant	responsible_merchant(项目运营)--project_owner;
		laborSupervisionListAsEmployee	employee(项目运营)--employee;
		laborSupervisionListAsEmployer	employer(项目运营)--employee;
		safetyInstructionList	post_by(项目运营)--post_by;
		designChangeListAsDesigner	designer(项目运营)--designer;
		designChangeListAsSponsor	sponsor(项目运营)--designer;
		violationListAsResponsibleMerchant	responsible_merchant(项目运营)--responsible_merchant;
		violationListAsImpactMerchant	impact_merchant(项目运营)--responsible_merchant;
		constructionStartWorkingFilesList	upload_user(项目资料)--upload_user;
		qualitiyAcceptanceFilesList	upload_user(项目资料)--upload_user;
		engineeringExperimentFilesList	upload_user(项目资料)--upload_user;
		constructionProcessFilesList	upload_user(项目资料)--upload_user;
		necessarySupplementFilesList	upload_user(项目资料)--upload_user;
		constructionCompletionFilesList	upload_user(项目资料)--upload_user;
		engineeringQualitySupervisionFilesList	upload_user(项目资料)--upload_user;
		projectFilesArchiveList	upload_user(项目资料)--upload_user;
		engineeringQualitySupervisionArchiveList	upload_user(项目资料)--upload_user;
		economicVerificationFormList	service_vendor(财务管理)--service_vendor;
		projectObjectiveList	service_store(财务管理)--service_store;
		projectProgressFundingTrusteeshipPlanListAsOwner	owner(财务管理)--owner;
		projectProgressFundingTrusteeshipPlanListAsServiceStore	service_store(财务管理)--owner;
		fundingCloseTrusteeshipContractListAsFundingVendor	funding_vendor(财务管理)--funding_vendor;
		fundingCloseTrusteeshipContractListAsFundingConsumer	funding_consumer(财务管理)--funding_vendor;
		projectCloseTrusteeshipContractListAsOwner	owner(财务管理)--owner;
		projectCloseTrusteeshipContractListAsStore	store(财务管理)--owner;
		fundingCloseOrganizationList	merchant(财务管理)--merchant;
		taskOrderListAsBuyerMerchant	buyer_merchant(财务管理)--buyer_merchant;
		taskOrderListAsServiceMerchant	service_merchant(财务管理)--buyer_merchant;
		taskOrderListAsStoreMerchant	store_merchant(财务管理)--buyer_merchant;
		workPackageAcceptanceSettlementList	service_vendor(财务管理)--service_vendor;
		projectAcceptanceSettlementList	owner(财务管理)--owner;
	}
} depth=2; isRoot = false

meta{name=debit_card}
debit_card{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: debitCardList,type:merchant;
		string	bank('中国银行|中国工商银行|招商银行|中国农业银行|中国建设银行|中国民生银行|中国光大银行|中信银行|交通银行|兴业银行'), verb: false, required: true,type:string;
		string	bank_address('四川省成都市高新区世纪城路1132号附1号招商银行世纪城支行'), verb: false, required: true,type:string;
		string	number('4111111111111111'), verb: false, required: true,type:string;
		string	account_name('张三'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=merchant_detail}
merchant_detail{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string_gender	gender('$(object)'), verb: false, required: true,type:gender;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: merchantDetailList,type:merchant;
		industry_type	industry_type('$(object)'), verb: false, required: true, referenceBy: merchantDetailList,type:industry_type;
		engineering_type	engineering_type('$(object)'), verb: false, required: true, referenceBy: merchantDetailList,type:engineering_type;
		career_type	career_type('$(object)'), verb: false, required: true, referenceBy: merchantDetailList,type:career_type;
		int	working_years('10'), verb: false, required: true,type:int;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=人力资源, name=industry_type, features=setting, identified_by=code}
industry_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('农、林、牧、渔业|采掘业|制造业|电力、煤气及水生产和供应业|建筑业|地质勘察、水利管理业|交通、仓储和邮电通信业|批发零售贸易、餐饮服务业|金融、保险业|房地产业|社会服务业|卫生、体育和社会福利业|教育、文化艺术及广播电影媒体业|科学研究和综合技术服务业|国家机关、党政机关和社会团体|其它行业'), verb: false, required: true,type:string;
		string	code('NLMY|MINING|MANUFACTURING|POWER_SUPPLY|CONSTRUCTION|GEOLOGY_AND_IRRIGATION|TRANSPORTATION_AND_TELECOMMUNICATIONS|RETAIL_AND_CATERING|FINANCE|REAL ESTATE|SOCIAL_SERVICE|SOCIAL WELFARE|EDUCATION_AND_ART|SCIENCE|GOVERNMENT|OTHER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: industryTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		merchantDetailList	industry_type(__no_group)--industry_type;
		eventFillPersonalDetailList	industry_type(__no_group)--industry_type;
	}
} depth=1; isRoot = false

meta{vg4platform=人力资源, name=engineering_type, features=setting, identified_by=code}
engineering_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('建筑|结构|装修|安装|给排水|电气|弱电智能|空调通风|燃气|暖气|园建|绿化|其它'), verb: false, required: true,type:string;
		string	code('JZ'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: engineeringTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		merchantDetailList	engineering_type(__no_group)--engineering_type;
		workPackageList	engineering_type(__no_group)--engineering_type;
		eventFillPersonalDetailList	engineering_type(__no_group)--engineering_type;
	}
} depth=1; isRoot = false

meta{vg4platform=人力资源, name=career_type, features=setting, identified_by=code}
career_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('老板 .(BOSS)|高级管理 . (金领)|高级经理 . (金领)|工程管理 . (白领)|行政 . (白领)|销售 . (白领)|技术 . (白领)|专业 . (白领)|普通员工|技工 . (蓝领)|普通工人|其它'), verb: false, required: true,type:string;
		string	code('BOSS|SENIOR_EXECUTIVE|SENIOR_MANAGEMENT|ENGINEERING_MANAGEMENT|ADMINISTRATION|TECHNOLOGY|PROFESSIONAL|NORMAL|BLUE_COLLAR|OTHER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: careerTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(6){
		merchantDetailList	career_type(__no_group)--career_type;
		personalEmplacementApplicationList	career_type(__no_group)--career_type;
		subcontractApplicationList	career_type(__no_group)--career_type;
		eventApplyPersonalEmplacementList	career_type(__no_group)--career_type;
		eventFillPersonalDetailList	career_type(__no_group)--career_type;
		eventSubcontractApplicationList	application_type(__no_group)--application_type;
	}
} depth=1; isRoot = false

meta{name=role, features=status, identified_by=code}
role{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('管理员|财务|员工'), verb: false, required: true,type:string;
		string	code('ADMIN|FINANCE|WORKER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: roleList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		employeeNominationList	role(__no_group)--role;
		eventAddEmployeeList	role(__no_group)--role;
	}
} depth=1; isRoot = false

meta{name=job, features=setting, identified_by=code}
job{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('老板|瓦工|木工|项目经理|项目监理|项目造价师'), verb: false, required: true,type:string;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: jobList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: jobList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		employeeNominationList	job(__no_group)--job;
		eventAddEmployeeList	job(__no_group)--job;
	}
} depth=3; isRoot = false

meta{vg4platform=人力资源, vg4employer=人力资源, name=employee_nomination, vg4employee=人力资源}
employee_nomination{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('张晓明,天水市喜来登,业主代表'), verb: false, required: true,type:string;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: employeeNominationListAsEmployee,type:merchant;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: employeeNominationListAsEmployer,type:merchant;
		date	start_date('2100-01-01'), verb: false, required: true,type:date;
		date	end_date('2100-01-01'), verb: false, required: true,type:date;
		role	role('$(object)'), verb: false, required: true, referenceBy: employeeNominationList,type:role;
		job	job('$(object)'), verb: false, required: true, referenceBy: employeeNominationList,type:job;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeeNominationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(21){
		contractTemplateList	submitter(__no_group)--submitter;
		standardContractList	submitter(__no_group)--submitter;
		supplementaryContractList	submitter(__no_group)--submitter;
		merchantActiveNominationList	nomination(__no_group)--nomination;
		licenseList	authenticator(__no_group)--authenticator;
		projectNominationList	worker(__no_group)--worker;
		dailyTaskTemplateList	creator(__no_group)--creator;
		projectMaterialList	material_submitter(__no_group)--material_submitter;
		afterSalesList	creator(__no_group)--creator;
		compensationApplicationList	submitter(__no_group)--submitter;
		recommendationList	applicant_employee(__no_group)--applicant_employee;
		customerProjectApplicationList	applicant_employee(__no_group)--applicant_employee;
		partnerSettlementApplicationList	applicant_employee(__no_group)--applicant_employee;
		eventProjectWorkPositionList	employee(__no_group)--employee;
		eventProjectPenaltiesList	penalties_executor(__no_group)--penalties_executor;
		processList	creator(__no_group)--creator;
		todoListList	creator(__no_group)--creator;
		processApplicationList	creator(__no_group)--creator;
		staffFilesList	employment(__no_group)--employment;
		employeeRelationList	employment(__no_group)--employment;
		economicVerificationFormList	responsible_employee(__no_group)--responsible_employee;
	}
} depth=4; isRoot = false

meta{name=task_status, identified_by=code, features=status}
task_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待执行|进行中|待验收|已完成'), verb: false, required: true,type:string;
		string	code('Pending|Processing|ReadyForAcceptance|Completed'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: taskStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		taskList	task_status(__no_group)--task_status;
	}
} depth=1; isRoot = false

meta{name=task}
task{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('任务名称'), verb: false, required: true,type:string;
		string	content('任务内容'), verb: false, required: true,type:string;
		task_status	task_status('$(object)'), verb: false, required: true, referenceBy: taskList,type:task_status;
		work_package	work_package('$(object)'), verb: false, required: true, referenceBy: taskList,type:work_package;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		standardContractList	task(__no_group)--task;
		laborSupervisionList	work_task(__no_group)--work_task;
		taskOrderList	task(__no_group)--task;
	}
} depth=5; isRoot = false

meta{name=work_package, vg4project=项目运营, vg4vendor=项目运营}
work_package{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('工作包名称'), verb: false, required: true,type:string;
		string	content('工作包的内容'), verb: false, required: true,type:string;
		merchant	vendor('$(object)'), verb: false, required: true, referenceBy: workPackageList,type:merchant;
		work_package_type	work_package_type('$(object)'), verb: false, required: true, referenceBy: workPackageList,type:work_package_type;
		engineering_type	engineering_type('$(object)'), verb: false, required: true, referenceBy: workPackageList,type:engineering_type;
		work_status	work_status('$(object)'), verb: false, required: true, referenceBy: workPackageList,type:work_status;
		project	project('$(object)'), verb: false, required: true, referenceBy: workPackageList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(9){
		standardContractList	work_package(__no_group)--work_package;
		taskList	work_package(__no_group)--work_package;
		projectNominationList	work_package(__no_group)--work_package;
		laborDisputeList	work_package(__no_group)--work_package;
		eventProjectWorkPositionList	work_package(__no_group)--work_package;
		eventLaborDisputeList	work_package(__no_group)--work_package;
		designList	work_package(__no_group)--work_package;
		violationList	related_work_package(__no_group)--related_work_package;
		workPackageAcceptanceSettlementList	work_package(__no_group)--work_package;
	}
} depth=4; isRoot = false

meta{name=work_status, identified_by=code, features=status}
work_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待执行|进行中|待验收|已完成'), verb: false, required: true,type:string;
		string	code('Pending|Processing|ReadyForAcceptance|Completed'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: workStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		workPackageList	work_status(__no_group)--work_status;
	}
} depth=1; isRoot = false

meta{name=work_package_type, group_by=category, features=setting, identified_by=code}
work_package_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('装修土建|墙地砖铺装|石材安装|木工基装|硬装固装|油漆涂料|不锈钢玻璃|水电安装|装饰软装|门窗幕墙|厨房卫浴|机电安装|弱电智能|钢结构安装|环境园林|广告装潢|设备租赁|家居零售|保洁清洁|安全文明维护|其它|项目管理|项目监理|项目审计|其它|家装设计|工装设计|勘察设计|其它'), verb: false, required: true,type:string;
		string	category('项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目工程包|项目管理包|项目管理包|项目管理包|项目管理包|项目设计包|项目设计包|项目设计包|项目设计包'), verb: false, required: true,type:string;
		string	code('ZXTJ'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: workPackageTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		workPackageList	work_package_type(__no_group)--work_package_type;
		subcontractApplicationList	work_package_type(__no_group)--work_package_type;
		eventSubcontractApplicationList	work_package_type(__no_group)--work_package_type;
	}
} depth=1; isRoot = false

meta{vg4store=项目运营, vg4platform=项目运营, vg4partner=项目运营, name=project, vg4project_owner=home/我的项目}
project{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('大邑雅丽泰办公大楼装修工程'), verb: false, required: true,type:string;
		string	description('项目施工描述信息'), verb: false, required: true,type:string;
		string	location('成都市大邑县兴城大道（工业园区）'), verb: false, required: true,type:string;
		double	project_area('28800080.00'), verb: false, required: true,type:double;
		money	project_rough_budget('$100000000.00'), verb: false, required: true,type:money;
		merchant	project_owner('$(object)'), verb: false, required: true, referenceBy: projectListAsProjectOwner,type:merchant;
		merchant	store('$(object)'), verb: false, required: true, referenceBy: projectListAsStore,type:merchant;
		merchant	partner('$(object)'), verb: false, required: false, referenceBy: projectListAsPartner,type:merchant;
		project_type	project_type('$(object)'), verb: false, required: false, referenceBy: projectList,type:project_type;
		project_service_type	project_service_type('$(object)'), verb: false, required: true, referenceBy: projectList,type:project_service_type;
		project_phase	project_phase('$(object)'), verb: false, required: true, referenceBy: projectList,type:project_phase;
		working_status	design_status('$(object)'), verb: false, required: false, referenceBy: projectListAsDesignStatus,type:working_status;
		working_status	construction_status('$(object)'), verb: false, required: false, referenceBy: projectListAsConstructionStatus,type:working_status;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(54){
		standardContractList	project(合同管理)--project;
		workPackageList	project(项目运营)--project;
		projectImageList	project(项目运营)--project;
		projectNominationList	project(人力资源)--project;
		projectProgressList	project(项目运营)--project;
		projectMaterialTypeConfigurationList	project(__no_group)--project;
		projectMaterialList	project(项目运营)--project;
		yourongProjectBookList	project(项目运营)--project;
		projectAcceptanceList	project(__no_group)--project;
		afterSalesList	project(售后管理)--project;
		projectPenaltiesList	project(项目运营)--project;
		laborWageManagementSheetList	project(人力资源)--project;
		laborDisputeList	project(人力资源)--project;
		laborRecordList	project(__no_group)--project;
		workOvertimeRecordList	project(__no_group)--project;
		projectReportList	project(项目运营)--project;
		projectCommandList	project(__no_group)--project;
		loanFundList	project(__no_group)--project;
		loanApplicationList	loan_project(金融服务)--loan_project;
		loanContractList	project(__no_group)--project;
		compensationApplicationList	project(项目运营)--project;
		compensationInvestigationList	project(项目运营)--project;
		compensationResultList	project(项目运营)--project;
		materialPreservedSampleList	project(项目运营)--project;
		materialBidSampleList	project(项目运营)--project;
		materialRecordList	project(项目运营)--project;
		materialChangeList	project(项目运营)--project;
		materialAcceptanceApplicationList	project(__no_group)--project;
		subcontractApplicationList	project(__no_group)--project;
		notificationList	project(__no_group)--project;
		eventSubcontractApplicationList	project(__no_group)--project;
		projectStatisticReportList	project(__no_group)--project;
		projectAttractInvestmentList	project(商户管理)--project;
		projectSettlementList	project(商户管理)--project;
		projectDailyReportList	project(项目运营)--project;
		projectProgressReportList	project(项目运营)--project;
		designList	project(项目运营)--project;
		constructionSchemaList	project(项目运营)--project;
		designChangeList	project(__no_group)--project;
		violationList	project(项目运营)--project;
		projectFundingList	project(项目运营)--project;
		constructionStartWorkingFilesList	project(项目资料)--project;
		qualitiyAcceptanceFilesList	project(项目资料)--project;
		engineeringExperimentFilesList	project(项目资料)--project;
		constructionProcessFilesList	project(项目资料)--project;
		necessarySupplementFilesList	project(项目资料)--project;
		constructionCompletionFilesList	project(项目资料)--project;
		engineeringQualitySupervisionFilesList	project(项目资料)--project;
		projectFilesArchiveList	project(项目资料)--project;
		engineeringQualitySupervisionArchiveList	project(项目资料)--project;
		projectObjectiveList	project(财务管理)--project;
		projectProgressFundingTrusteeshipPlanList	project(财务管理)--project;
		projectCloseTrusteeshipContractList	project(财务管理)--project;
		projectAcceptanceSettlementList	project(财务管理)--project;
	}
} depth=3; isRoot = false

meta{name=project_image, vg4project=项目运营}
project_image{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('|正面|漏水处墙壁图'), verb: false, required: false,type:string;
		string_image	image('project.jpg'), verb: false, required: true,type:string_image;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectImageList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=project_type, group_by=category, features=setting, identified_by=code}
project_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('精装楼盘装修工程|别墅住宅精装工程|大平层豪宅精装工程|传统家装精装工程|酒店会所装修工程|购物空间装修工程|教育机构装修工程|医疗机构装修工程|商业展示装修工程|办公空间装修工程|餐饮空间装修工程|休闲空间装修工程|娱乐空间装修工程|文旅艺术装修工程|运动空间装修工程|旅游度假装修工程|其它装修工程|钢结构安装工程|机电安装工程|弱电智能安装工程|其它安装工程|市政装修工程|园林绿化工程'), verb: false, required: true,type:string;
		string	category('装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|装修工程|安装工程|安装工程|安装工程|安装工程|市政园林工程|市政园林工程'), verb: false, required: true,type:string;
		string	code('JZLP'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectList	project_type(__no_group)--project_type;
	}
} depth=1; isRoot = false

meta{name=project_service_type, identified_by=code, features=status}
project_service_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('设计托管|实施托管|设计实施托管'), verb: false, required: true,type:string;
		string	code('Design|Construction|DesignandConstruction'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectServiceTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectList	project_service_type(__no_group)--project_service_type;
	}
} depth=1; isRoot = false

meta{name=project_phase, identified_by=code, features=status}
project_phase{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('意向阶段|EPC托管|设计准备|设计招标|设计管理实施|执行准备|执行招标|工程实施|验收移交|项目售后'), verb: false, required: true,type:string;
		string	code('INTENTION|EPC_HOSTING|DESIGN_PREPARATION|DESIGN_RFP|DESIGN_EXECUTING|CONSTRUCTING_PREPARATION|CONSTRUCTION_RFP|CONSTRUCTING|ACCEPTANCE|MAINTENANCE'), verb: false, required: true,type:string;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectPhaseList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		projectList	project_phase(__no_group)--project_phase;
		projectProgressList	project_phase(__no_group)--project_phase;
	}
} depth=1; isRoot = false

meta{name=working_status, identified_by=code, features=status}
working_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('无|计划中|执行中|停工|待验收|质保中|已完成'), verb: false, required: true,type:string;
		string	code('NONE|PLANNING|PROCESSING|PENDING|READY_ACCEPTANCE|MAINTAINING|COMPLETED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: workingStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		projectListAsDesignStatus	design_status(__no_group)--design_status;
		projectListAsConstructionStatus	construction_status(__no_group)--design_status;
		designList	design_status(__no_group)--design_status;
	}
} depth=1; isRoot = false

meta{name=project_organization_type, group_by=category, identified_by=code, features=setting,tree}
project_organization_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('甲方代表|品牌代表|优荣平台|造价咨询|优荣招标|项目设计|项目经理|项目监理|项目审计|分包服务商|分包负责人|分包施工员|BIM技术'), verb: false, required: true,type:string;
		string	code('PROPERTY_OWNER|BRADN_REP|PLATFORM|CONSTRUCTION_CONSULTANT|BIDDING|DESIGN|PROJECT_MANAGER|PROJECT_SUPERVISOR|PROJECT_AUDITOR|SERVICE_VENDOR|SERVICE_ADMIN|SERVICE_WORKER|BIM_TECH'), verb: false, required: true,type:string;
		string	category('业主|品牌方|优荣平台|优荣平台|优荣平台|设计|项目管理|项目管理|项目管理|平行分包商|平行分包商|平行分包商'), verb: false, required: true,type:string;
		int	display_order('1|2|3|500'), verb: false, required: true,type:int;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectOrganizationTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		projectNominationList	type(__no_group)--type;
		eventProjectWorkPositionList	project_job(__no_group)--project_job;
	}
} depth=1; isRoot = false

meta{name=project_nomination, vg4project=人力资源}
project_nomination{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('张晓曦-甲方代表'), verb: false, required: true,type:string;
		project_organization_type	type('$(object)'), verb: false, required: true, referenceBy: projectNominationList,type:project_organization_type;
		employee_nomination	worker('$(object)'), verb: false, required: true, referenceBy: projectNominationList,type:employee_nomination;
		project_role	project_role('$(object)'), verb: false, required: true, referenceBy: projectNominationList,type:project_role;
		bool	active('true|false'), verb: false, required: true,type:bool;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectNominationList,type:project;
		work_package	work_package('$(object)'), verb: false, required: false, referenceBy: projectNominationList,type:work_package;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(22){
		contractReviewRecordList	reviewer(__no_group)--reviewer;
		contractCommentsRecordList	submitter(__no_group)--submitter;
		projectMaterialReviewRecordList	reviewer(__no_group)--reviewer;
		projectMaterialCommentsRecordList	submitter(__no_group)--submitter;
		projectAcceptanceList	application_unit(项目运营)--application_unit;
		afterSalesList	solver(__no_group)--solver;
		laborWageManagementSheetListAsContractPaymentManager	contract_payment_manager(__no_group)--contract_payment_manager;
		laborWageManagementSheetListAsPlatformLaborManager	platform_labor_manager(__no_group)--contract_payment_manager;
		laborWageManagementSheetListAsPaymentManager	payment_manager(__no_group)--contract_payment_manager;
		laborDisputeList	applicant(__no_group)--applicant;
		laborRecordList	project_nomination(__no_group)--project_nomination;
		workOvertimeRecordList	project_nomination(__no_group)--project_nomination;
		projectReportList	submitter(__no_group)--submitter;
		projectCommandAssignmentList	reciever(__no_group)--reciever;
		materialPreservedSampleList	material_manager(__no_group)--material_manager;
		materialBidSampleList	material_manager(__no_group)--material_manager;
		materialChangeList	applicant(__no_group)--applicant;
		materialAcceptanceApplicationList	auditor(__no_group)--auditor;
		eventMaterialChangeInfoList	applicant(__no_group)--applicant;
		eventMaterialAcceptanceBasicInfoList	auditor(__no_group)--auditor;
		eventMaterialPreservedInfoList	material_manager(__no_group)--material_manager;
		eventLaborDisputeList	applicant(__no_group)--applicant;
	}
} depth=5; isRoot = false

meta{name=project_role, features=status, identified_by=code}
project_role{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('负责人|管理人员|员工'), verb: false, required: true,type:string;
		string	code('PERSON_IN_CHARGE|ADMIN|WORKER'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectRoleList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		projectNominationList	project_role(__no_group)--project_role;
		eventProjectWorkPositionList	project_role(__no_group)--project_role;
	}
} depth=1; isRoot = false

meta{name=project_progress_status, features=status, identified_by=code}
project_progress_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('计划中|执行中|已执行|结算中|已结算|延迟|告警'), verb: false, required: true,type:string;
		string	code('PLANNED|EXECUTING|ACCEPTED|PENDING_ON_SETTLEMENT|SETTLEMENT|DELAYED|WARNNING'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectProgressStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		projectProgressList	status(__no_group)--status;
		eventProjectProgressList	project_progress_status(__no_group)--project_progress_status;
	}
} depth=1; isRoot = false

meta{name=project_progress, vg4project=项目运营}
project_progress{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('合同订立|第一阶段完成'), verb: false, required: true,type:string;
		string_longtext	brief('text()'), verb: false, required: true,type:string_longtext;
		project_progress_status	status('$(object)'), verb: false, required: true, referenceBy: projectProgressList,type:project_progress_status;
		date	plan_start_date('2100-01-01'), verb: false, required: false,type:date;
		date	actual_start_date('2100-01-01'), verb: false, required: false,type:date;
		date	plan_finish_date('2100-01-01'), verb: false, required: false,type:date;
		date	actual_finish_date('2100-01-01'), verb: false, required: false,type:date;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectProgressList,type:project;
		project_phase	project_phase('$(object)'), verb: false, required: true, referenceBy: projectProgressList,type:project_phase;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		contractPayItemList	project_progress(__no_group)--project_progress;
		laborWageManagementSheetList	project_progress(__no_group)--project_progress;
		materialRecordList	planned_approach_phase(__no_group)--planned_approach_phase;
		eventContractPaymentPhaseList	project_progress(__no_group)--project_progress;
	}
} depth=4; isRoot = false

meta{name=daily_task_category, features=status, identified_by=code}
daily_task_category{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目信息|项目指令|项目报告|项目进度|项目通知|设计管理|项目验收|质量管理|业务往来|技术交底|施工方案|造价咨询|项目招标|劳动监督|安全文明|设计变更|违约处罚|材料管理|售后服务|先行赔付|金融服务|BIM应用|法律合规|教育培训'), verb: false, required: true,type:string;
		string	code('INFO|DIRECTIVE|REPORT|PROGRESS|NOTICE|DESIGN|ACCEPTANCE|QUALITY|ENGINEER_REPLY|TECH_DISCLOSURE|CONSTRUCTION_DEPLOY|COST|BIDDING|LABOR|SECURE|CHANGE_DESIGN|VIOLATION|MATERIAL|AFTER_SALE|COMPENSATION|FINANCIAL_SERVICE|BIM_APPLICATION|LAW|EDUCATION'), verb: false, required: true,type:string;
		int	display_order('1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21'), verb: false, required: true,type:int;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: dailyTaskCategoryList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		dailyTaskTypeList	category(__no_group)--category;
	}
} depth=1; isRoot = false

meta{name=daily_task_type, group_by=category, features=setting}
daily_task_type{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目工程概况|品牌方信息|营业厅信息|服务商信息|业主指令|项目经理指令|项目监理指令|平台指令|施工日报|监理日报|项目经理日报|施工周报|监理周报|项目经理周报|施工月报|监理月报|项目经理月报|第一阶段：基础验收|第二阶段：隐蔽验收|第三阶段：基装验收|第四阶段：竣工前验收|第五阶段：竣工验收|第六阶段：交付验收|经理通知|监理通知|平台通知|业主通知|行业部门通知|其它|设计咨询|概念设计|方案设计|施工图设计|设计售后|项目进度验收|分部分项验收|工程包验收|资料收集|决策分析|投标复查|合同技术复查|开工前准备|分部分项质量验收|工序质量验收|质量事故处理|竣工检验|竣工资料|工程联系回复|设计图交底|施工合同交底|施工组织设计交底|分部分项技术交底|安全技术交底|施工部署计划|具体部署|实施方案|进度方案|施工平面|风险管控|技术组织|专项方案|项目估算|项目概算|项目控价|其它|设计招标|实施招标|悬赏招标|劳务监督管理|劳务工资发放|劳务纠纷处理|管理依据|安全措施规范|管理目标|管理体系|管理制度|教育培训|定期巡查|防火管理|用电管理|高空管理|事故处理|上岗检查|文明施工|安全惩罚|部门要求变更|审图要求变更|施工设计变更|项目定为变更|降低成本变更|进度滞后处罚|质量违约处罚|安全文明处罚|其它违约处罚|材料管理原则|投标材料封存|进场材料验收|进场材料封存|材料变更|售后客服|售后维修|合同纠纷|工程事故|劳资纠纷|委贷资金|贷款申请|贷款合同|当日劳务录入'), verb: false, required: true,type:string;
		string	code('INFO_SUMMARY|INFO_BRAND|INFO_STORE|INFO_VENDOR|DIRECTIVE_PROPRIETOR|DIRECTIVE_MANAGER|DIRECTIVE_SUPERVISOR|DIRECTIVE_PLATFORM|REPORT_CONSTRUCTION_DAILY|REPORT_SUPERVISOR_DAILY|REPORT_MANAGER_DAILY|REPORT_CONSTRUCTION_WEEKLY|REPORT_SUPERVISOR_WEEKLY|REPORT_MANAGER_WEEKLY|REPORT_CONSTRUCTION_MONTHLY|REPORT_SUPERVISOR_MONTHLY|REPORT_MANAGER_MONTHLY|PROGRESS_PHASE1|PROGRESS_PHASE2|PROGRESS_PHASE3|PROGRESS_PHASE4|PROGRESS_PHASE5|PROGRESS_PHASE6|NOTICE_MANAGER|NOTICE_SUPERVISOR|NOTICE_PLATFORM|NOTICE_PROPRIETOR|NOTICE_DEPARTMENT|NOTICE_OTHER|DESIGN_CONSULT|DESIGN_CONCEPT|DESIGN_SCHEMA|DESIGN_CONSTRUCTION|DESIGN_AFTER_SALE|ACCEPTANCE_PROGRESS|ACCEPTANCE_TASK|ACCEPTANCE_WORKPACKAGE|QUALITY_COLLECTION|QUALITY_ANALYSIS|QUALITY_BID_CHECK|QUALITY_TECH_REVIEW|QUALITY_START_PREPARE|QUALITY_DIVISION_ACCEPTANCE|QUALITY_PROCEDURE|QUALITY_ACCIDENT|QUALITY_COMPLETION_CHECK|QUALITY_COMPLETION_MATERIAL|ENGINEER_REPLY|TECH_DISCLOSURE_DESIGN|TECH_DISCLOSURE_CONSTRUCTION|TECH_DISCLOSURE_ORGANIZATION|TECH_DISCLOSURE_DIVISION|TECH_DISCLOSURE_SECURE|TECH_DISCLOSURE_DEPLOY|CONSTRUCTION_DEPLOY|CONSTRUCTION_SCHEMA|CONSTRUCTION_PROGRESS|CONSTRUCTION_CONSTRUCTION_PLANE|CONSTRUCTION_RISK|CONSTRUCTION_TECH_ORG|CONSTRUCTION_SPECIAL_SCHEMA|COST_EVALUATION|COST_ESTIMATE|COST_CONTROL|COST_OTHER|BID_DESIGN|BID_CONSTRUCTION|BID_BOUNUS|LABOR_SUPERVISOR|LABOR_WAGE|LABOR_DISPUTE|SECURE_GIST|SECURE_STANDARD|SECURE_TARGET|SECURE_SYSTEM|SECURE_INSTITUTION|SECURE_EDUCATION|SECURE_REGULAR|SECURE_FIRE|SECURE_ELECTRIC|SECURE_HIGH|SECURE_ACCIDENT|SECURE_CHECK|SECURE_CONSTRUCTION|SECURE_VIOLATION|CHANGE_DESIGN_DEPARTMENT|CHANGE_DESIGN_REVIEW|CHANGE_DESIGN_CONSTRUCTION|CHANGE_DESIGN_POSITION|CHANGE_DESIGN_COST|VIOLATION_PROGRESS_DELAY|VIOLATION_QUALITY|VIOLATION_SECURE|VIOLATION_OTHER|MATERIAL_PRINCIPAL|MATERIAL_BID|MATERIAL_ACCEPTANCE|MATERIAL_SEAL_UP|MATERIAL_CHANGE|AFTER_SALE_DESKTOP|AFTER_SALE_REPAIR|COMPENSATION_CONTRACT|COMPENSATION_CONSTRUCTION|COMPENSATION_LABOR|LOAN_FUND|LOAN_APPLICATION|LOAN_CONTRACT|LABOR_RECORD'), verb: false, required: true,type:string;
		daily_task_category	category('$(object)'), verb: false, required: true, referenceBy: dailyTaskTypeList,type:daily_task_category;
		int	display_order('1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|500'), verb: false, required: true,type:int;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: dailyTaskTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(15){
		dailyTaskSecondTypeList	parent(__no_group)--parent;
		dailyTaskTemplateList	daily_task_type(__no_group)--daily_task_type;
		projectMaterialList	daily_task_type(__no_group)--daily_task_type;
		projectAcceptanceList	daily_task_type(__no_group)--daily_task_type;
		afterSalesList	daily_task_type(__no_group)--daily_task_type;
		projectPenaltiesList	daily_task_type(__no_group)--daily_task_type;
		laborWageManagementSheetList	daily_task_type(__no_group)--daily_task_type;
		projectReportList	daily_task_type(__no_group)--daily_task_type;
		projectCommandList	daily_task_type(__no_group)--daily_task_type;
		materialPreservedSampleList	daily_task_type(__no_group)--daily_task_type;
		materialBidSampleList	daily_task_type(__no_group)--daily_task_type;
		materialRecordList	daili_task_type(__no_group)--daili_task_type;
		materialChangeList	daili_task_type(__no_group)--daili_task_type;
		eventProjectCommandList	directive_type(__no_group)--directive_type;
		eventAcceptanceApplicationList	acceptance_type(__no_group)--acceptance_type;
	}
} depth=2; isRoot = false

meta{name=daily_task_second_type, group_by=category, features=setting}
daily_task_second_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目工程概况|品牌方信息|营业厅信息|服务商信息|业主指令|项目经理指令|项目监理指令|平台指令|施工日报|监理日报|项目经理日报|施工周报|监理周报|项目经理周报|施工月报|监理月报|项目经理月报|第一阶段：基础验收|第二阶段：隐蔽验收|第三阶段：基装验收|第四阶段：竣工前验收|第五阶段：竣工验收|第六阶段：交付验收|经理通知|监理通知|平台通知|业主通知|行业部门通知|其它|设计咨询|概念设计|方案设计|施工图设计|设计售后|项目进度验收|分部分项验收|工程包验收|资料收集|决策分析|投标复查|合同技术复查|开工前准备|分部分项质量验收|工序质量验收|质量事故处理|竣工检验|竣工资料|工程联系回复|设计图交底|施工合同交底|施工组织设计交底|分部分项技术交底|安全技术交底|施工部署计划|具体部署|实施方案|进度方案|施工平面|风险管控|技术组织|专项方案|项目估算|项目概算|项目控价|其它|设计招标|实施招标|悬赏招标|劳务监督管理|劳务工资发放|劳务纠纷处理|管理依据|安全措施规范|管理目标|管理体系|管理制度|教育培训|定期巡查|防火管理|用电管理|高空管理|事故处理|上岗检查|文明施工|安全惩罚|部门要求变更|审图要求变更|施工设计变更|项目定为变更|降低成本变更|进度滞后处罚|质量违约处罚|安全文明处罚|其它违约处罚|材料管理原则|投标材料封存|进场材料验收|进场材料封存|材料变更|售后客服|售后维修|合同纠纷|工程事故|劳资纠纷|委贷资金|贷款申请|贷款合同|当日劳务录入'), verb: false, required: true,type:string;
		string	code('INFO_SUMMARY|INFO_BRAND|INFO_STORE|INFO_VENDOR|DIRECTIVE_PROPRIETOR|DIRECTIVE_MANAGER|DIRECTIVE_SUPERVISOR|DIRECTIVE_PLATFORM|REPORT_CONSTRUCTION_DAILY|REPORT_SUPERVISOR_DAILY|REPORT_MANAGER_DAILY|REPORT_CONSTRUCTION_WEEKLY|REPORT_SUPERVISOR_WEEKLY|REPORT_MANAGER_WEEKLY|REPORT_CONSTRUCTION_MONTHLY|REPORT_SUPERVISOR_MONTHLY|REPORT_MANAGER_MONTHLY|PROGRESS_PHASE1|PROGRESS_PHASE2|PROGRESS_PHASE3|PROGRESS_PHASE4|PROGRESS_PHASE5|PROGRESS_PHASE6|NOTICE_MANAGER|NOTICE_SUPERVISOR|NOTICE_PLATFORM|NOTICE_PROPRIETOR|NOTICE_DEPARTMENT|NOTICE_OTHER|DESIGN_CONSULT|DESIGN_CONCEPT|DESIGN_SCHEMA|DESIGN_CONSTRUCTION|DESIGN_AFTER_SALE|ACCEPTANCE_PROGRESS|ACCEPTANCE_TASK|ACCEPTANCE_WORKPACKAGE|QUALITY_COLLECTION|QUALITY_ANALYSIS|QUALITY_BID_CHECK|QUALITY_TECH_REVIEW|QUALITY_START_PREPARE|QUALITY_DIVISION_ACCEPTANCE|QUALITY_PROCEDURE|QUALITY_ACCIDENT|QUALITY_COMPLETION_CHECK|QUALITY_COMPLETION_MATERIAL|ENGINEER_REPLY|TECH_DISCLOSURE_DESIGN|TECH_DISCLOSURE_CONSTRUCTION|TECH_DISCLOSURE_ORGANIZATION|TECH_DISCLOSURE_DIVISION|TECH_DISCLOSURE_SECURE|TECH_DISCLOSURE_DEPLOY|CONSTRUCTION_DEPLOY|CONSTRUCTION_SCHEMA|CONSTRUCTION_PROGRESS|CONSTRUCTION_CONSTRUCTION_PLANE|CONSTRUCTION_RISK|CONSTRUCTION_TECH_ORG|CONSTRUCTION_SPECIAL_SCHEMA|COST_EVALUATION|COST_ESTIMATE|COST_CONTROL|COST_OTHER|BID_DESIGN|BID_CONSTRUCTION|BID_BOUNUS|LABOR_SUPERVISOR|LABOR_WAGE|LABOR_DISPUTE|SECURE_GIST|SECURE_STANDARD|SECURE_TARGET|SECURE_SYSTEM|SECURE_INSTITUTION|SECURE_EDUCATION|SECURE_REGULAR|SECURE_FIRE|SECURE_ELECTRIC|SECURE_HIGH|SECURE_ACCIDENT|SECURE_CHECK|SECURE_CONSTRUCTION|SECURE_VIOLATION|CHANGE_DESIGN_DEPARTMENT|CHANGE_DESIGN_REVIEW|CHANGE_DESIGN_CONSTRUCTION|CHANGE_DESIGN_POSITION|CHANGE_DESIGN_COST|VIOLATION_PROGRESS_DELAY|VIOLATION_QUALITY|VIOLATION_SECURE|VIOLATION_OTHER|MATERIAL_PRINCIPAL|MATERIAL_BID|MATERIAL_ACCEPTANCE|MATERIAL_SEAL_UP|MATERIAL_CHANGE|AFTER_SALE_DESKTOP|AFTER_SALE_REPAIR|COMPENSATION_CONTRACT|COMPENSATION_CONSTRUCTION|COMPENSATION_LABOR|LOAN_FUND|LOAN_APPLICATION|LOAN_CONTRACT|LABOR_RECORD'), verb: false, required: true,type:string;
		daily_task_type	parent('$(object)'), verb: false, required: true, referenceBy: dailyTaskSecondTypeList,type:daily_task_type;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: dailyTaskSecondTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		dailyTaskThirdTypeList	parent(__no_group)--parent;
	}
} depth=3; isRoot = false

meta{name=daily_task_third_type, group_by=category, features=setting}
daily_task_third_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目工程概况|品牌方信息|营业厅信息|服务商信息|业主指令|项目经理指令|项目监理指令|平台指令|施工日报|监理日报|项目经理日报|施工周报|监理周报|项目经理周报|施工月报|监理月报|项目经理月报|第一阶段：基础验收|第二阶段：隐蔽验收|第三阶段：基装验收|第四阶段：竣工前验收|第五阶段：竣工验收|第六阶段：交付验收|经理通知|监理通知|平台通知|业主通知|行业部门通知|其它|设计咨询|概念设计|方案设计|施工图设计|设计售后|项目进度验收|分部分项验收|工程包验收|资料收集|决策分析|投标复查|合同技术复查|开工前准备|分部分项质量验收|工序质量验收|质量事故处理|竣工检验|竣工资料|工程联系回复|设计图交底|施工合同交底|施工组织设计交底|分部分项技术交底|安全技术交底|施工部署计划|具体部署|实施方案|进度方案|施工平面|风险管控|技术组织|专项方案|项目估算|项目概算|项目控价|其它|设计招标|实施招标|悬赏招标|劳务监督管理|劳务工资发放|劳务纠纷处理|管理依据|安全措施规范|管理目标|管理体系|管理制度|教育培训|定期巡查|防火管理|用电管理|高空管理|事故处理|上岗检查|文明施工|安全惩罚|部门要求变更|审图要求变更|施工设计变更|项目定为变更|降低成本变更|进度滞后处罚|质量违约处罚|安全文明处罚|其它违约处罚|材料管理原则|投标材料封存|进场材料验收|进场材料封存|材料变更|售后客服|售后维修|合同纠纷|工程事故|劳资纠纷|委贷资金|贷款申请|贷款合同|当日劳务录入'), verb: false, required: true,type:string;
		string	code('INFO_SUMMARY|INFO_BRAND|INFO_STORE|INFO_VENDOR|DIRECTIVE_PROPRIETOR|DIRECTIVE_MANAGER|DIRECTIVE_SUPERVISOR|DIRECTIVE_PLATFORM|REPORT_CONSTRUCTION_DAILY|REPORT_SUPERVISOR_DAILY|REPORT_MANAGER_DAILY|REPORT_CONSTRUCTION_WEEKLY|REPORT_SUPERVISOR_WEEKLY|REPORT_MANAGER_WEEKLY|REPORT_CONSTRUCTION_MONTHLY|REPORT_SUPERVISOR_MONTHLY|REPORT_MANAGER_MONTHLY|PROGRESS_PHASE1|PROGRESS_PHASE2|PROGRESS_PHASE3|PROGRESS_PHASE4|PROGRESS_PHASE5|PROGRESS_PHASE6|NOTICE_MANAGER|NOTICE_SUPERVISOR|NOTICE_PLATFORM|NOTICE_PROPRIETOR|NOTICE_DEPARTMENT|NOTICE_OTHER|DESIGN_CONSULT|DESIGN_CONCEPT|DESIGN_SCHEMA|DESIGN_CONSTRUCTION|DESIGN_AFTER_SALE|ACCEPTANCE_PROGRESS|ACCEPTANCE_TASK|ACCEPTANCE_WORKPACKAGE|QUALITY_COLLECTION|QUALITY_ANALYSIS|QUALITY_BID_CHECK|QUALITY_TECH_REVIEW|QUALITY_START_PREPARE|QUALITY_DIVISION_ACCEPTANCE|QUALITY_PROCEDURE|QUALITY_ACCIDENT|QUALITY_COMPLETION_CHECK|QUALITY_COMPLETION_MATERIAL|ENGINEER_REPLY|TECH_DISCLOSURE_DESIGN|TECH_DISCLOSURE_CONSTRUCTION|TECH_DISCLOSURE_ORGANIZATION|TECH_DISCLOSURE_DIVISION|TECH_DISCLOSURE_SECURE|TECH_DISCLOSURE_DEPLOY|CONSTRUCTION_DEPLOY|CONSTRUCTION_SCHEMA|CONSTRUCTION_PROGRESS|CONSTRUCTION_CONSTRUCTION_PLANE|CONSTRUCTION_RISK|CONSTRUCTION_TECH_ORG|CONSTRUCTION_SPECIAL_SCHEMA|COST_EVALUATION|COST_ESTIMATE|COST_CONTROL|COST_OTHER|BID_DESIGN|BID_CONSTRUCTION|BID_BOUNUS|LABOR_SUPERVISOR|LABOR_WAGE|LABOR_DISPUTE|SECURE_GIST|SECURE_STANDARD|SECURE_TARGET|SECURE_SYSTEM|SECURE_INSTITUTION|SECURE_EDUCATION|SECURE_REGULAR|SECURE_FIRE|SECURE_ELECTRIC|SECURE_HIGH|SECURE_ACCIDENT|SECURE_CHECK|SECURE_CONSTRUCTION|SECURE_VIOLATION|CHANGE_DESIGN_DEPARTMENT|CHANGE_DESIGN_REVIEW|CHANGE_DESIGN_CONSTRUCTION|CHANGE_DESIGN_POSITION|CHANGE_DESIGN_COST|VIOLATION_PROGRESS_DELAY|VIOLATION_QUALITY|VIOLATION_SECURE|VIOLATION_OTHER|MATERIAL_PRINCIPAL|MATERIAL_BID|MATERIAL_ACCEPTANCE|MATERIAL_SEAL_UP|MATERIAL_CHANGE|AFTER_SALE_DESKTOP|AFTER_SALE_REPAIR|COMPENSATION_CONTRACT|COMPENSATION_CONSTRUCTION|COMPENSATION_LABOR|LOAN_FUND|LOAN_APPLICATION|LOAN_CONTRACT|LABOR_RECORD'), verb: false, required: true,type:string;
		daily_task_second_type	parent('$(object)'), verb: false, required: true, referenceBy: dailyTaskThirdTypeList,type:daily_task_second_type;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: dailyTaskThirdTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目运营, name=daily_task_template}
daily_task_template{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('模板名称'), verb: false, required: true,type:string;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: dailyTaskTemplateList,type:daily_task_type;
		string_document	template('template.docx'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		employee_nomination	creator('$(object)'), verb: false, required: true, referenceBy: dailyTaskTemplateList,type:employee_nomination;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: dailyTaskTemplateList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectMaterialList	daily_task_template(__no_group)--daily_task_template;
	}
} depth=5; isRoot = false

meta{name=project_material_type_configuration}
project_material_type_configuration{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		project_material_type	type('$(object)'), verb: false, required: true, referenceBy: projectMaterialTypeConfigurationList,type:project_material_type;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectMaterialTypeConfigurationList,type:project;
		bool	display('true|false'), verb: false, required: true,type:bool;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=project_material_type, features=setting, identified_by=code}
project_material_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('开工前资料|质量验收资料|试验资料|合格证资料|施工过程资料|应增补资料|竣工资料|监督存档资料|项目验收申请|项目验收单'), verb: false, required: true,type:string;
		string	code('START_MATERIAL|QUALITY_ACCEPTANCE_MATERIAL|EXPERIMENT_MATERIAL|CERTIFICATION_MATERIAL|PROCESS_MATERIAL|SUPPLEMENT_MATERIAL|COMPLETION_MATERIAL|SUPERVISION_MATERIAL|ACCEPTANCE_APPLICATION|ACCEPTANCE'), verb: false, required: true,type:string;
		project_material_parent_type	parent('$(object)'), verb: false, required: true, referenceBy: projectMaterialTypeList,type:project_material_parent_type;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectMaterialTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		projectMaterialTypeConfigurationList	type(__no_group)--type;
		projectMaterialList	project_material_type(__no_group)--project_material_type;
	}
} depth=2; isRoot = false

meta{name=project_material_parent_type, group_by=type, features=setting}
project_material_parent_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('父类型'), verb: false, required: true,type:string;
		string	code('TEST'), verb: false, required: true,type:string;
		int	display_order('1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|500'), verb: false, required: true,type:int;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectMaterialParentTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectMaterialTypeList	parent(__no_group)--parent;
	}
} depth=1; isRoot = false

meta{name=project_material_review_status, features=status, identified_by=code}
project_material_review_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待审核|合格|不合格'), verb: false, required: true,type:string;
		string	code('PENDING|QUALIFIED|DISQUALIFICATION'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectMaterialReviewStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=material_review_result, features=status, identified_by=code}
material_review_result{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待审核|通过|不通过'), verb: false, required: true,type:string;
		string	code('PENDING|PASS|NOPASS'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: materialReviewResultList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectMaterialList	material_review_result(__no_group)--material_review_result;
	}
} depth=1; isRoot = false

meta{name=project_material, vg4project=项目运营}
project_material{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('资料名称'), verb: false, required: true,type:string;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: projectMaterialList,type:daily_task_type;
		daily_task_template	daily_task_template('$(object)'), verb: false, required: false, referenceBy: projectMaterialList,type:daily_task_template;
		project_material_type	project_material_type('$(object)'), verb: false, required: true, referenceBy: projectMaterialList,type:project_material_type;
		string_document	document('document.docx'), verb: false, required: true,type:string_document;
		employee_nomination	material_submitter('$(object)'), verb: false, required: true, referenceBy: projectMaterialList,type:employee_nomination;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectMaterialList,type:project;
		material_review_result	material_review_result('$(object)'), verb: false, required: true, referenceBy: projectMaterialList,type:material_review_result;
		string	review_result_comment('审核结果备注'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(9){
		projectMaterialReviewRecordList	project_material(__no_group)--project_material;
		projectMaterialCommentsRecordList	project_material(__no_group)--project_material;
		projectMaterialViewRecordList	project_material(__no_group)--project_material;
		projectMaterialOperationLogList	project_material(__no_group)--project_material;
		projectAcceptanceListAsAcceptanceApplication	acceptance_application(__no_group)--acceptance_application;
		projectAcceptanceListAsAcceptance	acceptance(__no_group)--acceptance_application;
		laborWageManagementSheetListAsBidPriceList	bid_price_list(__no_group)--bid_price_list;
		laborWageManagementSheetListAsLaborWage	labor_wage(__no_group)--bid_price_list;
		projectCommandList	project_material(__no_group)--project_material;
	}
} depth=6; isRoot = false

meta{name=project_material_review_record}
project_material_review_record{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		project_material_review_record_status	status('$(object)'), verb: false, required: true, referenceBy: projectMaterialReviewRecordList,type:project_material_review_record_status;
		project_material	project_material('$(object)'), verb: false, required: true, referenceBy: projectMaterialReviewRecordList,type:project_material;
		project_nomination	reviewer('$(object)'), verb: false, required: true, referenceBy: projectMaterialReviewRecordList,type:project_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_material_review_record_status, features=status, identified_by=code}
project_material_review_record_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已通过|未通过|待审核'), verb: false, required: true,type:string;
		string	code('APPROVED|UNAPPROVED|PENDING'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectMaterialReviewRecordList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=project_material_comments_record}
project_material_comments_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string_image	image('example.jpg'), verb: false, required: true,type:string_image;
		project_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: projectMaterialCommentsRecordList,type:project_nomination;
		project_material	project_material('$(object)'), verb: false, required: true, referenceBy: projectMaterialCommentsRecordList,type:project_material;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_material_view_record, max_count=1000000000, vg4merchant=项目运营}
project_material_view_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		int	view_count('0|1|300'), verb: false, required: true,type:int;
		project_material	project_material('$(object)'), verb: false, required: true, referenceBy: projectMaterialViewRecordList,type:project_material;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: projectMaterialViewRecordList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_material_operation_log, vg4operator_merchant=项目运营, features=log, max_count=1000000000}
project_material_operation_log{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('创建|删除'), verb: false, required: true,type:string;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		string	log_type('create|delete|review'), verb: false, required: true,type:string;
		string	refer_object_type('project'), verb: false, required: true,type:string;
		string	refer_object_id('p000001'), verb: false, required: true,type:string;
		project_material	project_material('$(object)'), verb: false, required: true, referenceBy: projectMaterialOperationLogList,type:project_material;
		merchant	operator_merchant('$(object)'), verb: false, required: false, referenceBy: projectMaterialOperationLogList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=yourong_project_book, vg4project=项目运营}
yourong_project_book{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		yourong_project_book_type	type('$(object)'), verb: false, required: true, referenceBy: yourongProjectBookList,type:yourong_project_book_type;
		string	title('项目计划项目数'), verb: false, required: true,type:string;
		string_longtext	brief('text()'), verb: false, required: true,type:string_longtext;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		string_image	image_url('project_book.jpg'), verb: false, required: true,type:string_image;
		yourong_project_book_status	status('$(object)'), verb: false, required: true, referenceBy: yourongProjectBookList,type:yourong_project_book_status;
		project	project('$(object)'), verb: false, required: true, referenceBy: yourongProjectBookList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=yourong_project_book_status, identified_by=code, features=status}
yourong_project_book_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已提交|审核中|已确认|待调整'), verb: false, required: true,type:string;
		string	code('SUBMITTED|PROCESSING|CONFIRMED|TO_BE_ADJUSTED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: yourongProjectBookStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		yourongProjectBookList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{name=yourong_project_book_type, identified_by=code, features=status}
yourong_project_book_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目建议书|设计任务书|造价控制书|施工任务书|设计招标书|实施招标书'), verb: false, required: true,type:string;
		string	code('PROPOSAL|DESIGN|PRICING|CONSTRUCTION|DESIGN_RFP|CONSTRUCTION_RFP'), verb: false, required: true,type:string;
		string_image	image_url('https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/1%402x.png|https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/2%402x.png|https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/3%402x.png|https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/4%402x.png|https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/5%402x.png|https://doublechain-public.oss-cn-hangzhou.aliyuncs.com/yourong/assets/icons/5%402x.png'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: yourongProjectBookTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		yourongProjectBookList	type(__no_group)--type;
	}
} depth=1; isRoot = false

meta{name=project_acceptance, vg4application_unit=项目运营, vg4property_owner=项目运营}
project_acceptance{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('大邑压力山大办公大楼基装验收'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceList,type:project;
		merchant	property_owner('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceList,type:merchant;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceList,type:daily_task_type;
		date_time	acceptance_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		project_nomination	application_unit('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceList,type:project_nomination;
		date_time	application_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		project_material	acceptance_application('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceListAsAcceptanceApplication,type:project_material;
		project_material	acceptance('$(object)'), verb: false, required: false, referenceBy: projectAcceptanceListAsAcceptance,type:project_material;
		project_acceptance_status	status('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceList,type:project_acceptance_status;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_acceptance_status, features=status, identified_by=code}
project_acceptance_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('申请中|已取消|验收中|已通过|未通过'), verb: false, required: true,type:string;
		string	code('IN_APPLICATION|APPLICATION_CANCELLED|IN_ACCEPTANCE|APPROVED|UNAPPROVED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectAcceptanceList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=after_sales, vg4project=售后管理}
after_sales{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		project	project('$(object)'), verb: false, required: true, referenceBy: afterSalesList,type:project;
		string	title('雅丽泰酒店基装问题售后单'), verb: false, required: true,type:string;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		employee_nomination	creator('$(object)'), verb: false, required: true, referenceBy: afterSalesList,type:employee_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		after_sales_status	status('$(object)'), verb: false, required: true, referenceBy: afterSalesList,type:after_sales_status;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: afterSalesList,type:daily_task_type;
		string	resolve_comments('问题已协商处理解决'), verb: false, required: true,type:string;
		project_nomination	solver('$(object)'), verb: false, required: false, referenceBy: afterSalesList,type:project_nomination;
		date	solve_time('2020-05-05'), verb: false, required: false,type:date;
		images	solve_images('images()'), verb: false, required: true,type:images;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=after_sales_status, features=status, identified_by=code}
after_sales_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已提交|处理中|已解决'), verb: false, required: true,type:string;
		string	code('SUBMITTED|PROCESSING|SOLVED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		afterSalesList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=project_penalties, vg4project=项目运营}
project_penalties{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('雅丽泰酒店消防安全处罚'), verb: false, required: true,type:string;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	reason('text()'), verb: false, required: true,type:string_longtext;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectPenaltiesList,type:project;
		money	forfeit('$9999999.99'), verb: false, required: true,type:money;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: projectPenaltiesList,type:standard_contract;
		project_penalties_status	status('$(object)'), verb: false, required: true, referenceBy: projectPenaltiesList,type:project_penalties_status;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: projectPenaltiesList,type:daily_task_type;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_penalties_status, features=status, identified_by=code}
project_penalties_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已提交|处理中|已处罚'), verb: false, required: true,type:string;
		string	code('SUBMITTED|PROCESSING|FINISHED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectPenaltiesList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=labor_wage_management_sheet, vg4project=人力资源}
labor_wage_management_sheet{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		project	project('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetList,type:project;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetList,type:daily_task_type;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetList,type:standard_contract;
		project_material	bid_price_list('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetListAsBidPriceList,type:project_material;
		money	total_labor_cost('$99999.99'), verb: false, required: true,type:money;
		project_progress	project_progress('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetList,type:project_progress;
		date	plan_pay_date('2200-1-1'), verb: false, required: true,type:date;
		money	plan_pay_amount('$99999.99'), verb: false, required: true,type:money;
		project_nomination	contract_payment_manager('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetListAsContractPaymentManager,type:project_nomination;
		project_nomination	platform_labor_manager('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetListAsPlatformLaborManager,type:project_nomination;
		date	actual_pay_date('2200-1-1'), verb: false, required: true,type:date;
		money	actual_pay_amount('$99999.99'), verb: false, required: true,type:money;
		project_nomination	payment_manager('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetListAsPaymentManager,type:project_nomination;
		project_material	labor_wage('$(object)'), verb: false, required: true, referenceBy: laborWageManagementSheetListAsLaborWage,type:project_material;
		bool	contractor_commitment('true|false'), verb: false, required: true,type:bool;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=labor_dispute, vg4project=人力资源}
labor_dispute{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('雅丽泰办公大楼劳务纠纷'), verb: false, required: true,type:string;
		work_package	work_package('$(object)'), verb: false, required: true, referenceBy: laborDisputeList,type:work_package;
		labor_dispute_type	type('$(object)'), verb: false, required: true, referenceBy: laborDisputeList,type:labor_dispute_type;
		labor_dispute_status	status('$(object)'), verb: false, required: true, referenceBy: laborDisputeList,type:labor_dispute_status;
		string	level('danger|primary|warn|normal|default'), verb: false, required: true,type:string;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string	litigant('张三'), verb: false, required: true,type:string;
		project_nomination	applicant('$(object)'), verb: false, required: true, referenceBy: laborDisputeList,type:project_nomination;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		project	project('$(object)'), verb: false, required: true, referenceBy: laborDisputeList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=labor_dispute_status, features=status, identified_by=code}
labor_dispute_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已受理|处理中|已处理'), verb: false, required: true,type:string;
		string	code('ACCEPTED|PROCESSING|SOLVED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: laborDisputeStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		laborDisputeList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{name=labor_dispute_type, features=status, identified_by=code}
labor_dispute_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('一|二|三'), verb: false, required: true,type:string;
		string	code('ONE|TWO|THREE'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: laborDisputeTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		laborDisputeList	type(__no_group)--type;
		eventLaborDisputeList	type(__no_group)--type;
	}
} depth=1; isRoot = false

meta{name=labor_record}
labor_record{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		project_nomination	project_nomination('$(object)'), verb: false, required: true, referenceBy: laborRecordList,type:project_nomination;
		labor_record_type	type('$(object)'), verb: false, required: true, referenceBy: laborRecordList,type:labor_record_type;
		date	attendance_date('2020-05-05'), verb: false, required: true,type:date;
		date	morning_start_working_time('2020-05-05'), verb: false, required: true,type:date;
		date	morning_end_working_time('2020-05-05'), verb: false, required: true,type:date;
		date	afternoon_start_working_time('2020-05-05'), verb: false, required: true,type:date;
		date	afternoon_end_working_time('2020-05-05'), verb: false, required: true,type:date;
		project	project('$(object)'), verb: false, required: true, referenceBy: laborRecordList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=work_overtime_record}
work_overtime_record{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		project_nomination	project_nomination('$(object)'), verb: false, required: true, referenceBy: workOvertimeRecordList,type:project_nomination;
		date	attendance_date('2020-05-05'), verb: false, required: true,type:date;
		date	start_time('2020-05-05'), verb: false, required: true,type:date;
		date	end_time('2020-05-05'), verb: false, required: true,type:date;
		project	project('$(object)'), verb: false, required: true, referenceBy: workOvertimeRecordList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=labor_record_type, features=status, identified_by=code}
labor_record_type{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('上班|休息|请假|旷工'), verb: false, required: true,type:string;
		string	code('WORD|REST|VACATION|ABSENTEEISM'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		laborRecordList	type(__no_group)--type;
	}
} depth=0; isRoot = true

meta{name=project_report, vg4project=项目运营}
project_report{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('雅丽泰办公大楼装修日报'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectReportList,type:project;
		string_longtext	contract_merchant_name('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	responsible_merchant_names('text()'), verb: false, required: true,type:string_longtext;
		project_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: projectReportList,type:project_nomination;
		double	temperature('37.5'), verb: false, required: true,type:double;
		string	weather('阴|晴|雨|雪'), verb: false, required: true,type:string;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: projectReportList,type:daily_task_type;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		commonReportList	project_report(__no_group)--project_report;
		projectReportCheckItemList	project_report(__no_group)--project_report;
	}
} depth=6; isRoot = false

meta{name=common_report}
common_report{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('施工配合情况'), verb: false, required: true,type:string;
		string_longtext	content('text()'), verb: false, required: false,type:string_longtext;
		images	images('images()'), verb: false, required: false,type:images;
		project_report	project_report('$(object)'), verb: false, required: true, referenceBy: commonReportList,type:project_report;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_report_check_item}
project_report_check_item{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	title('text()'), verb: false, required: true,type:string_longtext;
		string	check_result('check result|检查结果'), verb: false, required: true,type:string;
		string	process_result('process result|处理结果'), verb: false, required: true,type:string;
		project_report	project_report('$(object)'), verb: false, required: true, referenceBy: projectReportCheckItemList,type:project_report;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=project_command}
project_command{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('尽快完成基装验收'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectCommandList,type:project;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: projectCommandList,type:daily_task_type;
		string	directive_brief('directive brief|指令事由'), verb: false, required: true,type:string;
		bool	has_cost('true|false'), verb: false, required: true,type:bool;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		project_material	project_material('$(object)'), verb: false, required: false, referenceBy: projectCommandList,type:project_material;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		projectCommandAssignmentList	project_command(__no_group)--project_command;
	}
} depth=7; isRoot = false

meta{name=project_command_assignment}
project_command_assignment{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		project_command	project_command('$(object)'), verb: false, required: true, referenceBy: projectCommandAssignmentList,type:project_command;
		project_nomination	reciever('$(object)'), verb: false, required: true, referenceBy: projectCommandAssignmentList,type:project_nomination;
		bool	carbon_copy('true|false'), verb: false, required: true,type:bool;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{vg4fund_vendor=金融服务, vg4platform=金融服务, name=loan_fund}
loan_fund{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('委贷资金'), verb: false, required: true,type:string;
		money	amount('$3000.00|$99999.00|$0.00'), verb: false, required: true,type:money;
		merchant	fund_vendor('$(object)'), verb: false, required: true, referenceBy: loanFundList,type:merchant;
		project	project('$(object)'), verb: false, required: true, referenceBy: loanFundList,type:project;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: loanFundList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		financialServiceStatisticReportList	loan_fund(__no_group)--loan_fund;
	}
} depth=4; isRoot = false

meta{vg4platform=金融服务, name=loan_application, vg4loan_project=金融服务, vg4applicant=金融服务}
loan_application{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX借款申请'), verb: false, required: true,type:string;
		project	loan_project('$(object)'), verb: false, required: true, referenceBy: loanApplicationList,type:project;
		money	application_amount('$3000.00|$99999.00|$0.00'), verb: false, required: true,type:money;
		date_time_create	application_time('createTime()'), verb: false, required: true,type:date_time_create;
		merchant	applicant('$(object)'), verb: false, required: true, referenceBy: loanApplicationList,type:merchant;
		loan_application_status	status('$(object)'), verb: false, required: true, referenceBy: loanApplicationList,type:loan_application_status;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: loanApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		loanContractList	loan_application(__no_group)--loan_application;
		financialServiceStatisticReportList	loan_application(__no_group)--loan_application;
	}
} depth=4; isRoot = false

meta{name=loan_application_status, features=status, identified_by=code}
loan_application_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('审核中|已通过|未通过'), verb: false, required: true,type:string;
		string	code('PENDING|APPROVED|UNAPPROVED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		loanApplicationList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{vg4platform=金融服务, name=loan_contract, vg4lender=金融服务, vg4borrower=金融服务}
loan_contract{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX借款合同'), verb: false, required: true,type:string;
		loan_application	loan_application('$(object)'), verb: false, required: true, referenceBy: loanContractList,type:loan_application;
		merchant	borrower('$(object)'), verb: false, required: true, referenceBy: loanContractListAsBorrower,type:merchant;
		merchant	lender('$(object)'), verb: false, required: true, referenceBy: loanContractListAsLender,type:merchant;
		money	loan_amount('$3000.00|$99999.00|$0.00'), verb: false, required: true,type:money;
		int	loan_term('1|2|3|4|5|6|7|20'), verb: false, required: true,type:int;
		project	project('$(object)'), verb: false, required: true, referenceBy: loanContractList,type:project;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: loanContractList,type:platform;
		loan_contract_status	status('$(object)'), verb: false, required: true, referenceBy: loanContractList,type:loan_contract_status;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		financialServiceStatisticReportList	loan_contract(__no_group)--loan_contract;
	}
} depth=5; isRoot = false

meta{name=loan_contract_status, features=status, identified_by=code}
loan_contract_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('履行中|待履行|已履行'), verb: false, required: true,type:string;
		string	code('IN_ACCOMPLISH|PENDING|ACCOMPLISHED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		loanContractList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=compensation_application, vg4project=项目运营}
compensation_application{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('逾期赔付申请'), verb: false, required: true,type:string;
		string_longtext	reason('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		project	project('$(object)'), verb: false, required: true, referenceBy: compensationApplicationList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		compensation_application_status	status('$(object)'), verb: false, required: true, referenceBy: compensationApplicationList,type:compensation_application_status;
		employee_nomination	submitter('$(object)'), verb: false, required: true, referenceBy: compensationApplicationList,type:employee_nomination;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		compensationInvestigationList	compensation_application(__no_group)--compensation_application;
	}
} depth=5; isRoot = false

meta{name=compensation_application_status, features=status, identified_by=code}
compensation_application_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('受理中|已受理'), verb: false, required: true,type:string;
		string	code('ACCEPTING|ACCEPTED'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		compensationApplicationList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=compensation_investigation, vg4project=项目运营}
compensation_investigation{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('资料名称'), verb: false, required: true,type:string;
		string_document	document('document.docx'), verb: false, required: true,type:string_document;
		compensation_application	compensation_application('$(object)'), verb: false, required: true, referenceBy: compensationInvestigationList,type:compensation_application;
		project	project('$(object)'), verb: false, required: true, referenceBy: compensationInvestigationList,type:project;
		merchant	submitter('$(object)'), verb: false, required: true, referenceBy: compensationInvestigationList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		compensationResultList	compensation_investigation(__no_group)--compensation_investigation;
	}
} depth=6; isRoot = false

meta{name=compensation_result, vg4project=项目运营}
compensation_result{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('资料名称'), verb: false, required: true,type:string;
		string_document	document('document.docx'), verb: false, required: true,type:string_document;
		compensation_investigation	compensation_investigation('$(object)'), verb: false, required: true, referenceBy: compensationResultList,type:compensation_investigation;
		merchant	submitter('$(object)'), verb: false, required: true, referenceBy: compensationResultList,type:merchant;
		project	project('$(object)'), verb: false, required: true, referenceBy: compensationResultList,type:project;
		compensation_result_status	status('$(object)'), verb: false, required: true, referenceBy: compensationResultList,type:compensation_result_status;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=compensation_result_status, features=status, identified_by=code}
compensation_result_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('赔付中|已赔付'), verb: false, required: true,type:string;
		string	code('UNPAID|PAID'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		compensationResultList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=material_preserved_sample, vg4project=项目运营}
material_preserved_sample{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('通用硅酸盐水泥进场封存单'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:standard_contract;
		string	material_name('复合硅酸盐水泥'), verb: false, required: true,type:string;
		material_category	material_category('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:material_category;
		string	position('地面铺装'), verb: false, required: true,type:string;
		string	model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:material_unit_of_measurement;
		string	material_brand('拉法基'), verb: false, required: true,type:string;
		string	supplier('四川西南水泥'), verb: false, required: true,type:string;
		string	seal_up_material_name('复合硅酸盐水泥存样'), verb: false, required: true,type:string;
		project_nomination	material_manager('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:project_nomination;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		project	project('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:project;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: materialPreservedSampleList,type:daily_task_type;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=material_bid_sample, vg4project=项目运营}
material_bid_sample{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('通用硅酸盐水泥进场封存单'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:standard_contract;
		string	material_name('复合硅酸盐水泥'), verb: false, required: true,type:string;
		material_category	material_category('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:material_category;
		string	position('地面铺装'), verb: false, required: true,type:string;
		string	model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:material_unit_of_measurement;
		string	material_brand('拉法基'), verb: false, required: true,type:string;
		string	supplier('四川西南水泥'), verb: false, required: true,type:string;
		string	seal_up_material_name('复合硅酸盐水泥存样'), verb: false, required: true,type:string;
		project_nomination	material_manager('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:project_nomination;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		project	project('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:project;
		daily_task_type	daily_task_type('$(object)'), verb: false, required: true, referenceBy: materialBidSampleList,type:daily_task_type;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=项目运营, name=material_category, features=setting, identified_by=code}
material_category{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('主材|辅材|人工|机械'), verb: false, required: true,type:string;
		string	code('MAIN_MATERIAL|AUXILIARY_MATERIALS|ARTIFICIAL|MECHANICS'), verb: false, required: true,type:string;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: materialCategoryList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(6){
		materialPreservedSampleList	material_category(__no_group)--material_category;
		materialBidSampleList	material_category(__no_group)--material_category;
		materialTypeList	category(__no_group)--category;
		materialChangeList	contract_material_category(__no_group)--contract_material_category;
		materialAcceptanceApplicationList	material_category(__no_group)--material_category;
		eventMaterialPreservedBasicInfoList	material_category(__no_group)--material_category;
	}
} depth=1; isRoot = false

meta{vg4platform=项目运营, name=material_type, features=setting, identified_by=code}
material_type{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('木工板材|玻璃不锈钢|灯光照明'), verb: false, required: true,type:string;
		string	code('WOOD|GLASS_AND_STAINLESS_STEEL|LIGHTING'), verb: false, required: true,type:string;
		material_category	category('$(object)'), verb: false, required: true, referenceBy: materialTypeList,type:material_category;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: materialTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		materialRecordList	type(__no_group)--type;
	}
} depth=2; isRoot = false

meta{name=material_record, vg4project=项目运营}
material_record{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('18mm实木多层板材'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:standard_contract;
		string	model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:material_unit_of_measurement;
		double	bid_unit_price('100.99'), verb: false, required: true,type:double;
		string	material_brand('拉法基'), verb: false, required: true,type:string;
		int	planned_material_amount('9999999'), verb: false, required: true,type:int;
		project_progress	planned_approach_phase('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:project_progress;
		date	planned_approach_time('2020-05-05'), verb: false, required: true,type:date;
		merchant	platform_information_manager('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:merchant;
		project	project('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:project;
		material_type	type('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:material_type;
		daily_task_type	daili_task_type('$(object)'), verb: false, required: true, referenceBy: materialRecordList,type:daily_task_type;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=项目运营, name=material_unit_of_measurement, features=setting, identified_by=code}
material_unit_of_measurement{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('m|m²|m³|克|千克|吨|个|樘|张'), verb: false, required: true,type:string;
		string	code('M|M2|M3|G|KG|T|A|TANG|ZHANG'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: materialUnitOfMeasurementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(10){
		materialPreservedSampleList	material_unit_of_measurement(__no_group)--material_unit_of_measurement;
		materialBidSampleList	material_unit_of_measurement(__no_group)--material_unit_of_measurement;
		materialRecordList	material_unit_of_measurement(__no_group)--material_unit_of_measurement;
		materialChangeListAsContractMaterialUnitOfMeasurement	contract_material_unit_of_measurement(__no_group)--contract_material_unit_of_measurement;
		materialChangeListAsMaterialUnitOfMeasurement	material_unit_of_measurement(__no_group)--contract_material_unit_of_measurement;
		materialAcceptanceApplicationList	material_unit_of_measurement(__no_group)--material_unit_of_measurement;
		eventMaterialChangeInfoList	uom(__no_group)--uom;
		eventMaterialAcceptanceBasicInfoList	uom(__no_group)--uom;
		eventMaterialChangeContractInfoList	uom(__no_group)--uom;
		eventMaterialPreservedBasicInfoList	uom(__no_group)--uom;
	}
} depth=1; isRoot = false

meta{name=material_change, vg4project=项目运营}
material_change{
	fields(22){
		string	id('AB'), verb: false, required: true,type:id;
		material_category	contract_material_category('$(object)'), verb: false, required: true, referenceBy: materialChangeList,type:material_category;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: materialChangeList,type:standard_contract;
		string	contract_material_name('复合硅酸盐水泥'), verb: false, required: true,type:string;
		string	contract_model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	contract_material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialChangeListAsContractMaterialUnitOfMeasurement,type:material_unit_of_measurement;
		string	contract_material_brand('拉法基'), verb: false, required: true,type:string;
		string_longtext	change_comments('text()'), verb: false, required: true,type:string_longtext;
		string	material_name('复合硅酸盐水泥'), verb: false, required: true,type:string;
		string	model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialChangeListAsMaterialUnitOfMeasurement,type:material_unit_of_measurement;
		string	material_brand('拉法基'), verb: false, required: true,type:string;
		int	number_of_changes('999999'), verb: false, required: true,type:int;
		string	price_adjustment('$10000'), verb: false, required: true,type:string;
		project_nomination	applicant('$(object)'), verb: false, required: true, referenceBy: materialChangeList,type:project_nomination;
		string_document	document('document.doc'), verb: false, required: true,type:string_document;
		images	images('images()'), verb: false, required: true,type:images;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		project	project('$(object)'), verb: false, required: true, referenceBy: materialChangeList,type:project;
		daily_task_type	daili_task_type('$(object)'), verb: false, required: true, referenceBy: materialChangeList,type:daily_task_type;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=material_acceptance_application}
material_acceptance_application{
	fields(21){
		string	id('AB'), verb: false, required: true,type:id;
		project	project('$(object)'), verb: false, required: true, referenceBy: materialAcceptanceApplicationList,type:project;
		string	title('18mm木板验收'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: materialAcceptanceApplicationList,type:standard_contract;
		string	material_name('复合硅酸盐水泥'), verb: false, required: true,type:string;
		material_category	material_category('$(object)'), verb: false, required: true, referenceBy: materialAcceptanceApplicationList,type:material_category;
		string	use_part('使用部位'), verb: false, required: true,type:string;
		string	model('P.CISO9008731'), verb: false, required: true,type:string;
		material_unit_of_measurement	material_unit_of_measurement('$(object)'), verb: false, required: true, referenceBy: materialAcceptanceApplicationList,type:material_unit_of_measurement;
		string	material_brand('拉法基'), verb: false, required: true,type:string;
		string	supplier('四川西南水泥'), verb: false, required: true,type:string;
		project_nomination	auditor('$(object)'), verb: false, required: true, referenceBy: materialAcceptanceApplicationList,type:project_nomination;
		int	planned_material_amount('9999999'), verb: false, required: true,type:int;
		int	actual_material_amount('9999999'), verb: false, required: true,type:int;
		int	planned_arrived_amount('9999999'), verb: false, required: true,type:int;
		string	is_broken('正常破损'), verb: false, required: true,type:string;
		bool	material_matches('true|false'), verb: false, required: true,type:bool;
		bool	meet_quanlity_standard('true|false'), verb: false, required: true,type:bool;
		bool	has_certificates('true|false'), verb: false, required: true,type:bool;
		images	images('images()'), verb: false, required: true,type:images;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=account_book_type, features=status}
account_book_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('现金|应收|应付'), verb: false, required: true,type:string;
		string	code('CASH|RECEIVABLE|PAYABLE'), verb: false, required: true,type:string;
		string_image	icon('wallet.jpg|income.jpg|payable.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: accountBookTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		accountBookList	type(__no_group)--type;
	}
} depth=1; isRoot = false

meta{name=account_book, vg4owner=财务管理}
account_book{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('余额|工程收入款|EPC托管账户'), verb: false, required: true,type:string;
		account_book_type	type('$(object)'), verb: false, required: true, referenceBy: accountBookList,type:account_book_type;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: accountBookList,type:merchant;
		money	amount('$99999999.999'), verb: false, required: true,type:money;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		accountBookRecordListAsPayerAccount	payer_account(__no_group)--payer_account;
		accountBookRecordListAsPayeeAccount	payee_account(__no_group)--payer_account;
		accountBookItemList	account_book(__no_group)--account_book;
	}
} depth=3; isRoot = false

meta{name=account_book_item_status, features=status}
account_book_item_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('处理中|完成|被冻结'), verb: false, required: true,type:string;
		string	code('PROCESSING|COMPLETED|FROZEN'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: accountBookItemStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		accountBookItemList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{name=account_book_item}
account_book_item{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('预备金划拨|智能秤采购'), verb: false, required: true,type:string;
		string_longtext	brief('text()'), verb: false, required: true,type:string_longtext;
		money	original_amount('$99999999.999'), verb: false, required: true,type:money;
		account_book_item_status	status('$(object)'), verb: false, required: true, referenceBy: accountBookItemList,type:account_book_item_status;
		money	balance('$99999999.999'), verb: false, required: true,type:money;
		string	refer_object_type('MainOrder|Project|Task|ContractPayItem'), verb: false, required: true,type:string;
		string	refer_object_id('MainOrder|Project|Task|ContractPayItem'), verb: false, required: true,type:string;
		account_book	account_book('$(object)'), verb: false, required: true, referenceBy: accountBookItemList,type:account_book;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=application_status, features=status, identified_by=code}
application_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已提交|处理中|已完成|已取消'), verb: false, required: true,type:string;
		string	code('POSTED|PROCESSING|FINISHED|CANCELLED'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: applicationStatusList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		recommendationList	status(__no_group)--status;
		emplacementApplicationList	status(__no_group)--status;
		customerProjectApplicationList	status(__no_group)--status;
		partnerSettlementApplicationList	status(__no_group)--status;
	}
} depth=2; isRoot = false

meta{name=recommendation_type, features=setting, identified_by=code}
recommendation_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('推荐项目|推荐服务商|推荐设计师|推荐产品|推荐知识产权|推荐行业技术|推荐品牌战略方|其它推荐'), verb: false, required: true,type:string;
		string	code('PROJECT|VENDOR|DESINER|PRODUCT|IP|TECH|PARTNER|OTHER'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: recommendationTypeList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		recommendationList	type(__no_group)--type;
		eventApplyRecommendationList	recommendation_type(__no_group)--recommendation_type;
	}
} depth=2; isRoot = false

meta{vg4platform=平台营销, name=recommendation, vg4applicant_merchant=平台营销}
recommendation{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('推荐的标题'), verb: false, required: true,type:string;
		recommendation_type	type('$(object)'), verb: false, required: true, referenceBy: recommendationList,type:recommendation_type;
		string	contact_name('张文明'), verb: false, required: true,type:contact_name;
		string_china_mobile_phone	contact_mobile('18012341234'), verb: false, required: true,type:string_china_mobile_phone;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		application_status	status('$(object)'), verb: false, required: true, referenceBy: recommendationList,type:application_status;
		merchant	applicant_merchant('$(object)'), verb: false, required: false, referenceBy: recommendationList,type:merchant;
		employee_nomination	applicant_employee('$(object)'), verb: false, required: false, referenceBy: recommendationList,type:employee_nomination;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: recommendationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=平台营销, name=emplacement_application, vg4applicant_merchant=平台营销}
emplacement_application{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('申请成为分包商'), verb: false, required: true,type:string;
		string	company_name('merchant_name|公司名称'), verb: false, required: true,type:string;
		string	company_location('merchant_location|公司地址'), verb: false, required: true,type:string;
		partner_type	partner_type('$(object)'), verb: false, required: true, referenceBy: emplacementApplicationList,type:partner_type;
		available_service_location	service_location('$(object)'), verb: false, required: true, referenceBy: emplacementApplicationList,type:available_service_location;
		string_url	company_website('https://www/baidu.com'), verb: false, required: false,type:string_url;
		string	comments('comments|备注'), verb: false, required: true,type:string;
		string	contact_name('contact name|联系人'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		application_status	status('$(object)'), verb: false, required: true, referenceBy: emplacementApplicationList,type:application_status;
		merchant	applicant_merchant('$(object)'), verb: false, required: false, referenceBy: emplacementApplicationList,type:merchant;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: emplacementApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=平台营销, name=personal_emplacement_application, vg4applicant_merchant=平台营销}
personal_emplacement_application{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		audit_status	status('$(object)'), verb: false, required: true, referenceBy: personalEmplacementApplicationList,type:audit_status;
		string	name('张三'), verb: false, required: true,type:string;
		string_gender	gender('$(object)'), verb: false, required: true,type:gender;
		string	address('公司地址'), verb: false, required: true,type:string;
		career_type	career_type('$(object)'), verb: false, required: true, referenceBy: personalEmplacementApplicationList,type:career_type;
		business_type	business_type('$(object)'), verb: false, required: true, referenceBy: personalEmplacementApplicationList,type:business_type;
		available_service_location	service_location('$(object)'), verb: false, required: true, referenceBy: personalEmplacementApplicationList,type:available_service_location;
		string_url	home_page('https://www/baidu.com'), verb: false, required: false,type:string_url;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		string_china_mobile_phone	contact_phone('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		string_image	avatar('avatar.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: personalEmplacementApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=estate_property_type, features=setting}
estate_property_type{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('别墅|工厂|写字楼|住宅|商铺|餐饮'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: estatePropertyTypeList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		customerProjectApplicationList	property_type(__no_group)--property_type;
		eventApplyDecorationList	property_type(__no_group)--property_type;
	}
} depth=2; isRoot = false

meta{vg4platform=平台营销, name=customer_project_application, vg4applicant_merchant=平台营销}
customer_project_application{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		estate_property_type	property_type('$(object)'), verb: false, required: true, referenceBy: customerProjectApplicationList,type:estate_property_type;
		double	property_area('10000000.0009|1000000.0|127.96'), verb: false, required: true,type:double;
		string	property_location('成都高新区|敦煌|保密'), verb: false, required: true,type:string;
		string	contact_name('张文明'), verb: false, required: true,type:contact_name;
		string_china_mobile_phone	contact_mobile('18012341234'), verb: false, required: true,type:string_china_mobile_phone;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		application_status	status('$(object)'), verb: false, required: true, referenceBy: customerProjectApplicationList,type:application_status;
		merchant	applicant_merchant('$(object)'), verb: false, required: false, referenceBy: customerProjectApplicationList,type:merchant;
		employee_nomination	applicant_employee('$(object)'), verb: false, required: false, referenceBy: customerProjectApplicationList,type:employee_nomination;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: customerProjectApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=partner_type, group_by=category, features=setting}
partner_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('建材|洁具|灯具|家具|机械设备|施工队|设计师|上游合作伙伴|下游合作伙伴'), verb: false, required: true,type:string;
		string	category('服务提供商|服务提供商|服务提供商|服务提供商|服务提供商|服务提供商|设计师|合作伙伴|合作伙伴'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: partnerTypeList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		emplacementApplicationList	partner_type(__no_group)--partner_type;
		partnerSettlementApplicationList	partner_type(__no_group)--partner_type;
		eventApplyEmplacementList	partner_type(__no_group)--partner_type;
	}
} depth=2; isRoot = false

meta{name=available_service_location, features=setting}
available_service_location{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('四川-成都|四川-成都-都江堰'), verb: false, required: true,type:string;
		platform_configuration	platform_configuration('$(object)'), verb: false, required: true, referenceBy: availableServiceLocationList,type:platform_configuration;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(5){
		emplacementApplicationList	service_location(__no_group)--service_location;
		personalEmplacementApplicationList	service_location(__no_group)--service_location;
		partnerSettlementApplicationList	service_location(__no_group)--service_location;
		eventApplyPersonalEmplacementList	service_location(__no_group)--service_location;
		eventApplyEmplacementList	service_location(__no_group)--service_location;
	}
} depth=2; isRoot = false

meta{vg4platform=平台营销, name=partner_settlement_application, vg4applicant_merchant=平台营销}
partner_settlement_application{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	contact_name('张文明'), verb: false, required: true,type:contact_name;
		string_china_mobile_phone	contact_mobile('13301234567'), verb: false, required: true,type:string_china_mobile_phone;
		string_url	merchant_website('https://www.yourongzhixing.com'), verb: false, required: true,type:string_url;
		partner_type	partner_type('$(object)'), verb: false, required: true, referenceBy: partnerSettlementApplicationList,type:partner_type;
		available_service_location	service_location('$(object)'), verb: false, required: true, referenceBy: partnerSettlementApplicationList,type:available_service_location;
		string	merchant_name('嘉信达装饰邮箱公司'), verb: false, required: true,type:string;
		string	merchant_location('成都高新区|敦煌|保密'), verb: false, required: true,type:string;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		application_status	status('$(object)'), verb: false, required: true, referenceBy: partnerSettlementApplicationList,type:application_status;
		merchant	applicant_merchant('$(object)'), verb: false, required: false, referenceBy: partnerSettlementApplicationList,type:merchant;
		employee_nomination	applicant_employee('$(object)'), verb: false, required: false, referenceBy: partnerSettlementApplicationList,type:employee_nomination;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: partnerSettlementApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=subcontract_application}
subcontract_application{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		project	project('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationList,type:project;
		career_type	career_type('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationList,type:career_type;
		merchant_type	merchant_type('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationList,type:merchant_type;
		merchant	application_merchant('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationListAsApplicationMerchant,type:merchant;
		merchant	applicant('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationListAsApplicant,type:merchant;
		work_package_type	work_package_type('$(object)'), verb: false, required: true, referenceBy: subcontractApplicationList,type:work_package_type;
		string_longtext	application_reason('text()'), verb: false, required: true,type:string_longtext;
		string_china_mobile_phone	phone('13333333333'), verb: false, required: true,type:string_china_mobile_phone;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=bpmn_model}
bpmn_model{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('支付流程定义'), verb: false, required: true,type:string;
		string	model_key('blabla'), verb: false, required: true,type:string;
		string_longtext	definition('text()'), verb: false, required: true,type:string_longtext;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=0; isRoot = true

meta{name=process_instance}
process_instance{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('支付流程实例'), verb: false, required: true,type:string;
		string	starter('M000001'), verb: false, required: true,type:string;
		string_longtext	process_definition_id('text()'), verb: false, required: true,type:string_longtext;
		bool	completed('true|false'), verb: false, required: true,type:bool;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		processInstanceVariableList	process_instance(__no_group)--process_instance;
		nodeInstanceList	process_instance(__no_group)--process_instance;
	}
} depth=0; isRoot = true

meta{name=process_instance_variable}
process_instance_variable{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('orderId'), verb: false, required: true,type:string;
		process_instance	process_instance('$(object)'), verb: false, required: true, referenceBy: processInstanceVariableList,type:process_instance;
		string_longtext	value('text()'), verb: false, required: true,type:string_longtext;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=node_instance}
node_instance{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	name('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	node_definition_id('text()'), verb: false, required: true,type:string_longtext;
		process_instance	process_instance('$(object)'), verb: false, required: true, referenceBy: nodeInstanceList,type:process_instance;
		string_longtext	process_result('text()'), verb: false, required: true,type:string_longtext;
		node_instance_status	status('$(object)'), verb: false, required: true, referenceBy: nodeInstanceList,type:node_instance_status;
		date_time_update	update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=node_instance_status, features=status, identified_by=code}
node_instance_status{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('已完成|等待|无|未完成'), verb: false, required: true,type:string;
		string	code('COMPLETED|WAITING|NONE|INCOMPLETE'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		nodeInstanceList	status(__no_group)--status;
	}
} depth=0; isRoot = true

meta{name=notification, vg4receiver=商户管理, vg4sender=商户管理}
notification{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('雅丽泰酒店意向阶段完成|兴城大道工业园1号装修工程劳务费用已支付'), verb: false, required: true,type:string;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		merchant	receiver('$(object)'), verb: false, required: true, referenceBy: notificationListAsReceiver,type:merchant;
		merchant	sender('$(object)'), verb: false, required: false, referenceBy: notificationListAsSender,type:merchant;
		string	refer_object_type('Project|ProjectMaterial|ProjectReport'), verb: false, required: true,type:string;
		string	refer_object_id('Project|ProjectMaterial|ProjectReport'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: false, referenceBy: notificationList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=change_request_type, identified_by=code, features=cr_type}
change_request_type{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('处理售后单|合同批注|审核合同|我要推荐|添加银行卡|数据类型展示|创建合同|项目指令单|施工日志|添加员工|签证及补充合同|工程验收申请通知单|资料审核|个人入驻|材料变更申请|审核|进场主材料存样|完善个人资料|添加批注|项目参与|投标主材料存样|添加岗位|劳务纠纷申请|售后单|我要装修|创建收款申请|工程劳务管理单|违约处罚|企业入驻|材料验收申请|创建项目进度|资料批注|先行赔付申请|项目经理日志|项目监理日志'), verb: false, required: true,type:string;
		string	code('RESOLVE_AFTER_SALES|COMMENTS_ON_CONTRACT|REVIEW_CONTRACT|APPLY_RECOMMENDATION|ADD_DEBIT_CARD|SHOW_ALL_TYPE|CREATE_CONTRACT|PROJECT_COMMAND|TASK_REPORT|ADD_EMPLOYEE|CREATE_ADDITIONAL_CONTRACT|ACCEPTANCE_APPLICATION|REVIEW_MATERIALS|APPLY_PERSONAL_EMPLACEMENT|APPLY_FOR_MATERIAL_CHANGE|REVIEW|CREATE_MATERIAL_PRESERVED_SAMPLE|FILL_PERSONAL_DETAIL|COMMENTS|SUBCONTRACT_APPLICATION|CREATE_MATERIAL_BID_SAMPLE|ADD_PROJECT_NOMINATION|LABOR_DISPUTE|AFTER_SALES|APPLY_DECORATION|CREATE_CONTRACT_PAYMENT_APPLICATION|LABOR_SUPERVISOR|PROJECT_PENALTIES|APPLY_EMPLACEMENT|APPLY_FOR_MATERIAL_ACCEPTANCE|PROJECT_PROGRESS|COMMENTS_ON_MATERIALS|APPLY_FOR_ADVANCE_COMPENSATION|PROJECT_MANAGER_REPORT|PROJECT_SUPERVISION_REPORT'), verb: false, required: true,type:string;
		string	icon('form|edit|edit|form|form|table|form|form|calendar|bars|form|form|edit|form|form|form|form|form|form|form|form|bars|form|form|form|form|form|form|form|bars|form|edit|form|tachometer|tachometer'), verb: false, required: true,type:string;
		int	display_order('1|2|3|4|5|6'), verb: false, required: true,type:int;
		string_longtext	bind_types('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	step_configuration('text()'), verb: false, required: true,type:string_longtext;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		changeRequestList	request_type(__no_group)--request_type;
	}
} depth=1; isRoot = false

meta{vg4platform=平台追踪, name=change_request, features=change_request}
change_request{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('注册|开始考试|答题'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		string_client_ip	remote_ip('remoteIp()'), verb: false, required: true,type:string_client_ip;
		change_request_type	request_type('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:change_request_type;
		bool	commited('false'), verb: false, required: true,type:bool;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(45){
		eventShowAllTypeStepTwoList	change_request(__no_group)--change_request;
		eventAdditionalContractPaymentPhaseList	change_request(__no_group)--change_request;
		eventResolveAfterSalesList	change_request(__no_group)--change_request;
		eventApplyRecommendationList	change_request(__no_group)--change_request;
		eventAddDebitCardList	change_request(__no_group)--change_request;
		eventMaterialAcceptanceImageList	change_request(__no_group)--change_request;
		eventAdditionalContractBasicInfoList	change_request(__no_group)--change_request;
		eventMaterialCheckList	change_request(__no_group)--change_request;
		eventProjectCommandList	change_request(__no_group)--change_request;
		eventAddEmployeeList	change_request(__no_group)--change_request;
		eventAcceptanceApplicationList	change_request(__no_group)--change_request;
		eventCommonReportList	change_request(__no_group)--change_request;
		eventApplyPersonalEmplacementList	change_request(__no_group)--change_request;
		eventMaterialChangeInfoList	change_request(__no_group)--change_request;
		eventContractBasicInfoList	change_request(__no_group)--change_request;
		eventMaterialAcceptanceBasicInfoList	change_request(__no_group)--change_request;
		eventMaterialReviewList	change_request(__no_group)--change_request;
		eventMaterialPreservedInfoList	change_request(__no_group)--change_request;
		eventMaterialChangeContractInfoList	change_request(__no_group)--change_request;
		eventReviewList	change_request(__no_group)--change_request;
		eventMaterialChangeDataUploadList	change_request(__no_group)--change_request;
		eventFillPersonalDetailList	change_request(__no_group)--change_request;
		eventProjectWorkPositionList	change_request(__no_group)--change_request;
		eventProjectSupervisorReportBasicInfoList	change_request(__no_group)--change_request;
		eventCommentsList	change_request(__no_group)--change_request;
		eventSubcontractApplicationList	change_request(__no_group)--change_request;
		eventMaterialPreservedBasicInfoList	change_request(__no_group)--change_request;
		eventContractPaymentPhaseList	change_request(__no_group)--change_request;
		eventShowAllTypeStepOneList	change_request(__no_group)--change_request;
		eventLaborDisputeList	change_request(__no_group)--change_request;
		eventProjectManagerReportBasicInfoList	change_request(__no_group)--change_request;
		eventAfterSalesList	change_request(__no_group)--change_request;
		eventApplyDecorationList	change_request(__no_group)--change_request;
		eventTaskReportBasicInfoList	change_request(__no_group)--change_request;
		eventMaterialCommentList	change_request(__no_group)--change_request;
		eventReportCheckItemList	change_request(__no_group)--change_request;
		eventExpectedPayItemCommentsList	change_request(__no_group)--change_request;
		eventLaborSupervisorList	change_request(__no_group)--change_request;
		eventProjectPenaltiesList	change_request(__no_group)--change_request;
		eventApplyEmplacementList	change_request(__no_group)--change_request;
		eventMaterialChangeAuditList	change_request(__no_group)--change_request;
		eventProjectProgressList	change_request(__no_group)--change_request;
		eventContractReviewList	change_request(__no_group)--change_request;
		eventApplyForAdvanceCompensationList	change_request(__no_group)--change_request;
		eventContractCommentList	change_request(__no_group)--change_request;
	}
} depth=2; isRoot = false

meta{bind_with_cr_type=SHOW_ALL_TYPE, name=event_show_all_type_step_two, features=event}
event_show_all_type_step_two{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	simple_text('simple text|简单字符串'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventShowAllTypeStepTwoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=CREATE_ADDITIONAL_CONTRACT, name=event_additional_contract_payment_phase, features=event}
event_additional_contract_payment_phase{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('name|名称'), verb: false, required: true,type:string;
		contract_pay_item	payment_item('$(object)'), verb: false, required: true, referenceBy: eventAdditionalContractPaymentPhaseList,type:contract_pay_item;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		money	adjustment('$12345678.000'), verb: false, required: true,type:money;
		date	expected_pay_time('2099-12-31'), verb: false, required: false,type:date;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAdditionalContractPaymentPhaseList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{bind_with_cr_type=RESOLVE_AFTER_SALES, name=event_resolve_after_sales, features=event}
event_resolve_after_sales{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	after_sales_id('after sales id|null'), verb: false, required: true,type:string;
		string	after_sales_title('after sales title|标题'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	after_sales_description('after sales description|问题描述'), verb: false, required: true,type:string;
		string	comments('comments|备注'), verb: false, required: true,type:string;
		images	images('images()'), verb: false, required: true,type:images;
		string	creator('creator|提交人'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventResolveAfterSalesList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_RECOMMENDATION, name=event_apply_recommendation, features=event}
event_apply_recommendation{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		recommendation_type	recommendation_type('$(object)'), verb: false, required: true, referenceBy: eventApplyRecommendationList,type:recommendation_type;
		string	title('title|标题'), verb: false, required: true,type:string;
		string	comments('comments|备注'), verb: false, required: true,type:string;
		string	contact_name('contact name|联系人'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventApplyRecommendationList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=ADD_DEBIT_CARD, name=event_add_debit_card, features=event}
event_add_debit_card{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	bank('bank|开户银行'), verb: false, required: true,type:string;
		string	account_name('account name|开户名称'), verb: false, required: true,type:string;
		string	bank_address('bank address|开户地址'), verb: false, required: true,type:string;
		string	number('number|银行账号'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAddDebitCardList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_ACCEPTANCE, name=event_material_acceptance_image, features=event}
event_material_acceptance_image{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialAcceptanceImageList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=CREATE_ADDITIONAL_CONTRACT, name=event_additional_contract_basic_info, features=event}
event_additional_contract_basic_info{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		string	contract_id('contract id|null'), verb: false, required: true,type:string;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	name('name|合同名称'), verb: false, required: true,type:string;
		string_longtext	number('text()'), verb: false, required: true,type:string_longtext;
		supplementary_contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: eventAdditionalContractBasicInfoList,type:supplementary_contract_type;
		string	main_contract('main contract|主合同'), verb: false, required: true,type:string;
		string	project_name('project name|工程名称'), verb: false, required: true,type:string;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAdditionalContractBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_ACCEPTANCE, name=event_material_check, features=event}
event_material_check{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	planned_material_count('planned material count|计划材料数量'), verb: false, required: true,type:string;
		string	actual_material_count('actual material count|实际验收数量'), verb: false, required: true,type:string;
		string	actual_arrived_count('actual arrived count|实际到场数量'), verb: false, required: true,type:string;
		string_longtext	is_broken('text()'), verb: false, required: true,type:string_longtext;
		bool	material_matches('true|false'), verb: false, required: true,type:bool;
		bool	meet_quanlity_standard('true|false'), verb: false, required: true,type:bool;
		bool	has_certificates('true|false'), verb: false, required: true,type:bool;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialCheckList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_COMMAND, name=event_project_command, features=event}
event_project_command{
	fields(20){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|项目ID'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	command_name('command name|指令名称'), verb: false, required: true,type:string;
		daily_task_type	directive_type('$(object)'), verb: false, required: true, referenceBy: eventProjectCommandList,type:daily_task_type;
		string	command_number('command number|指令编号'), verb: false, required: true,type:string;
		string	directive_brief('directive brief|指令事由'), verb: false, required: true,type:string;
		bool	has_cost('true|false'), verb: false, required: true,type:bool;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	main_recievers('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	copy_to_recievers('text()'), verb: false, required: false,type:string_longtext;
		string	creator('creator|发起人'), verb: false, required: true,type:string;
		string	create_time('create time|时间'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectCommandList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=ADD_EMPLOYEE, name=event_add_employee, features=event}
event_add_employee{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string_china_mobile_phone	mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		role	role('$(object)'), verb: false, required: true, referenceBy: eventAddEmployeeList,type:role;
		job	job('$(object)'), verb: false, required: true, referenceBy: eventAddEmployeeList,type:job;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAddEmployeeList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{bind_with_cr_type=ACCEPTANCE_APPLICATION, name=event_acceptance_application, features=event}
event_acceptance_application{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('title|标题'), verb: false, required: true,type:string;
		string	project_id('project_id|null'), verb: false, required: true,type:string;
		string	project_name('project_name|工程名称'), verb: false, required: true,type:string;
		daily_task_type	acceptance_type('$(object)'), verb: false, required: true, referenceBy: eventAcceptanceApplicationList,type:daily_task_type;
		string	property_owner_id('property_owner_id|null'), verb: false, required: true,type:string;
		string	property_owner_name('property_owner_name|业主单位'), verb: false, required: true,type:string;
		string	epc_manage_company('epc_manage_company|EPC托管单位'), verb: false, required: true,type:string;
		string_longtext	acceptors('text()'), verb: false, required: true,type:string_longtext;
		date_time	acceptance_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		string	application_unit_id('application_unit_id|null'), verb: false, required: true,type:string;
		string	application_unit('application_unit|申请单位'), verb: false, required: true,type:string;
		string	application_time('application_time|时间'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAcceptanceApplicationList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=TASK_REPORT|TASK_REPORT|TASK_REPORT|TASK_REPORT|TASK_REPORT|PROJECT_MANAGER_REPORT|PROJECT_SUPERVISION_REPORT, name=event_common_report, features=event}
event_common_report{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	content('text()'), verb: false, required: false,type:string_longtext;
		images	images('images()'), verb: false, required: false,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventCommonReportList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_PERSONAL_EMPLACEMENT, name=event_apply_personal_emplacement, features=event}
event_apply_personal_emplacement{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('name|姓名'), verb: false, required: true,type:string;
		string	gender('gender|性别'), verb: false, required: true,type:string;
		string	address('address|住址'), verb: false, required: true,type:string;
		career_type	career_type('$(object)'), verb: false, required: true, referenceBy: eventApplyPersonalEmplacementList,type:career_type;
		business_type	business_type('$(object)'), verb: false, required: true, referenceBy: eventApplyPersonalEmplacementList,type:business_type;
		available_service_location	service_location('$(object)'), verb: false, required: true, referenceBy: eventApplyPersonalEmplacementList,type:available_service_location;
		string_url	home_page('https://www/baidu.com'), verb: false, required: false,type:string_url;
		string	description('description|个人描述'), verb: false, required: true,type:string;
		string_china_mobile_phone	phone('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		string_image	avatar('avatar.jpg'), verb: false, required: true,type:string_image;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventApplyPersonalEmplacementList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_CHANGE, name=event_material_change_info, features=event}
event_material_change_info{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	material_name('material name|材料名称'), verb: false, required: true,type:string;
		string	model('model|型号规格'), verb: false, required: true,type:string;
		material_unit_of_measurement	uom('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeInfoList,type:material_unit_of_measurement;
		string	brand('brand|材料品牌'), verb: false, required: true,type:string;
		double	change_account('12345678.000'), verb: false, required: true,type:double;
		string	price_adjustment('price adjustment|价格调整'), verb: false, required: true,type:string;
		date	application_time('2099-12-31'), verb: false, required: true,type:date;
		string	applicant_unit('applicant unit|变更申请单位'), verb: false, required: true,type:string;
		project_nomination	applicant('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeInfoList,type:project_nomination;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{bind_with_cr_type=CREATE_CONTRACT, name=event_contract_basic_info, features=event}
event_contract_basic_info{
	fields(21){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	contract_type_id('contract type id|null'), verb: false, required: true,type:string;
		string	name('name|合同名称'), verb: false, required: true,type:string;
		string_longtext	number('text()'), verb: false, required: true,type:string_longtext;
		string	contract_type('contract type|合同类型'), verb: false, required: true,type:string;
		contract_status	status('$(object)'), verb: false, required: true, referenceBy: eventContractBasicInfoList,type:contract_status;
		string	project_name('project name|工程名称'), verb: false, required: true,type:string;
		string	project_location('project location|工程地址'), verb: false, required: true,type:string;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	important_rules('text()'), verb: false, required: true,type:string_longtext;
		money	amount('$12345678.000'), verb: false, required: true,type:money;
		merchant	party_a('$(object)'), verb: false, required: true, referenceBy: eventContractBasicInfoListAsPartyA,type:merchant;
		merchant	party_b('$(object)'), verb: false, required: true, referenceBy: eventContractBasicInfoListAsPartyB,type:merchant;
		date_time	start_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		date_time	end_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventContractBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_ACCEPTANCE, name=event_material_acceptance_basic_info, features=event}
event_material_acceptance_basic_info{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('title|验收单名称'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: eventMaterialAcceptanceBasicInfoList,type:standard_contract;
		string	material_name('material name|材料名称'), verb: false, required: true,type:string;
		string	material_type('material type|材料类型'), verb: false, required: true,type:string;
		string	user_part('user part|使用部位'), verb: false, required: true,type:string;
		string	model('model|型号规格'), verb: false, required: true,type:string;
		material_unit_of_measurement	uom('$(object)'), verb: false, required: true, referenceBy: eventMaterialAcceptanceBasicInfoList,type:material_unit_of_measurement;
		string	brand('brand|材料品牌'), verb: false, required: true,type:string;
		string	supplier('supplier|供货单位'), verb: false, required: true,type:string;
		project_nomination	auditor('$(object)'), verb: false, required: true, referenceBy: eventMaterialAcceptanceBasicInfoList,type:project_nomination;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialAcceptanceBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{bind_with_cr_type=REVIEW_MATERIALS, name=event_material_review, features=event}
event_material_review{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	material_id('material id|ID'), verb: false, required: true,type:string;
		string	scene_code('scene code|场景'), verb: false, required: true,type:string;
		bool	passed('true|false'), verb: false, required: true,type:bool;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialReviewList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=CREATE_MATERIAL_PRESERVED_SAMPLE|CREATE_MATERIAL_BID_SAMPLE, name=event_material_preserved_info, features=event}
event_material_preserved_info{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	seal_up_material_name('seal up material name|存样材料名称'), verb: false, required: true,type:string;
		project_nomination	material_manager('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedInfoList,type:project_nomination;
		string	images('images|旁站、巡视、见证资料'), verb: false, required: true,type:string;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	create_time('create time|日期'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_CHANGE, name=event_material_change_contract_info, features=event}
event_material_change_contract_info{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeContractInfoList,type:standard_contract;
		string	material_category_id('material category id|材料分类'), verb: false, required: true,type:string;
		string	material_name('material name|材料名称'), verb: false, required: true,type:string;
		string	model('model|型号规格'), verb: false, required: true,type:string;
		material_unit_of_measurement	uom('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeContractInfoList,type:material_unit_of_measurement;
		string	brand('brand|材料品牌'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeContractInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{bind_with_cr_type=REVIEW, name=event_review, features=event}
event_review{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	audit_record_id('audit record id|null'), verb: false, required: true,type:string;
		string	review_result('review result|审核结论'), verb: false, required: true,type:string;
		string	comments('comments|备注'), verb: false, required: false,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventReviewList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_CHANGE, name=event_material_change_data_upload, features=event}
event_material_change_data_upload{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		images	images('images()'), verb: false, required: true,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeDataUploadList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=FILL_PERSONAL_DETAIL, name=event_fill_personal_detail, features=event}
event_fill_personal_detail{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	merchant_id('merchant id|null'), verb: false, required: true,type:string;
		string_image	avatar('avatar.jpg'), verb: false, required: true,type:string_image;
		string	merchant_name('merchant name|姓名'), verb: false, required: true,type:string;
		string	phone('phone|电话'), verb: false, required: true,type:string;
		string	gender('gender|性别'), verb: false, required: true,type:string;
		string	id_number('id number|身份证号'), verb: false, required: true,type:string;
		string	address('address|家庭住址'), verb: false, required: true,type:string;
		industry_type	industry_type('$(object)'), verb: false, required: true, referenceBy: eventFillPersonalDetailList,type:industry_type;
		engineering_type	engineering_type('$(object)'), verb: false, required: true, referenceBy: eventFillPersonalDetailList,type:engineering_type;
		career_type	career_type('$(object)'), verb: false, required: true, referenceBy: eventFillPersonalDetailList,type:career_type;
		int	working_years('12345678'), verb: false, required: true,type:int;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventFillPersonalDetailList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=ADD_PROJECT_NOMINATION, name=event_project_work_position, features=event}
event_project_work_position{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|项目ID'), verb: false, required: true,type:string;
		string	merchant_id('merchant id|服务商id'), verb: false, required: true,type:string;
		project_organization_type	project_job('$(object)'), verb: false, required: true, referenceBy: eventProjectWorkPositionList,type:project_organization_type;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		project_role	project_role('$(object)'), verb: false, required: true, referenceBy: eventProjectWorkPositionList,type:project_role;
		work_package	work_package('$(object)'), verb: false, required: false, referenceBy: eventProjectWorkPositionList,type:work_package;
		employee_nomination	employee('$(object)'), verb: false, required: true, referenceBy: eventProjectWorkPositionList,type:employee_nomination;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectWorkPositionList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{bind_with_cr_type=PROJECT_SUPERVISION_REPORT, name=event_project_supervisor_report_basic_info, features=event}
event_project_supervisor_report_basic_info{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|项目'), verb: false, required: true,type:string;
		string	daily_task_type_id('daily task type id|null'), verb: false, required: true,type:string;
		string	project_name('火车北站候车室装修工程|三峡大坝装修工程'), verb: false, required: true,type:string;
		string	title('title|标题'), verb: false, required: true,type:string;
		double	temperature('17.66|25.01'), verb: false, required: true,type:double;
		string	weather_conditions('weather conditions|天气情况'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectSupervisorReportBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=COMMENTS, name=event_comments, features=event}
event_comments{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	comment_item_type('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	comment_item_id('text()'), verb: false, required: true,type:string_longtext;
		string	comments('comments|备注'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventCommentsList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=SUBCONTRACT_APPLICATION, name=event_subcontract_application, features=event}
event_subcontract_application{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		project	project('$(object)'), verb: false, required: true, referenceBy: eventSubcontractApplicationList,type:project;
		career_type	application_type('$(object)'), verb: false, required: true, referenceBy: eventSubcontractApplicationList,type:career_type;
		merchant_type	merchant_type('$(object)'), verb: false, required: true, referenceBy: eventSubcontractApplicationList,type:merchant_type;
		string	application_unit('application unit|申请单位'), verb: false, required: true,type:string;
		string	applicant('applicant|申请个人'), verb: false, required: true,type:string;
		work_package_type	work_package_type('$(object)'), verb: false, required: true, referenceBy: eventSubcontractApplicationList,type:work_package_type;
		string_longtext	application_reason('text()'), verb: false, required: true,type:string_longtext;
		string	phone('phone|联系电话'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventSubcontractApplicationList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{bind_with_cr_type=CREATE_MATERIAL_PRESERVED_SAMPLE|CREATE_MATERIAL_BID_SAMPLE, name=event_material_preserved_basic_info, features=event}
event_material_preserved_basic_info{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('title|验收单名称'), verb: false, required: true,type:string;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		standard_contract	contract('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedBasicInfoList,type:standard_contract;
		string	material_name('material name|材料名称'), verb: false, required: true,type:string;
		material_category	material_category('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedBasicInfoList,type:material_category;
		string	user_part('user part|使用部位'), verb: false, required: true,type:string;
		string	model('model|型号规格'), verb: false, required: true,type:string;
		material_unit_of_measurement	uom('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedBasicInfoList,type:material_unit_of_measurement;
		string	brand('brand|材料品牌'), verb: false, required: true,type:string;
		string	supplier('supplier|供货单位'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialPreservedBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{bind_with_cr_type=CREATE_CONTRACT, name=event_contract_payment_phase, features=event}
event_contract_payment_phase{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('name|名称'), verb: false, required: true,type:string;
		merchant	payer('$(object)'), verb: false, required: true, referenceBy: eventContractPaymentPhaseListAsPayer,type:merchant;
		merchant	payee('$(object)'), verb: false, required: true, referenceBy: eventContractPaymentPhaseListAsPayee,type:merchant;
		string_longtext	criteria('text()'), verb: false, required: true,type:string_longtext;
		double	proportion('12345678.000'), verb: false, required: true,type:double;
		money	sub_total('$12345678.000'), verb: false, required: true,type:money;
		money	labor_fee('$12345678.000'), verb: false, required: true,type:money;
		money	material_fee('$12345678.000'), verb: false, required: true,type:money;
		money	other_fee('$12345678.000'), verb: false, required: true,type:money;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		project_progress	project_progress('$(object)'), verb: false, required: true, referenceBy: eventContractPaymentPhaseList,type:project_progress;
		date	expected_pay_time('2099-12-31'), verb: false, required: true,type:date;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventContractPaymentPhaseList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{bind_with_cr_type=SHOW_ALL_TYPE, name=event_show_all_type_step_one, features=event}
event_show_all_type_step_one{
	fields(23){
		string	id('AB'), verb: false, required: true,type:id;
		string	field_text('field_text|短文本'), verb: false, required: true,type:string;
		string	field_id_number('field_id_number|身份证'), verb: false, required: true,type:string;
		string_email	field_email('someone@company.com'), verb: false, required: true,type:string_email;
		string_url	field_url('https://www/baidu.com'), verb: false, required: true,type:string_url;
		string	field_one_of('field_one_of|单选'), verb: false, required: true,type:string;
		string_longtext	field_some_of('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	field_longtext('text()'), verb: false, required: true,type:string_longtext;
		bool	field_boolean('true|false'), verb: false, required: true,type:bool;
		images	field_images('images()'), verb: false, required: true,type:images;
		string_image	field_image('fieldImage.jpg'), verb: false, required: true,type:string_image;
		date	field_date('2099-12-31'), verb: false, required: true,type:date;
		date_time	field_datetime('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		int	field_integer('12345678'), verb: false, required: true,type:int;
		double	field_decimal('12345678.000'), verb: false, required: true,type:double;
		money	field_money('$12345678.000'), verb: false, required: true,type:money;
		merchant	field_biz_candidate('$(object)'), verb: false, required: true, referenceBy: eventShowAllTypeStepOneList,type:merchant;
		string_longtext	field_multi_model('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventShowAllTypeStepOneList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=LABOR_DISPUTE, name=event_labor_dispute, features=event}
event_labor_dispute{
	fields(15){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	title('title|纠纷名称'), verb: false, required: true,type:string;
		work_package	work_package('$(object)'), verb: false, required: true, referenceBy: eventLaborDisputeList,type:work_package;
		labor_dispute_type	type('$(object)'), verb: false, required: true, referenceBy: eventLaborDisputeList,type:labor_dispute_type;
		string	level('level|纠纷等级'), verb: false, required: true,type:string;
		string_longtext	summary('text()'), verb: false, required: true,type:string_longtext;
		string	litigant('litigant|当事人'), verb: false, required: true,type:string;
		project_nomination	applicant('$(object)'), verb: false, required: true, referenceBy: eventLaborDisputeList,type:project_nomination;
		string	create_time('create time|申请时间'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventLaborDisputeList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{bind_with_cr_type=PROJECT_MANAGER_REPORT, name=event_project_manager_report_basic_info, features=event}
event_project_manager_report_basic_info{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	daily_task_type_id('daily task type id|null'), verb: false, required: true,type:string;
		string	project_id('project id|项目'), verb: false, required: true,type:string;
		string	project_name('火车北站候车室装修工程|三峡大坝装修工程'), verb: false, required: true,type:string;
		string	title('title|标题'), verb: false, required: true,type:string;
		double	temperature('17.66|25.01'), verb: false, required: true,type:double;
		string	weather_conditions('weather conditions|天气情况'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectManagerReportBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=AFTER_SALES, name=event_after_sales, features=event}
event_after_sales{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	daily_task_type_id('daily task type id|null'), verb: false, required: true,type:string;
		string	daily_task_type('daily task type|售后类型'), verb: false, required: true,type:string;
		bool	under_warranty('true|false'), verb: false, required: true,type:bool;
		string	title('title|标题'), verb: false, required: true,type:string;
		string	question_description('question description|问题描述'), verb: false, required: true,type:string;
		images	images('images()'), verb: false, required: true,type:images;
		string	creator('creator|创建人'), verb: false, required: true,type:string;
		date_time	time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAfterSalesList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_DECORATION, name=event_apply_decoration, features=event}
event_apply_decoration{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		estate_property_type	property_type('$(object)'), verb: false, required: true, referenceBy: eventApplyDecorationList,type:estate_property_type;
		double	property_area('12345678.000'), verb: false, required: true,type:double;
		string	property_location('property_location|物业地址'), verb: false, required: true,type:string;
		string	contact_name('contact name|联系人'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventApplyDecorationList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=TASK_REPORT, name=event_task_report_basic_info, features=event}
event_task_report_basic_info{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	daily_task_type_id('daily task type id|null'), verb: false, required: true,type:string;
		string	project_name('project name|工程名称'), verb: false, required: true,type:string;
		string	title('title|标题'), verb: false, required: true,type:string;
		string_longtext	subcontractor('text()'), verb: false, required: true,type:string_longtext;
		string	task_name('墙面施工|水电改造|隔离层鼓包二次整改'), verb: false, required: true,type:string;
		string	submitter_id('submitter id|null'), verb: false, required: true,type:string;
		string	submitter('submitter|填报人'), verb: false, required: true,type:string;
		double	temperature('17.66|25.01'), verb: false, required: true,type:double;
		string	weather_conditions('weather conditions|天气情况'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventTaskReportBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=COMMENTS_ON_MATERIALS, name=event_material_comment, features=event}
event_material_comment{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	material_id('material id|ID'), verb: false, required: true,type:string;
		string	scene_code('scene code|场景'), verb: false, required: true,type:string;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialCommentList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_MANAGER_REPORT|PROJECT_SUPERVISION_REPORT, name=event_report_check_item, features=event}
event_report_check_item{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	check_result('check result|检查结果'), verb: false, required: true,type:string;
		string	process_result('process result|处理结果'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventReportCheckItemList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=CREATE_CONTRACT_PAYMENT_APPLICATION, name=event_expected_pay_item_comments, features=event}
event_expected_pay_item_comments{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	pay_item_id('pay item id|null'), verb: false, required: true,type:string;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	document('document|上传资料'), verb: false, required: true,type:string;
		images	images('images()'), verb: false, required: true,type:images;
		string_longtext	send_to('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	cc_to('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventExpectedPayItemCommentsList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=LABOR_SUPERVISOR, name=event_labor_supervisor, features=event}
event_labor_supervisor{
	fields(23){
		string	id('AB'), verb: false, required: true,type:id;
		string	number('number|编号'), verb: false, required: true,type:string;
		string	creator('creator|编制单位/部门'), verb: false, required: true,type:string;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	contract_number('contract number|分包合同编号'), verb: false, required: true,type:string;
		string	bid_price_list('bid price list|中标价格清单上传'), verb: false, required: true,type:string;
		money	total_labor_cost('$12345678.000'), verb: false, required: true,type:money;
		string	project_progress('project progress|发放阶段'), verb: false, required: true,type:string;
		date	plan_pay_date('2099-12-31'), verb: false, required: true,type:date;
		money	plan_pay_amount('$12345678.000'), verb: false, required: true,type:money;
		string	contract_payment_manager('contract payment manager|合同支付负责人'), verb: false, required: true,type:string;
		string	platform_labor_manager('platform labor manager|平台劳务管理负责人'), verb: false, required: true,type:string;
		date	actual_pay_date('2099-12-31'), verb: false, required: true,type:date;
		money	actual_pay_amount('$12345678.000'), verb: false, required: true,type:money;
		string	payment_manager('payment manager|支付负责人'), verb: false, required: true,type:string;
		string	contractor_commitment('contractor commitment|分包单位承诺'), verb: false, required: true,type:string;
		string	create_time('create time|null'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventLaborSupervisorList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_PENALTIES, name=event_project_penalties, features=event}
event_project_penalties{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	penalties_id('penalties id|处罚编号'), verb: false, required: true,type:string;
		string	project_id('project id|项目ID'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		standard_contract	work_package_contract('$(object)'), verb: false, required: true, referenceBy: eventProjectPenaltiesList,type:standard_contract;
		string	daily_task_type_id('daily task type id|处罚类型id'), verb: false, required: true,type:string;
		string	penalties_type('penalties type|处罚类型'), verb: false, required: true,type:string;
		employee_nomination	penalties_executor('$(object)'), verb: false, required: true, referenceBy: eventProjectPenaltiesList,type:employee_nomination;
		money	forfeit('$12345678.000'), verb: false, required: true,type:money;
		string_longtext	reason('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectPenaltiesList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{bind_with_cr_type=APPLY_EMPLACEMENT, name=event_apply_emplacement, features=event}
event_apply_emplacement{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		string	merchant_name('merchant_name|公司名称'), verb: false, required: true,type:string;
		string	merchant_location('merchant_location|公司地址'), verb: false, required: true,type:string;
		partner_type	partner_type('$(object)'), verb: false, required: true, referenceBy: eventApplyEmplacementList,type:partner_type;
		available_service_location	service_location('$(object)'), verb: false, required: true, referenceBy: eventApplyEmplacementList,type:available_service_location;
		string_url	merchant_website('https://www/baidu.com'), verb: false, required: false,type:string_url;
		string	comments('comments|备注'), verb: false, required: true,type:string;
		string	contact_name('contact name|联系人'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventApplyEmplacementList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_MATERIAL_CHANGE, name=event_material_change_audit, features=event}
event_material_change_audit{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_constructor('project constructor|项目建设方'), verb: false, required: true,type:string;
		string	project_supervision('project supervision|项目监理'), verb: false, required: true,type:string;
		string	project_manager('project manager|项目经理'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventMaterialChangeAuditList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_PROGRESS, name=event_project_progress, features=event}
event_project_progress{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	phase_name('phase name|项目阶段'), verb: false, required: true,type:string;
		string	phase_id('phase id|null'), verb: false, required: true,type:string;
		string	title('title|标题'), verb: false, required: true,type:string;
		project_progress_status	project_progress_status('$(object)'), verb: false, required: true, referenceBy: eventProjectProgressList,type:project_progress_status;
		string	brief('brief|简介'), verb: false, required: true,type:string;
		date	plan_start_date('2099-12-31'), verb: false, required: true,type:date;
		date	actual_start_date('2099-12-31'), verb: false, required: true,type:date;
		date	plan_finish_date('2099-12-31'), verb: false, required: true,type:date;
		date	actual_finish_date('2099-12-31'), verb: false, required: true,type:date;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectProgressList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=REVIEW_CONTRACT, name=event_contract_review, features=event}
event_contract_review{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	contract_id('contract id|ID'), verb: false, required: true,type:string;
		string	scene_code('scene code|场景'), verb: false, required: true,type:string;
		bool	passed('true|false'), verb: false, required: true,type:bool;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventContractReviewList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=APPLY_FOR_ADVANCE_COMPENSATION, name=event_apply_for_advance_compensation, features=event}
event_apply_for_advance_compensation{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_id('project id|null'), verb: false, required: true,type:string;
		string	compensation_application_name('compensation application name|标题'), verb: false, required: true,type:string;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	reason('reason|赔付原因'), verb: false, required: true,type:string;
		images	images('images()'), verb: false, required: true,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventApplyForAdvanceCompensationList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=COMMENTS_ON_CONTRACT, name=event_contract_comment, features=event}
event_contract_comment{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	project_name('project name|项目名称'), verb: false, required: true,type:string;
		string	contract_id('contract id|ID'), verb: false, required: true,type:string;
		string	scene_code('scene code|场景'), verb: false, required: true,type:string;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		images	images('images()'), verb: false, required: true,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventContractCommentList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=business_type, group_by=category, features=setting}
business_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('商业连锁|精装楼盘|商会协会|企事业单位|政府机构|其它|咨询服务|设计服务|实施管理服务|招投标服务|造价服务|施工分包服务|技术服务|其它|财务管理|项目管理|金融服务|运营管理|法律服务|其它|建材销售|项目设计|设备租赁|科研教学|执法监督|其它'), verb: false, required: true,type:string;
		string	code('ABCDEFGHIJKLMNOPQRSTUVWXYZ'), verb: false, required: true,type:string;
		string	category('项目建设分类|项目建设分类|项目建设分类|项目建设分类|项目建设分类|项目建设分类|工程服务分类|工程服务分类|工程服务分类|工程服务分类|工程服务分类|工程服务分类|工程服务分类|工程服务分类|工程管理分类|工程管理分类|工程管理分类|工程管理分类|工程管理分类|工程管理分类|行业属性分类|行业属性分类|行业属性分类|行业属性分类|行业属性分类|行业属性分类'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: businessTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		personalEmplacementApplicationList	business_type(__no_group)--business_type;
		eventApplyPersonalEmplacementList	business_type(__no_group)--business_type;
	}
} depth=1; isRoot = false

meta{name=audit_status, features=status, identified_by=code}
audit_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待审核|已通过|未通过'), verb: false, required: true,type:string;
		string	code('PENDING|APPROVED|UNAPPROVED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: auditStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(4){
		supplementaryContractPayItemList	status(__no_group)--status;
		contractPaymentApplicationList	status(__no_group)--status;
		personalEmplacementApplicationList	status(__no_group)--status;
		auditRecordList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{name=audit_record}
audit_record{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	audit_object_type('attendance|salary'), verb: false, required: true,type:string;
		string	audit_object_id('SU00001'), verb: false, required: true,type:string;
		audit_status	status('$(object)'), verb: false, required: true, referenceBy: auditRecordList,type:audit_status;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		merchant	reviewer('$(object)'), verb: false, required: true, referenceBy: auditRecordList,type:merchant;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=comments_record}
comments_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment_object_type('attendance|salary'), verb: false, required: true,type:string;
		string	comment_object_id('SU00001'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		merchant	submitter('$(object)'), verb: false, required: true, referenceBy: commentsRecordList,type:merchant;
		string_longtext	comments('text()'), verb: false, required: true,type:string_longtext;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=cc_record}
cc_record{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		merchant	cc_to('$(object)'), verb: false, required: true, referenceBy: ccRecordList,type:merchant;
		string	cc_item_type('attendance|salary'), verb: false, required: true,type:string;
		string	cc_item_id('SU00001'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=模板中心, name=contract_template_file}
contract_template_file{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX合同模板'), verb: false, required: true,type:string;
		string_document	document_url('file.doc'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractTemplateFileList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		fundingCloseTrusteeshipContractList	contract_template_file(__no_group)--contract_template_file;
		projectCloseTrusteeshipContractList	contract_template_file(__no_group)--contract_template_file;
	}
} depth=1; isRoot = false

meta{vg4platform=模板中心, name=finance_template}
finance_template{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX财务模板'), verb: false, required: true,type:string;
		string_document	document_url('file.doc'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: financeTemplateList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=模板中心, name=five_book_template}
five_book_template{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX优荣五书模板'), verb: false, required: true,type:string;
		string_document	document_url('file.doc'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fiveBookTemplateList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=模板中心, name=project_engineering_template}
project_engineering_template{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX项目工程表单模板'), verb: false, required: true,type:string;
		string_document	document_url('file.doc'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectEngineeringTemplateList,type:platform;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=流程管理, name=process_map}
process_map{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XXX流程'), verb: false, required: true,type:string;
		process	process('$(object)'), verb: false, required: true, referenceBy: processMapList,type:process;
		string_image	process_image('process_image_800_600.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: processMapList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=流程管理, name=process}
process{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx流程'), verb: false, required: true,type:string;
		string	content('xxx流程内容'), verb: false, required: true,type:string;
		string	rules('流程规则'), verb: false, required: true,type:string;
		employee_nomination	creator('$(object)'), verb: false, required: true, referenceBy: processList,type:employee_nomination;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: processList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		processMapList	process(__no_group)--process;
		processAuditList	process(__no_group)--process;
	}
} depth=5; isRoot = false

meta{vg4platform=流程管理, name=todo_list, vg4owner=流程管理}
todo_list{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('垃圾清运|地砖补货'), verb: false, required: true,type:string;
		string	content('垃圾清运垃圾清运垃圾清运垃圾清运'), verb: false, required: true,type:string;
		employee_nomination	creator('$(object)'), verb: false, required: true, referenceBy: todoListList,type:employee_nomination;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: todoListList,type:merchant;
		todo_list_status	todo_list_status('$(object)'), verb: false, required: true, referenceBy: todoListList,type:todo_list_status;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: todoListList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=todo_list_status, identified_by=code, features=setting}
todo_list_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('待办|已完成'), verb: false, required: true,type:string;
		string	code('PENDING|FINISHED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: todoListStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		todoListList	todo_list_status(__no_group)--todo_list_status;
	}
} depth=1; isRoot = false

meta{vg4platform=流程管理, name=process_audit, vg4auditor=流程管理}
process_audit{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx流程督办'), verb: false, required: true,type:string;
		process	process('$(object)'), verb: false, required: true, referenceBy: processAuditList,type:process;
		merchant	auditor('$(object)'), verb: false, required: true, referenceBy: processAuditList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: processAuditList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=流程管理, name=process_application, vg4owner=流程管理}
process_application{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('我的请求'), verb: false, required: true,type:string;
		employee_nomination	creator('$(object)'), verb: false, required: true, referenceBy: processApplicationList,type:employee_nomination;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: processApplicationList,type:merchant;
		date_time_create	creat_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: processApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=合同管理, vg4second_part_merchant=合同管理, name=contract_ledger, vg4first_part_merchant=合同管理}
contract_ledger{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('合同名称'), verb: false, required: true,type:string;
		contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: contractLedgerList,type:contract_type;
		standard_contract	project_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractLedgerListAsProjectParticipatorContract,type:standard_contract;
		standard_contract	project_running_contract('$(object)'), verb: false, required: false, referenceBy: contractLedgerListAsProjectRunningContract,type:standard_contract;
		standard_contract	work_package_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractLedgerListAsWorkPackageParticipatorContract,type:standard_contract;
		merchant	first_part_merchant('$(object)'), verb: false, required: true, referenceBy: contractLedgerListAsFirstPartMerchant,type:merchant;
		merchant	second_part_merchant('$(object)'), verb: false, required: true, referenceBy: contractLedgerListAsSecondPartMerchant,type:merchant;
		money	income('$3000.00|$99999.00|$0.00'), verb: false, required: true,type:money;
		money	outgo('$3000.00|$99999.00|$0.00'), verb: false, required: true,type:money;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractLedgerList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=合同管理, name=contract_risk, vg4owner=合同管理}
contract_risk{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('合同风险名称'), verb: false, required: true,type:string;
		string	risk('合同风险内容'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: contractRiskList,type:contract_type;
		standard_contract	project_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractRiskListAsProjectParticipatorContract,type:standard_contract;
		standard_contract	project_running_contract('$(object)'), verb: false, required: false, referenceBy: contractRiskListAsProjectRunningContract,type:standard_contract;
		standard_contract	work_package_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractRiskListAsWorkPackageParticipatorContract,type:standard_contract;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: contractRiskList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractRiskList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=合同管理, name=contract_report, vg4owner=合同管理}
contract_report{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx合同报表'), verb: false, required: true,type:string;
		contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: contractReportList,type:contract_type;
		standard_contract	project_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractReportListAsProjectParticipatorContract,type:standard_contract;
		standard_contract	project_running_contract('$(object)'), verb: false, required: false, referenceBy: contractReportListAsProjectRunningContract,type:standard_contract;
		standard_contract	work_package_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractReportListAsWorkPackageParticipatorContract,type:standard_contract;
		string	report_link_url('/merchant/report/link'), verb: false, required: true,type:string;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: contractReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=大数据, name=contract_statistic_report, vg4owner=大数据}
contract_statistic_report{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx统计报表名称'), verb: false, required: true,type:string;
		string	report_link_url('/merchant/report/link'), verb: false, required: true,type:string;
		contract_type	contract_type('$(object)'), verb: false, required: true, referenceBy: contractStatisticReportList,type:contract_type;
		standard_contract	project_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractStatisticReportListAsProjectParticipatorContract,type:standard_contract;
		standard_contract	project_running_contract('$(object)'), verb: false, required: false, referenceBy: contractStatisticReportListAsProjectRunningContract,type:standard_contract;
		standard_contract	work_package_participator_contract('$(object)'), verb: false, required: false, referenceBy: contractStatisticReportListAsWorkPackageParticipatorContract,type:standard_contract;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: contractStatisticReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractStatisticReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{vg4platform=大数据, name=project_statistic_report, vg4owner=大数据}
project_statistic_report{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx统计报表名称'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectStatisticReportList,type:project;
		string	report_link_url('/merchant/report/link'), verb: false, required: true,type:string;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: projectStatisticReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectStatisticReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=大数据, name=service_vendor_statistic_report, vg4vendor=大数据, vg4owner=大数据}
service_vendor_statistic_report{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx统计报表名称'), verb: false, required: true,type:string;
		merchant	vendor('$(object)'), verb: false, required: true, referenceBy: serviceVendorStatisticReportListAsVendor,type:merchant;
		string	report_link_url('/merchant/report/link'), verb: false, required: true,type:string;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: serviceVendorStatisticReportListAsOwner,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: serviceVendorStatisticReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=大数据, name=financial_service_statistic_report, vg4vendor=大数据, vg4owner=大数据}
financial_service_statistic_report{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx统计报表名称'), verb: false, required: true,type:string;
		loan_fund	loan_fund('$(object)'), verb: false, required: true, referenceBy: financialServiceStatisticReportList,type:loan_fund;
		loan_application	loan_application('$(object)'), verb: false, required: true, referenceBy: financialServiceStatisticReportList,type:loan_application;
		loan_contract	loan_contract('$(object)'), verb: false, required: true, referenceBy: financialServiceStatisticReportList,type:loan_contract;
		string	report_link_url('/merchant/report/link'), verb: false, required: true,type:string;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: financialServiceStatisticReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: financialServiceStatisticReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=人力资源, name=recruitment_requirement, vg4employee=人力资源}
recruitment_requirement{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('招聘需求'), verb: false, required: true,type:string;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: recruitmentRequirementList,type:merchant;
		date_time	post_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: recruitmentRequirementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		jobPositionList	recruitment_requirement(__no_group)--recruitment_requirement;
	}
} depth=3; isRoot = false

meta{vg4platform=人力资源, name=job_position}
job_position{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('工作岗位 名称'), verb: false, required: true,type:string;
		string	job_description('工作岗位 描述信息'), verb: false, required: true,type:string;
		recruitment_requirement	recruitment_requirement('$(object)'), verb: false, required: true, referenceBy: jobPositionList,type:recruitment_requirement;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: jobPositionList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		candidateTalentList	job_position(__no_group)--job_position;
	}
} depth=4; isRoot = false

meta{vg4platform=人力资源, name=candidate_talent, vg4candidate=人力资源}
candidate_talent{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('人才信息'), verb: false, required: true,type:string;
		job_position	job_position('$(object)'), verb: false, required: true, referenceBy: candidateTalentList,type:job_position;
		merchant	candidate('$(object)'), verb: false, required: true, referenceBy: candidateTalentList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: candidateTalentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=人力资源, vg4employer=人力资源, name=staff_files, vg4employee=人力资源}
staff_files{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('人才信息'), verb: false, required: true,type:string;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: staffFilesListAsEmployer,type:merchant;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: staffFilesListAsEmployee,type:merchant;
		employee_nomination	employment('$(object)'), verb: false, required: true, referenceBy: staffFilesList,type:employee_nomination;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: staffFilesList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=人力资源, vg4employer=人力资源, name=employee_relation, vg4employee=人力资源}
employee_relation{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('人才信息'), verb: false, required: true,type:string;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: employeeRelationListAsEmployer,type:merchant;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: employeeRelationListAsEmployee,type:merchant;
		employee_nomination	employment('$(object)'), verb: false, required: true, referenceBy: employeeRelationList,type:employee_nomination;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeeRelationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=人力资源, vg4employer=人力资源, name=employee_salary}
employee_salary{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('人才信息'), verb: false, required: true,type:string;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: employeeSalaryList,type:merchant;
		money	base_salary('$3000.00|$999.00|$0.00'), verb: false, required: true,type:money;
		money	bonus_salary('$3000.00|$999.00|$0.00'), verb: false, required: true,type:money;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeeSalaryList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=人力资源, vg4employer=人力资源, name=employee_performance, vg4employee=人力资源}
employee_performance{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	summary('张晓明,天水市喜来登,业主代表'), verb: false, required: true,type:string;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: employeePerformanceListAsEmployee,type:merchant;
		double	project_rating('10.0|0.0|5.0'), verb: false, required: true,type:double;
		double	work_package_rating('10.0|0.0|5.0'), verb: false, required: true,type:double;
		double	task_rating('10.0|0.0|5.0'), verb: false, required: true,type:double;
		double	client_rating('10.0|0.0|5.0'), verb: false, required: true,type:double;
		string	rating_month('2099-12'), verb: false, required: true,type:string;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: employeePerformanceListAsEmployer,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeePerformanceList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=merchant_seal, vg4owner=商户管理}
merchant_seal{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XX商户的印章'), verb: false, required: true,type:string;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: merchantSealList,type:merchant;
		string_image	seal_image('seal_200_200.png'), verb: false, required: true,type:string_image;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantSealList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		economicVerificationFormList	merchant_seal(__no_group)--merchant_seal;
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=cooperate_application}
cooperate_application{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('XX合作申请'), verb: false, required: true,type:string;
		string	contact_name('张三'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_mobile('18012341234'), verb: false, required: true,type:string_china_mobile_phone;
		string	contact_address('成都市武侯区天府二街新希望天祥广场'), verb: false, required: true,type:string;
		date_time_create	apply_date_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: cooperateApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=商户管理, name=project_application}
project_application{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('小龙坎火锅店装修'), verb: false, required: true,type:string;
		string	address('成都市武侯区天府二街新希望天祥广场'), verb: false, required: true,type:string;
		string	contact('张三'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('18012341234'), verb: false, required: true,type:string_china_mobile_phone;
		double	area('200.00'), verb: false, required: true,type:double;
		date_time_create	apply_date_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectApplicationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=商户管理, name=project_attract_investment, vg4project=商户管理, vg4post_by=商户管理}
project_attract_investment{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx项目招商'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectAttractInvestmentList,type:project;
		money	project_scale('$999999.00'), verb: false, required: true,type:money;
		string	attract_investment_content('项目招商需求描述'), verb: false, required: true,type:string;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: projectAttractInvestmentList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectAttractInvestmentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=商户管理, name=serivce_vendor_attract_investment, vg4post_by=商户管理}
serivce_vendor_attract_investment{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx服务商招商'), verb: false, required: true,type:string;
		string	attract_investment_content('服务商招商内容'), verb: false, required: true,type:string;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: serivceVendorAttractInvestmentList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: serivceVendorAttractInvestmentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=brand_attract_investment, vg4post_by=商户管理}
brand_attract_investment{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx品牌招商'), verb: false, required: true,type:string;
		string	attract_investment_content('服务商招商内容'), verb: false, required: true,type:string;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: brandAttractInvestmentList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: brandAttractInvestmentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=project_settlement, vg4project=商户管理, vg4responsible_merchant=商户管理}
project_settlement{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目入驻'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectSettlementList,type:project;
		date_time	settlement_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		merchant	responsible_merchant('$(object)'), verb: false, required: true, referenceBy: projectSettlementList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=商户管理, name=service_vendor_settlement, vg4vendor=商户管理}
service_vendor_settlement{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx服务商入驻'), verb: false, required: true,type:string;
		merchant	vendor('$(object)'), verb: false, required: true, referenceBy: serviceVendorSettlementList,type:merchant;
		date_time	settlement_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: serviceVendorSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, vg4partner=商户管理, name=brand_partner_settlement}
brand_partner_settlement{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx牌战略合作商入驻'), verb: false, required: true,type:string;
		merchant	partner('$(object)'), verb: false, required: true, referenceBy: brandPartnerSettlementList,type:merchant;
		date_time	settlement_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: brandPartnerSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=merchant_verification, vg4merchant=商户管理}
merchant_verification{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx商家验证'), verb: false, required: true,type:string;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: merchantVerificationList,type:merchant;
		string	comments('验证备注'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantVerificationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=商户管理, name=qualification_examination}
qualification_examination{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx资格审查'), verb: false, required: true,type:string;
		string	comments('验证备注'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: qualificationExaminationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=商户管理, name=qualification_research}
qualification_research{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx资格调研'), verb: false, required: true,type:string;
		string	comments('验证备注'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: qualificationResearchList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=平台营销, vg4partner=平台营销, name=partner_recommendation}
partner_recommendation{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx伙伴推荐'), verb: false, required: true,type:string;
		merchant	partner('$(object)'), verb: false, required: true, referenceBy: partnerRecommendationList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: partnerRecommendationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=项目运营, name=project_directive, vg4post_by=项目运营, vg4responsible_merchant=项目运营}
project_directive{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目指令'), verb: false, required: true,type:string;
		string	directive('墙体拆除'), verb: false, required: true,type:string;
		merchant	responsible_merchant('$(object)'), verb: false, required: true, referenceBy: projectDirectiveListAsResponsibleMerchant,type:merchant;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: projectDirectiveListAsPostBy,type:merchant;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectDirectiveList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=项目运营, name=project_daily_report, vg4reporter=项目运营, vg4project=项目运营}
project_daily_report{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx项目报告'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectDailyReportList,type:project;
		string	content('报告内容'), verb: false, required: true,type:string;
		string_image	image1('image.png'), verb: false, required: true,type:string_image;
		string_image	image2('image.png'), verb: false, required: true,type:string_image;
		string_image	image3('image.png'), verb: false, required: true,type:string_image;
		string_image	image4('image.png'), verb: false, required: true,type:string_image;
		string_image	image5('image.png'), verb: false, required: true,type:string_image;
		date_time_create	report_datetime('createTime()'), verb: false, required: true,type:date_time_create;
		merchant	reporter('$(object)'), verb: false, required: true, referenceBy: projectDailyReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectDailyReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目运营, name=project_progress_report, vg4reporter=项目运营, vg4project=项目运营}
project_progress_report{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx项目进度'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectProgressReportList,type:project;
		string	project_status('项目进度状态信息'), verb: false, required: true,type:string;
		string_image	image1('image.png'), verb: false, required: true,type:string_image;
		string_image	image2('image.png'), verb: false, required: true,type:string_image;
		string_image	image3('image.png'), verb: false, required: true,type:string_image;
		string_image	image4('image.png'), verb: false, required: true,type:string_image;
		string_image	image5('image.png'), verb: false, required: true,type:string_image;
		date_time_create	report_datetime('createTime()'), verb: false, required: true,type:date_time_create;
		merchant	reporter('$(object)'), verb: false, required: true, referenceBy: projectProgressReportList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectProgressReportList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目运营, name=project_notification, vg4recipient_merchant=项目运营, vg4post_by=项目运营}
project_notification{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目通知'), verb: false, required: true,type:string;
		string	title('项目通知标题'), verb: false, required: true,type:string;
		string	content('项目通知内容'), verb: false, required: true,type:string;
		merchant	recipient_merchant('$(object)'), verb: false, required: true, referenceBy: projectNotificationListAsRecipientMerchant,type:merchant;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: projectNotificationListAsPostBy,type:merchant;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectNotificationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=项目运营, name=design, vg4designer=项目运营, vg4project=项目运营, vg4reviewer=项目运营}
design{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx设计管理'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: designList,type:project;
		work_package	work_package('$(object)'), verb: false, required: true, referenceBy: designList,type:work_package;
		merchant	designer('$(object)'), verb: false, required: true, referenceBy: designListAsDesigner,type:merchant;
		string_document	design_work('design.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	reviewer('$(object)'), verb: false, required: true, referenceBy: designListAsReviewer,type:merchant;
		working_status	design_status('$(object)'), verb: false, required: true, referenceBy: designList,type:working_status;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: designList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		designChangeList	design(__no_group)--design;
	}
} depth=5; isRoot = false

meta{vg4platform=项目运营, name=construction_schema, vg4project=项目运营, vg4post_by=项目运营}
construction_schema{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目施工方案'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: constructionSchemaList,type:project;
		string	schema_content('项目施工方案内容'), verb: false, required: true,type:string;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: constructionSchemaList,type:merchant;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: constructionSchemaList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目运营, name=project_bid, vg4project_owner=项目运营, vg4responsible_merchant=项目运营}
project_bid{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目招标'), verb: false, required: true,type:string;
		string	bid_name('XXX招标文件'), verb: false, required: true,type:string;
		string_document	bid_file('XXX招标结果文件.doc|XXX招标结果文件.pdf'), verb: false, required: true,type:string_document;
		merchant	project_owner('$(object)'), verb: false, required: true, referenceBy: projectBidListAsProjectOwner,type:merchant;
		merchant	responsible_merchant('$(object)'), verb: false, required: false, referenceBy: projectBidListAsResponsibleMerchant,type:merchant;
		string_image	project_owner_signature('signature.jpg'), verb: false, required: true,type:string_image;
		string_image	responsible_merchant_signature('signature.jpg'), verb: false, required: true,type:string_image;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectBidList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=项目运营, vg4employer=项目运营, name=labor_supervision, vg4employee=项目运营}
labor_supervision{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx劳务监督'), verb: false, required: true,type:string;
		merchant	employee('$(object)'), verb: false, required: true, referenceBy: laborSupervisionListAsEmployee,type:merchant;
		merchant	employer('$(object)'), verb: false, required: true, referenceBy: laborSupervisionListAsEmployer,type:merchant;
		string	work_content('工作内容'), verb: false, required: true,type:string;
		date_time	work_date('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		task	work_task('$(object)'), verb: false, required: true, referenceBy: laborSupervisionList,type:task;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: laborSupervisionList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=项目运营, name=safety_instruction, vg4post_by=项目运营}
safety_instruction{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('安全文明'), verb: false, required: true,type:string;
		string	content('不能高空抛物'), verb: false, required: true,type:string;
		merchant	post_by('$(object)'), verb: false, required: true, referenceBy: safetyInstructionList,type:merchant;
		date_time_create	post_date('createTime()'), verb: false, required: true,type:date_time_create;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: safetyInstructionList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4platform=项目运营, name=design_change, vg4designer=项目运营, vg4sponsor=项目运营}
design_change{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx设计变更'), verb: false, required: true,type:string;
		merchant	designer('$(object)'), verb: false, required: true, referenceBy: designChangeListAsDesigner,type:merchant;
		design	design('$(object)'), verb: false, required: true, referenceBy: designChangeList,type:design;
		string	change_content('变更内容'), verb: false, required: true,type:string;
		string_document	change_file('变更CR12345.pdf'), verb: false, required: true,type:string_document;
		merchant	sponsor('$(object)'), verb: false, required: true, referenceBy: designChangeListAsSponsor,type:merchant;
		project	project('$(object)'), verb: false, required: true, referenceBy: designChangeList,type:project;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: designChangeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=项目运营, name=violation, vg4impact_merchant=项目运营, vg4project=项目运营, vg4responsible_merchant=项目运营}
violation{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('未按时完工'), verb: false, required: true,type:string;
		string	description('未按时完工'), verb: false, required: true,type:string;
		string_image	violation_image1('img.jpg'), verb: false, required: true,type:string_image;
		string_image	violation_image2('img.jpg'), verb: false, required: true,type:string_image;
		string_image	violation_image3('img.jpg'), verb: false, required: true,type:string_image;
		string_image	violation_image4('img.jpg'), verb: false, required: true,type:string_image;
		string_image	violation_image5('img.jpg'), verb: false, required: true,type:string_image;
		date	occur_time('2097-03-09'), verb: false, required: true,type:date;
		money	deduct_amount('$1900.88'), verb: false, required: true,type:money;
		project	project('$(object)'), verb: false, required: true, referenceBy: violationList,type:project;
		work_package	related_work_package('$(object)'), verb: false, required: false, referenceBy: violationList,type:work_package;
		merchant	responsible_merchant('$(object)'), verb: false, required: true, referenceBy: violationListAsResponsibleMerchant,type:merchant;
		merchant	impact_merchant('$(object)'), verb: false, required: true, referenceBy: violationListAsImpactMerchant,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: violationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=项目运营, name=project_funding, vg4project=项目运营}
project_funding{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目资金'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectFundingList,type:project;
		money	funding_amount('$300000.00'), verb: false, required: true,type:money;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectFundingList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=construction_start_working_files, vg4project=项目资料, vg4upload_user=项目资料}
construction_start_working_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx开工资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: constructionStartWorkingFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: constructionStartWorkingFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: constructionStartWorkingFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=qualitiy_acceptance_files, vg4project=项目资料, vg4upload_user=项目资料}
qualitiy_acceptance_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx质量验收资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: qualitiyAcceptanceFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: qualitiyAcceptanceFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: qualitiyAcceptanceFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=engineering_experiment_files, vg4project=项目资料, vg4upload_user=项目资料}
engineering_experiment_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx试验资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: engineeringExperimentFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: engineeringExperimentFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: engineeringExperimentFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=construction_process_files, vg4project=项目资料, vg4upload_user=项目资料}
construction_process_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx施工过程资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: constructionProcessFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: constructionProcessFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: constructionProcessFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=necessary_supplement_files, vg4project=项目资料, vg4upload_user=项目资料}
necessary_supplement_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx必要增补资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: necessarySupplementFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: necessarySupplementFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: necessarySupplementFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=construction_completion_files, vg4project=项目资料, vg4upload_user=项目资料}
construction_completion_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx竣工资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: constructionCompletionFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: constructionCompletionFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: constructionCompletionFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=engineering_quality_supervision_files, vg4project=项目资料, vg4upload_user=项目资料}
engineering_quality_supervision_files{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx建筑工程质量监督资料'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionFilesList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionFilesList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionFilesList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=project_files_archive, vg4project=项目资料, vg4upload_user=项目资料}
project_files_archive{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目资料存档'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: projectFilesArchiveList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectFilesArchiveList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectFilesArchiveList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=engineering_quality_supervision_archive, vg4project=项目资料, vg4upload_user=项目资料}
engineering_quality_supervision_archive{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx建筑工程质量监督资料存档'), verb: false, required: true,type:string;
		string_document	document_url('https://www.nationstar.com/Uploads/download/20190419182251.pdf'), verb: false, required: true,type:string_document;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		merchant	upload_user('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionArchiveList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionArchiveList,type:platform;
		project	project('$(object)'), verb: false, required: true, referenceBy: engineeringQualitySupervisionArchiveList,type:project;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=财务管理, name=contract_collection}
contract_collection{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx合同收款管理'), verb: false, required: true,type:string;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractCollectionList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=财务管理, name=contract_payment}
contract_payment{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx合同付款管理'), verb: false, required: true,type:string;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractPaymentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=财务管理, name=contract_settlement}
contract_settlement{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx合同结算管理'), verb: false, required: true,type:string;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=财务管理, name=economic_verification_form, vg4service_vendor=财务管理}
economic_verification_form{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx经济签证单管理'), verb: false, required: true,type:string;
		merchant	service_vendor('$(object)'), verb: false, required: true, referenceBy: economicVerificationFormList,type:merchant;
		date_time	construction_datetime('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		string	content('施工内容'), verb: false, required: true,type:string;
		employee_nomination	responsible_employee('$(object)'), verb: false, required: true, referenceBy: economicVerificationFormList,type:employee_nomination;
		merchant_seal	merchant_seal('$(object)'), verb: false, required: true, referenceBy: economicVerificationFormList,type:merchant_seal;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: economicVerificationFormList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=财务管理, name=project_objective, vg4service_store=财务管理, vg4project=财务管理}
project_objective{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('项目目标管理'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectObjectiveList,type:project;
		merchant	service_store('$(object)'), verb: false, required: true, referenceBy: projectObjectiveList,type:merchant;
		string	objective_content('100天完工'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectObjectiveList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=财务管理, name=project_progress_funding_trusteeship_plan, vg4service_store=财务管理, vg4project=财务管理, vg4owner=财务管理}
project_progress_funding_trusteeship_plan{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目进度资金托管计划'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectProgressFundingTrusteeshipPlanList,type:project;
		money	funding('$103000000.005'), verb: false, required: true,type:money;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: projectProgressFundingTrusteeshipPlanListAsOwner,type:merchant;
		merchant	service_store('$(object)'), verb: false, required: true, referenceBy: projectProgressFundingTrusteeshipPlanListAsServiceStore,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectProgressFundingTrusteeshipPlanList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=财务管理, name=contract_examine}
contract_examine{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx合同审批'), verb: false, required: true,type:string;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		string	comments('验证备注'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: contractExamineList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=财务管理, name=funding_close_trusteeship_contract, vg4funding_consumer=财务管理, vg4funding_vendor=财务管理}
funding_close_trusteeship_contract{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xx资金封闭托管合同'), verb: false, required: true,type:string;
		contract_template_file	contract_template_file('$(object)'), verb: false, required: true, referenceBy: fundingCloseTrusteeshipContractList,type:contract_template_file;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		merchant	funding_vendor('$(object)'), verb: false, required: true, referenceBy: fundingCloseTrusteeshipContractListAsFundingVendor,type:merchant;
		merchant	funding_consumer('$(object)'), verb: false, required: true, referenceBy: fundingCloseTrusteeshipContractListAsFundingConsumer,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fundingCloseTrusteeshipContractList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{vg4store=财务管理, vg4platform=财务管理, name=project_close_trusteeship_contract, vg4project=财务管理, vg4owner=财务管理}
project_close_trusteeship_contract{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx项目封闭拖管合同'), verb: false, required: true,type:string;
		contract_template_file	contract_template_file('$(object)'), verb: false, required: true, referenceBy: projectCloseTrusteeshipContractList,type:contract_template_file;
		string_document	contract_file('contract.docx'), verb: false, required: true,type:string_document;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectCloseTrusteeshipContractList,type:project;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectCloseTrusteeshipContractList,type:platform;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: projectCloseTrusteeshipContractListAsOwner,type:merchant;
		merchant	store('$(object)'), verb: false, required: true, referenceBy: projectCloseTrusteeshipContractListAsStore,type:merchant;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=财务管理, name=funding_close_organization, vg4merchant=财务管理}
funding_close_organization{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('业主责任人|甲方代表|财务|监管员|财务|银行放贷员|银行监管员'), verb: false, required: true,type:string;
		funding_close_organization_type	funding_close_organization_type('$(object)'), verb: false, required: true, referenceBy: fundingCloseOrganizationList,type:funding_close_organization_type;
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: fundingCloseOrganizationList,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fundingCloseOrganizationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=funding_close_organization_type, features=setting, identified_by=code}
funding_close_organization_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('业主方|优荣平台方|银行委贷方'), verb: false, required: true,type:string;
		string	code('OWNER|PLATFORM|BANK'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fundingCloseOrganizationTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		fundingCloseOrganizationList	funding_close_organization_type(__no_group)--funding_close_organization_type;
	}
} depth=1; isRoot = false

meta{vg4store_merchant=财务管理, vg4platform=财务管理, vg4buyer_merchant=财务管理, name=task_order, vg4service_merchant=财务管理}
task_order{
	fields(17){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx任务订单'), verb: false, required: true,type:string;
		task	task('$(object)'), verb: false, required: true, referenceBy: taskOrderList,type:task;
		money	amount('$20000.00'), verb: false, required: true,type:money;
		money	final_amount('$103000000.005'), verb: false, required: true,type:money;
		date_time	paid_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		date_time	deliver_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		date_time	receipt_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		date_time	closed_time('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		task_order_status	status('$(object)'), verb: false, required: true, referenceBy: taskOrderList,type:task_order_status;
		merchant	buyer_merchant('$(object)'), verb: false, required: true, referenceBy: taskOrderListAsBuyerMerchant,type:merchant;
		merchant	service_merchant('$(object)'), verb: false, required: true, referenceBy: taskOrderListAsServiceMerchant,type:merchant;
		merchant	store_merchant('$(object)'), verb: false, required: true, referenceBy: taskOrderListAsStoreMerchant,type:merchant;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: taskOrderList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{vg4platform=财务管理, name=task_order_status, identified_by=code, features=setting}
task_order_status{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('未就绪|待支付|待确认|已取消|已完成|处理中'), verb: false, required: true,type:string;
		string	code('INCOMPLETE|NEED_PAY|NEED_CONFIRM|CANCELLED|FINSIHED|PROCESSING'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: taskOrderStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		taskOrderList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{vg4platform=财务管理, name=work_package_acceptance_settlement, vg4service_vendor=财务管理}
work_package_acceptance_settlement{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx工作包验收结算'), verb: false, required: true,type:string;
		work_package	work_package('$(object)'), verb: false, required: true, referenceBy: workPackageAcceptanceSettlementList,type:work_package;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		merchant	service_vendor('$(object)'), verb: false, required: true, referenceBy: workPackageAcceptanceSettlementList,type:merchant;
		money	settlement_amount('$20000.00'), verb: false, required: true,type:money;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: workPackageAcceptanceSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4platform=财务管理, name=project_acceptance_settlement, vg4project=财务管理, vg4owner=财务管理}
project_acceptance_settlement{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('xxx工作包验收结算'), verb: false, required: true,type:string;
		project	project('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceSettlementList,type:project;
		money	amount('$103000000.005'), verb: false, required: true,type:money;
		merchant	owner('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceSettlementList,type:merchant;
		money	settlement_amount('$20000.00'), verb: false, required: true,type:money;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: projectAcceptanceSettlementList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{vg4platform=项目资料, name=yourong_document}
yourong_document{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('资料名称'), verb: false, required: true,type:string;
		string_document	document('document.docx'), verb: false, required: true,type:string_document;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: yourongDocumentList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{vg4platform=使用指南, name=user_guide}
user_guide{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('优荣装修平台使用指南'), verb: false, required: true,type:string;
		string_document	document('document.docx'), verb: false, required: true,type:string_document;
		string_longtext	content('text()'), verb: false, required: true,type:string_longtext;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: userGuideList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=user_domain, features=ootb}
user_domain{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('用户区域'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(3){
		userAllowListList	domain(__no_group)--domain;
		secUserList	domain(__no_group)--domain;
		publicKeyTypeList	domain(__no_group)--domain;
	}
} depth=0; isRoot = true

meta{name=user_allow_list, features=syssetting}
user_allow_list{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	user_identity('clariones|13808188512'), verb: false, required: true,type:string;
		string	user_special_functions('tester;ios-spokesperson'), verb: false, required: true,type:string;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: userAllowListList,type:user_domain;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=sec_user, features=ootb, identified_by=login,email,mobile}
sec_user{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	login('login'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13900000001'), verb: false, required: true,type:string_china_mobile_phone;
		string_email	email('suddy_chang@163.com'), verb: false, required: true,type:string_email;
		string_password	pwd('*******'), verb: false, required: true,type:string_password;
		string	weixin_openid('wx123456789abcdefghijklmn'), verb: false, required: true,type:string;
		string	weixin_appid('wxapp12098410239840'), verb: false, required: true,type:string;
		string	access_token('jwt_token_12345678'), verb: false, required: true,type:string;
		int	verification_code('0|9999999'), verb: false, required: true,type:int;
		date_time	verification_code_expire('2099-12-31T09:09:09'), verb: false, required: true,type:date_time;
		date_time	last_login_time('2099-12-31T09:09:09'), verb: false, required: false,type:date_time;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: secUserList,type:user_domain;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(5){
		userAppList	sec_user(__no_group)--sec_user;
		loginHistoryList	sec_user(__no_group)--sec_user;
		wechatWorkappIdentityList	sec_user(__no_group)--sec_user;
		wechatMiniappIdentityList	sec_user(__no_group)--sec_user;
		keypairIdentityList	sec_user(__no_group)--sec_user;
	}
} depth=1; isRoot = false

meta{name=user_app, features=ootb}
user_app{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('审车平台|账户管理|接车公司|审车公司|维修公司|顾客'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: userAppList,type:sec_user;
		string	app_icon('users|bank|wechat|bar-chart|user|users'), verb: false, required: true,type:string;
		bool	full_access('true'), verb: false, required: true,type:bool;
		string	permission('MXWR|MXWR'), verb: false, required: true,type:string;
		string	object_type('CarInspectionPlatform|UserDomain|CarReceivingServiceCompany|CarInspectionServiceCompany|CarRepairingServiceCompany|CustomerInfo'), verb: false, required: true,type:string;
		string	object_id('CIP000001|UD000001|CRSC000001|CISC000001|CRSC000001|CI000001'), verb: false, required: true,type:string;
		string	location('/link/to/app'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(2){
		quickLinkList	app(__no_group)--app;
		listAccessList	app(__no_group)--app;
	}
} depth=2; isRoot = false

meta{name=quick_link, features=ootb}
quick_link{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('列表'), verb: false, required: true,type:string;
		string	icon('facebook|google'), verb: false, required: true,type:string;
		string_image	image_path('y-200-200-red.jpg'), verb: false, required: true,type:string_image;
		string	link_target('列表'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: quickLinkList,type:user_app;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=list_access, features=ootb}
list_access{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('列表'), verb: false, required: true,type:string;
		string	internal_name('levelOneCategoryList'), verb: false, required: true,type:string;
		bool	read_permission('true'), verb: false, required: true,type:bool;
		bool	create_permission('true'), verb: false, required: true,type:bool;
		bool	delete_permission('true'), verb: false, required: true,type:bool;
		bool	update_permission('true'), verb: false, required: true,type:bool;
		bool	execution_permission('true'), verb: false, required: true,type:bool;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: listAccessList,type:user_app;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=login_history, features=syslog}
login_history{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		date_time_create	login_time('createTime()'), verb: false, required: true,type:date_time_create;
		string	from_ip('192.168.1.1|192.168.1.2'), verb: false, required: true,type:string;
		string	description('登陆成功'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: loginHistoryList,type:sec_user;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=candidate_container, features=internal,ootb}
candidate_container{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('我只是一个容器'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		candidateElementList	container(__no_group)--container;
	}
} depth=0; isRoot = true

meta{name=candidate_element, features=internal,ootb}
candidate_element{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('搜索到的匹配字段'), verb: false, required: true,type:string;
		string	type('类型描述'), verb: false, required: true,type:string;
		string_image	image('1.jpg'), verb: false, required: true,type:string_image;
		candidate_container	container('$(object)'), verb: false, required: true, referenceBy: candidateElementList,type:candidate_container;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=wechat_workapp_identity}
wechat_workapp_identity{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	corp_id('corporation123'), verb: false, required: true,type:string;
		string	user_id('user123'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatWorkappIdentityList,type:sec_user;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=wechat_miniapp_identity}
wechat_miniapp_identity{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	open_id('wechat_open_id_1234567890'), verb: false, required: true,type:string;
		string	app_id('wechat_miniapp_id_1234567890'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatMiniappIdentityList,type:sec_user;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=keypair_identity}
keypair_identity{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	public_key('text()'), verb: false, required: true,type:string_longtext;
		public_key_type	key_type('$(object)'), verb: false, required: true, referenceBy: keypairIdentityList,type:public_key_type;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: keypairIdentityList,type:sec_user;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=public_key_type}
public_key_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('rsa|ecc'), verb: false, required: true,type:string;
		string	code('rsa|ecc'), verb: false, required: true,type:string;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: publicKeyTypeList,type:user_domain;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(1){
		keypairIdentityList	key_type(__no_group)--key_type;
	}
} depth=1; isRoot = false

meta{name=tree_node}
tree_node{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	node_id('node000001'), verb: false, required: true,type:string;
		string	node_type('nodetype'), verb: false, required: true,type:string;
		int	left_value('1'), verb: false, required: true,type:int;
		int	right_value('10'), verb: false, required: true,type:int;
		int	version('2147483647'), verb: false, required: true,type:version;
	}
	references field(0){
	}
} depth=0; isRoot = true




=================================End Report=================================
