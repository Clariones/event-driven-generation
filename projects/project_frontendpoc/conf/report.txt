
@warning object definition: wechat_workapp_identify: word 'workapp' seems not found in library
@warning object definition: wechat_miniapp_identify: word 'miniapp' seems not found in library
@warning professor.inauguratio_time: word 'inauguratio' seems not found in library
@warning course_major.councelor: word 'councelor' seems not found in library
@warning change_request.commited: word 'commited' seems not found in library
@warning event_show_all_type.field_longtext: word 'longtext' seems not found in library



=================Execute Report (Model Time 200403T1448) @Fri Apr 03 14:57:40 CST 2020, 49 objects and 379 fields===========================



 processing: platform


 processing: user_domain


 processing: user_white_list


 processing: user_white_list.user_domain.domain

Info: Add virtual field [user_white_lists(es)] to <user_domain>
	user_white_list.domain


 processing: sec_user


 processing: sec_user.user_domain.domain

Info: Add virtual field [sec_users(es)] to <user_domain>
	sec_user.domain


 processing: user_app


 processing: user_app.sec_user.sec_user

Info: Add virtual field [user_apps(es)] to <sec_user>
	user_app.sec_user


 processing: quick_link


 processing: quick_link.user_app.app

Info: Add virtual field [quick_links(es)] to <user_app>
	quick_link.app


 processing: list_access


 processing: list_access.user_app.app

Info: Add virtual field [list_accesss(es)] to <user_app>
	list_access.app


 processing: object_access


 processing: object_access.user_app.app

Info: Add virtual field [object_accesss(es)] to <user_app>
	object_access.app


 processing: login_history


 processing: login_history.sec_user.sec_user

Info: Add virtual field [login_historys(es)] to <sec_user>
	login_history.sec_user


 processing: generic_form


 processing: form_message


 processing: form_message.generic_form.form

Info: Add virtual field [form_messages(es)] to <generic_form>
	form_message.form


 processing: form_field_message


 processing: form_field_message.generic_form.form

Info: Add virtual field [form_field_messages(es)] to <generic_form>
	form_field_message.form


 processing: form_field


 processing: form_field.generic_form.form

Info: Add virtual field [form_fields(es)] to <generic_form>
	form_field.form


 processing: form_action


 processing: form_action.generic_form.form

Info: Add virtual field [form_actions(es)] to <generic_form>
	form_action.form


 processing: candidate_container


 processing: candidate_element


 processing: candidate_element.candidate_container.container

Info: Add virtual field [candidate_elements(es)] to <candidate_container>
	candidate_element.container


 processing: wechat_workapp_identify


 processing: wechat_workapp_identify.sec_user.sec_user

Info: Add virtual field [wechat_workapp_identifys(es)] to <sec_user>
	wechat_workapp_identify.sec_user


 processing: wechat_miniapp_identify


 processing: wechat_miniapp_identify.sec_user.sec_user

Info: Add virtual field [wechat_miniapp_identifys(es)] to <sec_user>
	wechat_miniapp_identify.sec_user


 processing: tree_node


 processing: mobile_app


 processing: page


 processing: page.page_type.page_type

Info: Add virtual field [pages(es)] to <page_type>
	page.page_type


 processing: page.mobile_app.mobile_app

Info: Add virtual field [pages(es)] to <mobile_app>
	page.mobile_app


 processing: page_type


 processing: page_type.mobile_app.mobile_app

Info: Add virtual field [page_types(es)] to <mobile_app>
	page_type.mobile_app


 processing: slide


 processing: slide.page.page

Info: Add virtual field [slides(es)] to <page>
	slide.page


 processing: ui_action


 processing: ui_action.page.page

Info: Add virtual field [ui_actions(es)] to <page>
	ui_action.page


 processing: section


 processing: registration


 processing: registration.change_request.change_request

Info: Add virtual field [registrations(es)] to <change_request>
	registration.change_request


 processing: registration.platform.platform

Info: Add virtual field [registrations(es)] to <platform>
	registration.platform


 processing: start_exam


 processing: start_exam.exam_user.user

Info: Add virtual field [start_exams(es)] to <exam_user>
	start_exam.user


 processing: answer_question


 processing: answer_question.exam_user.user

Info: Add virtual field [answer_questions(es)] to <exam_user>
	answer_question.user


 processing: answer_question.user_answer.user_answer

Info: Add virtual field [answer_questions(es)] to <user_answer>
	answer_question.user_answer


 processing: answer_question.change_request.change_request

Info: Add virtual field [answer_questions(es)] to <change_request>
	answer_question.change_request


 processing: exam_status


 processing: exam_status.platform.platform

Info: Add virtual field [exam_statuss(es)] to <platform>
	exam_status.platform


 processing: question


 processing: question.platform.platform

Info: Add virtual field [questions(es)] to <platform>
	question.platform


 processing: exam_ranking


 processing: exam_ranking.platform.platform

Info: Add virtual field [exam_rankings(es)] to <platform>
	exam_ranking.platform


 processing: answer


 processing: answer.question.question

Info: Add virtual field [answers(es)] to <question>
	answer.question


 processing: exam_user


 processing: exam_user.platform.platform

Info: Add virtual field [exam_users(es)] to <platform>
	exam_user.platform


 processing: social_product


 processing: social_product.exam_user.user

Info: Add virtual field [social_products(es)] to <exam_user>
	social_product.user


 processing: wechat_login_info


 processing: wechat_login_info.exam_user.exam_user

Info: Add virtual field [wechat_login_infos(es)] to <exam_user>
	wechat_login_info.exam_user


 processing: exam


 processing: exam.exam_status.status

Info: Add virtual field [exams(es)] to <exam_status>
	exam.status


 processing: exam.exam_user.user

Info: Add virtual field [exams(es)] to <exam_user>
	exam.user


 processing: user_answer


 processing: user_answer.question.question

Info: Add virtual field [user_answers(es)] to <question>
	user_answer.question


 processing: user_answer.exam.exam

Info: Add virtual field [user_answers(es)] to <exam>
	user_answer.exam


 processing: fault_answer


 processing: fault_answer.exam_user.user

Info: Add virtual field [fault_answers(es)] to <exam_user>
	fault_answer.user


 processing: fault_answer.question.question

Info: Add virtual field [fault_answers(es)] to <question>
	fault_answer.question


 processing: school


 processing: school.platform.platform

Info: Add virtual field [schools(es)] to <platform>
	school.platform


 processing: job_title


 processing: job_title.platform.platform

Info: Add virtual field [job_titles(es)] to <platform>
	job_title.platform


 processing: professor


 processing: professor.school.working_school

Info: Add virtual field [professors(es)] to <school>
	professor.working_school


 processing: professor.school.graduate_school

Info: Add virtual field [professors(es)] to <school>
	professor.graduate_school


 processing: professor.job_title.job_title

Info: Add virtual field [professors(es)] to <job_title>
	professor.job_title


 processing: course_major


 processing: course_major.school.owner_school

Info: Add virtual field [course_majors(es)] to <school>
	course_major.owner_school


 processing: course_major.school.qualification_school

Info: Add virtual field [course_majors(es)] to <school>
	course_major.qualification_school


 processing: course_major.professor.teacher

Info: Add virtual field [course_majors(es)] to <professor>
	course_major.teacher


 processing: course_major.professor.councelor

Info: Add virtual field [course_majors(es)] to <professor>
	course_major.councelor


 processing: change_request_type


 processing: change_request_type.platform.platform

Info: Add virtual field [change_request_types(es)] to <platform>
	change_request_type.platform


 processing: change_request


 processing: change_request.change_request_type.request_type

Info: Add virtual field [change_requests(es)] to <change_request_type>
	change_request.request_type


 processing: change_request.platform.platform

Info: Add virtual field [change_requests(es)] to <platform>
	change_request.platform


 processing: event_task_report_basic_info


 processing: event_task_report_basic_info.change_request.change_request

Info: Add virtual field [event_task_report_basic_infos(es)] to <change_request>
	event_task_report_basic_info.change_request


 processing: event_common_report


 processing: event_common_report.change_request.change_request

Info: Add virtual field [event_common_reports(es)] to <change_request>
	event_common_report.change_request


 processing: event_report_check_item


 processing: event_report_check_item.change_request.change_request

Info: Add virtual field [event_report_check_items(es)] to <change_request>
	event_report_check_item.change_request


 processing: event_show_all_type


 processing: event_show_all_type.change_request.change_request

Info: Add virtual field [event_show_all_types(es)] to <change_request>
	event_show_all_type.change_request


 processing: event_project_manager_report_basic_info


 processing: event_project_manager_report_basic_info.change_request.change_request

Info: Add virtual field [event_project_manager_report_basic_infos(es)] to <change_request>
	event_project_manager_report_basic_info.change_request


**************************************************

meta{name=platform}
platform{
	fields(4){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('链问链答考试中心'), verb: false, required: true,type:string;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(9){
		registrationList	platform(__no_group)--platform;
		examStatusList	platform(__no_group)--platform;
		questionList	platform(__no_group)--platform;
		examRankingList	platform(__no_group)--platform;
		examUserList	platform(__no_group)--platform;
		schoolList	platform(__no_group)--platform;
		jobTitleList	platform(__no_group)--platform;
		changeRequestTypeList	platform(__no_group)--platform;
		changeRequestList	platform(__no_group)--platform;
	}
} depth=0; isRoot = true

meta{name=user_domain, features=ootb}
user_domain{
	fields(3){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('用户区域'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		userWhiteListList	domain(__no_group)--domain;
		secUserList	domain(__no_group)--domain;
	}
} depth=0; isRoot = true

meta{name=user_white_list, features=syssetting}
user_white_list{
	fields(5){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	user_identity('clariones|13808188512'), verb: false, required: true,type:string;
		string	user_special_functions('tester;ios-spokesperson'), verb: false, required: true,type:string;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: userWhiteListList,type:user_domain;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=sec_user, features=ootb, identified_by=login,email,mobile}
sec_user{
	fields(13){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	login('login'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13900000001'), verb: false, required: true,type:string_china_mobile_phone;
		string_email	email('suddy_chang@163.com'), verb: false, required: true,type:string_email;
		string_password	pwd('*******'), verb: false, required: true,type:string_password;
		string	weixin_openid('wx123456789abcdefghijklmn'), verb: false, required: true,type:string;
		string	weixin_appid('wxapp12098410239840'), verb: false, required: true,type:string;
		string	access_token('jwt_token_12345678'), verb: false, required: true,type:string;
		int	verification_code('0|9999999'), verb: false, required: true,type:int;
		date_time	verification_code_expire('2099-12-31T09:09:09'), verb: false, required: true,type:date_time;
		date_time	last_login_time('2099-12-31T09:09:09'), verb: false, required: false,type:date_time;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: secUserList,type:user_domain;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		userAppList	sec_user(__no_group)--sec_user;
		loginHistoryList	sec_user(__no_group)--sec_user;
		wechatWorkappIdentifyList	sec_user(__no_group)--sec_user;
		wechatMiniappIdentifyList	sec_user(__no_group)--sec_user;
	}
} depth=1; isRoot = false

meta{name=user_app, features=ootb}
user_app{
	fields(10){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('审车平台|账户管理|接车公司|审车公司|维修公司|顾客'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: userAppList,type:sec_user;
		string	app_icon('users|bank|wechat|bar-chart|user|users'), verb: false, required: true,type:string;
		bool	full_access('true'), verb: false, required: true,type:bool;
		string	permission('MXWR|MXWR'), verb: false, required: true,type:string;
		string	object_type('CarInspectionPlatform|UserDomain|CarReceivingServiceCompany|CarInspectionServiceCompany|CarRepairingServiceCompany|CustomerInfo'), verb: false, required: true,type:string;
		string	object_id('CIP000001|UD000001|CRSC000001|CISC000001|CRSC000001|CI000001'), verb: false, required: true,type:string;
		string	location('/link/to/app'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		quickLinkList	app(__no_group)--app;
		listAccessList	app(__no_group)--app;
		objectAccessList	app(__no_group)--app;
	}
} depth=2; isRoot = false

meta{name=quick_link, features=ootb}
quick_link{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('列表'), verb: false, required: true,type:string;
		string	icon('facebook|google'), verb: false, required: true,type:string;
		string_image	image_path('y-200-200-red.jpg'), verb: false, required: true,type:string_image;
		string	link_target('列表'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: quickLinkList,type:user_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=list_access, features=ootb}
list_access{
	fields(10){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('列表'), verb: false, required: true,type:string;
		string	internal_name('levelOneCategoryList'), verb: false, required: true,type:string;
		bool	read_permission('true'), verb: false, required: true,type:bool;
		bool	create_permission('true'), verb: false, required: true,type:bool;
		bool	delete_permission('true'), verb: false, required: true,type:bool;
		bool	update_permission('true'), verb: false, required: true,type:bool;
		bool	execution_permission('true'), verb: false, required: true,type:bool;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: listAccessList,type:user_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=object_access, features=ootb}
object_access{
	fields(14){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('控制访问列表1'), verb: false, required: true,type:string;
		string	object_type('FranchiseeStoreCountryCenter|AccountSet'), verb: false, required: true,type:string;
		string	list1('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list2('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list3('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list4('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list5('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list6('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list7('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list8('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list9('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: objectAccessList,type:user_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=login_history, features=syslog}
login_history{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		date_time_create	login_time('createTime()'), verb: false, required: true,type:date_time_create;
		string	from_ip('192.168.1.1|192.168.1.2'), verb: false, required: true,type:string;
		string	description('登陆成功'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: loginHistoryList,type:sec_user;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=generic_form, features=internal,ootb}
generic_form{
	fields(4){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('登记输入单'), verb: false, required: true,type:string;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		formMessageList	form(__no_group)--form;
		formFieldMessageList	form(__no_group)--form;
		formFieldList	form(__no_group)--form;
		formActionList	form(__no_group)--form;
	}
} depth=0; isRoot = true

meta{name=form_message, features=internal,ootb}
form_message{
	fields(5){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('字段组合错误'), verb: false, required: true,type:string;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formMessageList,type:generic_form;
		string	level('success|info|warning|danger'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=form_field_message, features=internal,ootb}
form_field_message{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('输入错误'), verb: false, required: true,type:string;
		string	parameter_name('name'), verb: false, required: true,type:string;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldMessageList,type:generic_form;
		string	level('success|info|warning|danger'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=form_field, features=internal,ootb}
form_field{
	fields(18){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	label('姓名|年龄|出生地|国籍'), verb: false, required: true,type:string;
		string	locale_key('name|age|birth_place|country'), verb: false, required: true,type:string;
		string	parameter_name('name'), verb: false, required: true,type:string;
		string	type('text|longtext|date|date_time|money|url|image|password|number|switch|vcode'), verb: false, required: true,type:string;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldList,type:generic_form;
		string	placeholder('姓名就是你身份证上的名字'), verb: false, required: true,type:string;
		string	default_value('李一一'), verb: false, required: true,type:string;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true,type:string;
		string	field_group('基础信息|扩展信息'), verb: false, required: true,type:string;
		string	minimum_value('maybe any value'), verb: false, required: true,type:string;
		string	maximum_value('a value expression'), verb: false, required: true,type:string;
		bool	required('true|false'), verb: false, required: true,type:bool;
		bool	disabled('true|false'), verb: false, required: true,type:bool;
		bool	custom_rendering('false'), verb: false, required: true,type:bool;
		string	candidate_values('|||男,女|高,矮'), verb: false, required: false,type:string;
		string	suggest_values('|||男,女|高,矮'), verb: false, required: false,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=form_action, features=internal,ootb}
form_action{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	label('功能'), verb: false, required: true,type:string;
		string	locale_key('name'), verb: false, required: true,type:string;
		string	action_key('save|update|remove'), verb: false, required: true,type:string;
		string	level('default|warning|danger|primary'), verb: false, required: true,type:string;
		string	url('genericFormManager/name/name0002/name0003/'), verb: false, required: true,type:string;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formActionList,type:generic_form;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=candidate_container, features=internal,ootb}
candidate_container{
	fields(3){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('我只是一个容器'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		candidateElementList	container(__no_group)--container;
	}
} depth=0; isRoot = true

meta{name=candidate_element, features=internal,ootb}
candidate_element{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('搜索到的匹配字段'), verb: false, required: true,type:string;
		string	type('类型描述'), verb: false, required: true,type:string;
		string_image	image('1.jpg'), verb: false, required: true,type:string_image;
		candidate_container	container('$(object)'), verb: false, required: true, referenceBy: candidateElementList,type:candidate_container;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=wechat_workapp_identify}
wechat_workapp_identify{
	fields(7){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	corp_id('corporation123'), verb: false, required: true,type:string;
		string	user_id('user123'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatWorkappIdentifyList,type:sec_user;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=wechat_miniapp_identify}
wechat_miniapp_identify{
	fields(7){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	open_id('wechat_open_id_1234567890'), verb: false, required: true,type:string;
		string	app_id('wechat_miniapp_id_1234567890'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatMiniappIdentifyList,type:sec_user;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=tree_node}
tree_node{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	node_id('node000001'), verb: false, required: true,type:string;
		string	node_type('nodetype'), verb: false, required: true,type:string;
		int	left_value('1'), verb: false, required: true,type:int;
		int	right_value('10'), verb: false, required: true,type:int;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=0; isRoot = true

meta{name=mobile_app, features=ootb}
mobile_app{
	fields(3){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('移动端配置'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		pageList	mobile_app(__no_group)--mobile_app;
		pageTypeList	mobile_app(__no_group)--mobile_app;
	}
} depth=0; isRoot = true

meta{name=page}
page{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	page_title('首页'), verb: false, required: true,type:string;
		string	link_to_url('首页'), verb: false, required: true,type:string;
		page_type	page_type('$(object)'), verb: false, required: true, referenceBy: pageList,type:page_type;
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageList,type:mobile_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		slideList	page(__no_group)--page;
		uiActionList	page(__no_group)--page;
	}
} depth=2; isRoot = false

meta{name=page_type, features=status, identified_by=code}
page_type{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('首页|我的|Generic Page|Listof Page|功能大厅|普通'), verb: false, required: true,type:string;
		string	code('home|me|generic-page|listof-page|service-center|simple'), verb: false, required: true,type:string;
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageTypeList,type:mobile_app;
		bool	footer_tab('true|false'), verb: false, required: true,type:bool;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		pageList	page_type(__no_group)--page_type;
	}
} depth=1; isRoot = false

meta{name=slide}
slide{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string	name('首页Focus的内容'), verb: false, required: true,type:string;
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string_image	video_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string	link_to_url('|/section/article/'), verb: false, required: false,type:string;
		page	page('$(object)'), verb: false, required: true, referenceBy: slideList,type:page;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=ui_action}
ui_action{
	fields(10){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	code('submit|share|view|more'), verb: false, required: true,type:string;
		string	icon('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	title('提交|分享|查看|更多'), verb: false, required: true,type:string;
		string	brief('Submit|Share|View|View More'), verb: false, required: true,type:string;
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string	link_to_url('/section/article/'), verb: false, required: true,type:string;
		string_longtext	extra_data('text()'), verb: false, required: true,type:string_longtext;
		page	page('$(object)'), verb: false, required: true, referenceBy: uiActionList,type:page;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=section}
section{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('文章|作品'), verb: false, required: true,type:string;
		string	brief('Article|Artwork'), verb: false, required: true,type:string;
		string	icon('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	view_group('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	link_to_url('/section/article/'), verb: false, required: true,type:string;
		string	page('${page}'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=0; isRoot = true

meta{bind_with_cr_type=REGISTER|START_EXAM|ANSWER, name=registration, features=event}
registration{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	nick_name('豆豆鬼'), verb: false, required: true,type:string;
		string_image	avatar('share.jpg'), verb: false, required: true,type:string_image;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: registrationList,type:change_request;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: registrationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=START_EXAM, name=start_exam, vg4user=home/首页动作}
start_exam{
	fields(4){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	nick_name('豆豆鬼参与考试'), verb: false, required: true,type:string;
		exam_user	user('$(object)'), verb: false, required: true, referenceBy: startExamList,type:exam_user;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{bind_with_cr_type=ANSWER, name=answer_question, features=event, vg4user=home/题目相关}
answer_question{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	nick_name('豆豆鬼参与考试'), verb: false, required: true,type:string;
		exam_user	user('$(object)'), verb: false, required: true, referenceBy: answerQuestionList,type:exam_user;
		user_answer	user_answer('$(object)'), verb: false, required: true, referenceBy: answerQuestionList,type:user_answer;
		string	answer('A|B|C'), verb: false, required: true,type:string;
		string_image	big_answer('image.jpg'), verb: false, required: true,type:string_image;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: answerQuestionList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=exam_status, identified_by=code, features=status}
exam_status{
	fields(5){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('考试中|考试完成'), verb: false, required: true,type:string;
		string	code('STARTED|COMPLETED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: examStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		examList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{name=question}
question{
	fields(11){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	topic('区块链是什么技术，下面最接近的回答是什么'), verb: false, required: true,type:string;
		string	level('低|中|高'), verb: false, required: true,type:string;
		string	option_a('网络技术'), verb: false, required: true,type:string;
		string	option_b('电子技术'), verb: false, required: true,type:string;
		string	option_c('机械技术'), verb: false, required: true,type:string;
		string	option_d('太空技术'), verb: false, required: true,type:string;
		string	option_e('建筑技术'), verb: false, required: true,type:string;
		string	right_answer('A|B|C|D|E'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: questionList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		answerList	question(__no_group)--question;
		userAnswerList	question(__no_group)--question;
		faultAnswerList	question(__no_group)--question;
	}
} depth=1; isRoot = false

meta{name=exam_ranking}
exam_ranking{
	fields(5){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('张喜来**'), verb: false, required: true,type:string;
		string_image	avatar('wechat.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: examRankingList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=answer}
answer{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('网络技术'), verb: false, required: true,type:string;
		string	comment('区块链是基于现有互联网的技术'), verb: false, required: true,type:string;
		question	question('$(object)'), verb: false, required: true, referenceBy: answerList,type:question;
		string_document	relate_document('a.pdf'), verb: false, required: true,type:string_document;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=exam_user}
exam_user{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('张三|李四|王五'), verb: false, required: true,type:string;
		string_image	avatar('wechat.jpg'), verb: false, required: true,type:string_image;
		string_china_mobile_phone	mobile_phone('13880964614'), verb: false, required: true,type:string_china_mobile_phone;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		string	user_type('公务员|学生|自由职业者|农民'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: examUserList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(6){
		startExamList	user(首页动作)--user;
		answerQuestionList	user(题目相关)--user;
		socialProductList	user(个人推荐)--user;
		wechatLoginInfoList	exam_user(个人相关)--exam_user;
		examList	user(首页动作)--user;
		faultAnswerList	user(题目相关)--user;
	}
} depth=1; isRoot = false

meta{name=social_product, vg4user=home/个人推荐}
social_product{
	fields(10){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	product_name('张三|李四|王五'), verb: false, required: true,type:string;
		string	description('产品基本描述'), verb: false, required: true,type:string;
		string	brand('可口可乐|宝洁|爱马仕'), verb: false, required: true,type:string;
		string_image	hero_image('a.jpg'), verb: false, required: true,type:string_image;
		images	images('images()'), verb: false, required: true,type:images;
		money	list_price('$1.2|$5.4|$100.0'), verb: false, required: true,type:money;
		money	sale_price('$0.99|$3.99'), verb: false, required: true,type:money;
		exam_user	user('$(object)'), verb: false, required: true, referenceBy: socialProductList,type:exam_user;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{vg4exam_user=me/个人相关, name=wechat_login_info, identified_by=openid_id}
wechat_login_info{
	fields(7){
		string	id('ABCD'), verb: false, required: true,type:string;
		exam_user	exam_user('$(object)'), verb: false, required: true, referenceBy: wechatLoginInfoList,type:exam_user;
		string	app_id('user123'), verb: false, required: true,type:string;
		string	open_id('user123'), verb: false, required: true,type:string;
		string	session_key('session123'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=exam, vg4user=home/首页动作}
exam{
	fields(9){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('区块链技术考试'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		exam_status	status('$(object)'), verb: false, required: true, referenceBy: examList,type:exam_status;
		images	my_images('images()'), verb: false, required: true,type:images;
		images	photos('images()'), verb: false, required: true,type:images;
		exam_user	user('$(object)'), verb: false, required: true, referenceBy: examList,type:exam_user;
		int	score('100'), verb: false, required: true,type:int;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		userAnswerList	exam(__no_group)--exam;
	}
} depth=2; isRoot = false

meta{name=user_answer}
user_answer{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	topic('区块链是什么技术，下面最接近的回答是什么'), verb: false, required: true,type:string;
		string	user_select('A'), verb: false, required: true,type:string;
		question	question('$(object)'), verb: false, required: true, referenceBy: userAnswerList,type:question;
		exam	exam('$(object)'), verb: false, required: true, referenceBy: userAnswerList,type:exam;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		answerQuestionList	user_answer(__no_group)--user_answer;
	}
} depth=3; isRoot = false

meta{name=fault_answer, vg4user=me/题目相关}
fault_answer{
	fields(9){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	topic('区块链是什么技术，下面最接近的回答是什么'), verb: false, required: true,type:string;
		string	your_answer('A'), verb: false, required: true,type:string;
		string	right_answer('ABCD'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		exam_user	user('$(object)'), verb: false, required: true, referenceBy: faultAnswerList,type:exam_user;
		question	question('$(object)'), verb: false, required: true, referenceBy: faultAnswerList,type:question;
		int	fault_times('999'), verb: false, required: true,type:int;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=school}
school{
	fields(5){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('电子科技大学|四川大学|西南交通大学|四川农业大学|西南财经大学'), verb: false, required: true,type:string;
		string	type('工科|综合|工科|农业|财经'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: schoolList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		professorListAsWorkingSchool	working_school(__no_group)--working_school;
		professorListAsGraduateSchool	graduate_school(__no_group)--working_school;
		courseMajorListAsOwnerSchool	owner_school(__no_group)--owner_school;
		courseMajorListAsQualificationSchool	qualification_school(__no_group)--owner_school;
	}
} depth=1; isRoot = false

meta{name=job_title, features=tree}
job_title{
	fields(4){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('初级职称|助教|讲师|中级职称|副教授|教授|高级职称|院士|校董'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: jobTitleList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		professorList	job_title(__no_group)--job_title;
	}
} depth=1; isRoot = false

meta{name=professor, group_by=job_title,gender}
professor{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('卿希泰|项楚|曹顺庆|罗志田|钟本和|詹石窗|霍巍|曾忠东|陈永正|邓常春|邓国营|邓菊秋|邓翔杜|江龚勤|林龚秀|国顾婧|韩立|达黄勤'), verb: false, required: true,type:string;
		string_gender	gender('男|女'), verb: false, required: true,type:string_gender;
		string	inauguratio_time('2019年|2003年|1988年'), verb: false, required: true,type:string;
		school	working_school('$(object)'), verb: false, required: true, referenceBy: professorListAsWorkingSchool,type:school;
		school	graduate_school('$(object)'), verb: false, required: true, referenceBy: professorListAsGraduateSchool,type:school;
		job_title	job_title('$(object)'), verb: false, required: true, referenceBy: professorList,type:job_title;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		courseMajorListAsTeacher	teacher(__no_group)--teacher;
		courseMajorListAsCouncelor	councelor(__no_group)--teacher;
	}
} depth=2; isRoot = false

meta{name=course_major}
course_major{
	fields(7){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('经济学|法学|文学|历史学|工程力学|机械设计制造及其自动化|材料成型及控制工程|工业设计|过程装备与控制工程|测控技术与仪器|金属材料工程|无机非金属材料工程|高分子材料与工程|电气工程及其自动化'), verb: false, required: true,type:string;
		school	owner_school('$(object)'), verb: false, required: true, referenceBy: courseMajorListAsOwnerSchool,type:school;
		school	qualification_school('$(object)'), verb: false, required: true, referenceBy: courseMajorListAsQualificationSchool,type:school;
		professor	teacher('$(object)'), verb: false, required: true, referenceBy: courseMajorListAsTeacher,type:professor;
		professor	councelor('$(object)'), verb: false, required: true, referenceBy: courseMajorListAsCouncelor,type:professor;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=change_request_type, identified_by=code, features=cr_type}
change_request_type{
	fields(9){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('数据类型展示|项目经理日志|施工日志'), verb: false, required: true,type:string;
		string	code('SHOW_ALL_TYPE|PROJECT_MANAGER_DAILY_REPORT|TASK_DAILY_REPORT'), verb: false, required: true,type:string;
		string	icon('table|tachometer|calendar'), verb: false, required: true,type:string;
		int	display_order('1|2|3|4|5|6'), verb: false, required: true,type:int;
		string_longtext	bind_types('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	step_configuration('text()'), verb: false, required: true,type:string_longtext;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		changeRequestList	request_type(__no_group)--request_type;
	}
} depth=1; isRoot = false

meta{name=change_request, features=change_request}
change_request{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('注册|开始考试|答题'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		string_client_ip	remote_ip('remoteIp()'), verb: false, required: true,type:string_client_ip;
		change_request_type	request_type('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:change_request_type;
		bool	commited('false'), verb: false, required: true,type:bool;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(7){
		registrationList	change_request(__no_group)--change_request;
		answerQuestionList	change_request(__no_group)--change_request;
		eventTaskReportBasicInfoList	change_request(__no_group)--change_request;
		eventCommonReportList	change_request(__no_group)--change_request;
		eventReportCheckItemList	change_request(__no_group)--change_request;
		eventShowAllTypeList	change_request(__no_group)--change_request;
		eventProjectManagerReportBasicInfoList	change_request(__no_group)--change_request;
	}
} depth=2; isRoot = false

meta{bind_with_cr_type=TASK_DAILY_REPORT, name=event_task_report_basic_info, features=event}
event_task_report_basic_info{
	fields(12){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	task_id('task id|工程'), verb: false, required: true,type:string;
		string	task_name('墙面施工|水电改造|隔离层鼓包二次整改'), verb: false, required: true,type:string;
		string	subcontractor_name('四川闫明建筑公司|活力装修设计工作室'), verb: false, required: true,type:string;
		string	responsible_name('张黎明|李大力'), verb: false, required: true,type:string;
		double	temperature('17.66|25.01'), verb: false, required: true,type:double;
		string	weather_conditions('weather conditions|天气情况'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventTaskReportBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_MANAGER_DAILY_REPORT|TASK_DAILY_REPORT|TASK_DAILY_REPORT|TASK_DAILY_REPORT|TASK_DAILY_REPORT|TASK_DAILY_REPORT, name=event_common_report, features=event}
event_common_report{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string_longtext	content('text()'), verb: false, required: false,type:string_longtext;
		images	images('images()'), verb: false, required: false,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventCommonReportList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_MANAGER_DAILY_REPORT, name=event_report_check_item, features=event}
event_report_check_item{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	check_result('check result|检查结果'), verb: false, required: true,type:string;
		string	process_result('process result|处理结果'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventReportCheckItemList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=SHOW_ALL_TYPE, name=event_show_all_type, features=event}
event_show_all_type{
	fields(22){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	field_text('field_text|短文本'), verb: false, required: true,type:string;
		string	field_id_number('field_id_number|身份证'), verb: false, required: true,type:string;
		string_email	field_email('someone@company.com'), verb: false, required: true,type:string_email;
		string_url	field_url('https://www/baidu.com'), verb: false, required: true,type:string_url;
		string	field_one_of('field_one_of|单选'), verb: false, required: true,type:string;
		string	field_some_of('field_some_of|多选'), verb: false, required: true,type:string;
		string_longtext	field_longtext('text()'), verb: false, required: true,type:string_longtext;
		bool	field_boolean('true|false'), verb: false, required: true,type:bool;
		images	field_images('images()'), verb: false, required: true,type:images;
		string_image	field_image('fieldImage.jpg'), verb: false, required: true,type:string_image;
		date	field_date('2099-12-31'), verb: false, required: true,type:date;
		date_time	field_datetime('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		time	field_time('23:59:00'), verb: false, required: true,type:time;
		int	field_integer('12345678'), verb: false, required: true,type:int;
		double	field_decimal('12345678.000'), verb: false, required: true,type:double;
		money	field_money('$12345678.000'), verb: false, required: true,type:money;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventShowAllTypeList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_MANAGER_DAILY_REPORT, name=event_project_manager_report_basic_info, features=event}
event_project_manager_report_basic_info{
	fields(10){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	project_id('project id|项目'), verb: false, required: true,type:string;
		string	project_name('火车北站候车室装修工程|三峡大坝装修工程'), verb: false, required: true,type:string;
		double	temperature('17.66|25.01'), verb: false, required: true,type:double;
		string	weather_conditions('weather conditions|天气情况'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectManagerReportBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=platform}
platform{
	fields(4){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('链问链答考试中心'), verb: false, required: true,type:string;
		string_longtext	description('text()'), verb: false, required: true,type:string_longtext;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(9){
		registrationList	platform(__no_group)--platform;
		examStatusList	platform(__no_group)--platform;
		questionList	platform(__no_group)--platform;
		examRankingList	platform(__no_group)--platform;
		examUserList	platform(__no_group)--platform;
		schoolList	platform(__no_group)--platform;
		jobTitleList	platform(__no_group)--platform;
		changeRequestTypeList	platform(__no_group)--platform;
		changeRequestList	platform(__no_group)--platform;
	}
} depth=0; isRoot = true

meta{name=user_domain, features=ootb}
user_domain{
	fields(3){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('用户区域'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		userWhiteListList	domain(__no_group)--domain;
		secUserList	domain(__no_group)--domain;
	}
} depth=0; isRoot = true

meta{name=user_white_list, features=syssetting}
user_white_list{
	fields(5){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	user_identity('clariones|13808188512'), verb: false, required: true,type:string;
		string	user_special_functions('tester;ios-spokesperson'), verb: false, required: true,type:string;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: userWhiteListList,type:user_domain;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=sec_user, features=ootb, identified_by=login,email,mobile}
sec_user{
	fields(13){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	login('login'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13900000001'), verb: false, required: true,type:string_china_mobile_phone;
		string_email	email('suddy_chang@163.com'), verb: false, required: true,type:string_email;
		string_password	pwd('*******'), verb: false, required: true,type:string_password;
		string	weixin_openid('wx123456789abcdefghijklmn'), verb: false, required: true,type:string;
		string	weixin_appid('wxapp12098410239840'), verb: false, required: true,type:string;
		string	access_token('jwt_token_12345678'), verb: false, required: true,type:string;
		int	verification_code('0|9999999'), verb: false, required: true,type:int;
		date_time	verification_code_expire('2099-12-31T09:09:09'), verb: false, required: true,type:date_time;
		date_time	last_login_time('2099-12-31T09:09:09'), verb: false, required: false,type:date_time;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: secUserList,type:user_domain;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		userAppList	sec_user(__no_group)--sec_user;
		loginHistoryList	sec_user(__no_group)--sec_user;
		wechatWorkappIdentifyList	sec_user(__no_group)--sec_user;
		wechatMiniappIdentifyList	sec_user(__no_group)--sec_user;
	}
} depth=1; isRoot = false

meta{name=user_app, features=ootb}
user_app{
	fields(10){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('审车平台|账户管理|接车公司|审车公司|维修公司|顾客'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: userAppList,type:sec_user;
		string	app_icon('users|bank|wechat|bar-chart|user|users'), verb: false, required: true,type:string;
		bool	full_access('true'), verb: false, required: true,type:bool;
		string	permission('MXWR|MXWR'), verb: false, required: true,type:string;
		string	object_type('CarInspectionPlatform|UserDomain|CarReceivingServiceCompany|CarInspectionServiceCompany|CarRepairingServiceCompany|CustomerInfo'), verb: false, required: true,type:string;
		string	object_id('CIP000001|UD000001|CRSC000001|CISC000001|CRSC000001|CI000001'), verb: false, required: true,type:string;
		string	location('/link/to/app'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		quickLinkList	app(__no_group)--app;
		listAccessList	app(__no_group)--app;
		objectAccessList	app(__no_group)--app;
	}
} depth=2; isRoot = false

meta{name=quick_link, features=ootb}
quick_link{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('列表'), verb: false, required: true,type:string;
		string	icon('facebook|google'), verb: false, required: true,type:string;
		string_image	image_path('y-200-200-red.jpg'), verb: false, required: true,type:string_image;
		string	link_target('列表'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: quickLinkList,type:user_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=list_access, features=ootb}
list_access{
	fields(10){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('列表'), verb: false, required: true,type:string;
		string	internal_name('levelOneCategoryList'), verb: false, required: true,type:string;
		bool	read_permission('true'), verb: false, required: true,type:bool;
		bool	create_permission('true'), verb: false, required: true,type:bool;
		bool	delete_permission('true'), verb: false, required: true,type:bool;
		bool	update_permission('true'), verb: false, required: true,type:bool;
		bool	execution_permission('true'), verb: false, required: true,type:bool;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: listAccessList,type:user_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=object_access, features=ootb}
object_access{
	fields(14){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('控制访问列表1'), verb: false, required: true,type:string;
		string	object_type('FranchiseeStoreCountryCenter|AccountSet'), verb: false, required: true,type:string;
		string	list1('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list2('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list3('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list4('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list5('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list6('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list7('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list8('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		string	list9('catalogList|levelOneCategoryList'), verb: false, required: true,type:string;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: objectAccessList,type:user_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=login_history, features=syslog}
login_history{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		date_time_create	login_time('createTime()'), verb: false, required: true,type:date_time_create;
		string	from_ip('192.168.1.1|192.168.1.2'), verb: false, required: true,type:string;
		string	description('登陆成功'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: loginHistoryList,type:sec_user;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=generic_form, features=internal,ootb}
generic_form{
	fields(4){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('登记输入单'), verb: false, required: true,type:string;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		formMessageList	form(__no_group)--form;
		formFieldMessageList	form(__no_group)--form;
		formFieldList	form(__no_group)--form;
		formActionList	form(__no_group)--form;
	}
} depth=0; isRoot = true

meta{name=form_message, features=internal,ootb}
form_message{
	fields(5){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('字段组合错误'), verb: false, required: true,type:string;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formMessageList,type:generic_form;
		string	level('success|info|warning|danger'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=form_field_message, features=internal,ootb}
form_field_message{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('输入错误'), verb: false, required: true,type:string;
		string	parameter_name('name'), verb: false, required: true,type:string;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldMessageList,type:generic_form;
		string	level('success|info|warning|danger'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=form_field, features=internal,ootb}
form_field{
	fields(18){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	label('姓名|年龄|出生地|国籍'), verb: false, required: true,type:string;
		string	locale_key('name|age|birth_place|country'), verb: false, required: true,type:string;
		string	parameter_name('name'), verb: false, required: true,type:string;
		string	type('text|longtext|date|date_time|money|url|image|password|number|switch|vcode'), verb: false, required: true,type:string;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldList,type:generic_form;
		string	placeholder('姓名就是你身份证上的名字'), verb: false, required: true,type:string;
		string	default_value('李一一'), verb: false, required: true,type:string;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true,type:string;
		string	field_group('基础信息|扩展信息'), verb: false, required: true,type:string;
		string	minimum_value('maybe any value'), verb: false, required: true,type:string;
		string	maximum_value('a value expression'), verb: false, required: true,type:string;
		bool	required('true|false'), verb: false, required: true,type:bool;
		bool	disabled('true|false'), verb: false, required: true,type:bool;
		bool	custom_rendering('false'), verb: false, required: true,type:bool;
		string	candidate_values('|||男,女|高,矮'), verb: false, required: false,type:string;
		string	suggest_values('|||男,女|高,矮'), verb: false, required: false,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=form_action, features=internal,ootb}
form_action{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	label('功能'), verb: false, required: true,type:string;
		string	locale_key('name'), verb: false, required: true,type:string;
		string	action_key('save|update|remove'), verb: false, required: true,type:string;
		string	level('default|warning|danger|primary'), verb: false, required: true,type:string;
		string	url('genericFormManager/name/name0002/name0003/'), verb: false, required: true,type:string;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formActionList,type:generic_form;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=candidate_container, features=internal,ootb}
candidate_container{
	fields(3){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('我只是一个容器'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		candidateElementList	container(__no_group)--container;
	}
} depth=0; isRoot = true

meta{name=candidate_element, features=internal,ootb}
candidate_element{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('搜索到的匹配字段'), verb: false, required: true,type:string;
		string	type('类型描述'), verb: false, required: true,type:string;
		string_image	image('1.jpg'), verb: false, required: true,type:string_image;
		candidate_container	container('$(object)'), verb: false, required: true, referenceBy: candidateElementList,type:candidate_container;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=wechat_workapp_identify}
wechat_workapp_identify{
	fields(7){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	corp_id('corporation123'), verb: false, required: true,type:string;
		string	user_id('user123'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatWorkappIdentifyList,type:sec_user;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=wechat_miniapp_identify}
wechat_miniapp_identify{
	fields(7){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	open_id('wechat_open_id_1234567890'), verb: false, required: true,type:string;
		string	app_id('wechat_miniapp_id_1234567890'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatMiniappIdentifyList,type:sec_user;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=tree_node}
tree_node{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	node_id('node000001'), verb: false, required: true,type:string;
		string	node_type('nodetype'), verb: false, required: true,type:string;
		int	left_value('1'), verb: false, required: true,type:int;
		int	right_value('10'), verb: false, required: true,type:int;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=0; isRoot = true

meta{name=mobile_app, features=ootb}
mobile_app{
	fields(3){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('移动端配置'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		pageList	mobile_app(__no_group)--mobile_app;
		pageTypeList	mobile_app(__no_group)--mobile_app;
	}
} depth=0; isRoot = true

meta{name=page}
page{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	page_title('首页'), verb: false, required: true,type:string;
		string	link_to_url('首页'), verb: false, required: true,type:string;
		page_type	page_type('$(object)'), verb: false, required: true, referenceBy: pageList,type:page_type;
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageList,type:mobile_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		slideList	page(__no_group)--page;
		uiActionList	page(__no_group)--page;
	}
} depth=2; isRoot = false

meta{name=page_type, features=status, identified_by=code}
page_type{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('首页|我的|Generic Page|Listof Page|功能大厅|普通'), verb: false, required: true,type:string;
		string	code('home|me|generic-page|listof-page|service-center|simple'), verb: false, required: true,type:string;
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageTypeList,type:mobile_app;
		bool	footer_tab('true|false'), verb: false, required: true,type:bool;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		pageList	page_type(__no_group)--page_type;
	}
} depth=1; isRoot = false

meta{name=slide}
slide{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string	name('首页Focus的内容'), verb: false, required: true,type:string;
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string_image	video_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string	link_to_url('|/section/article/'), verb: false, required: false,type:string;
		page	page('$(object)'), verb: false, required: true, referenceBy: slideList,type:page;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=ui_action}
ui_action{
	fields(10){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	code('submit|share|view|more'), verb: false, required: true,type:string;
		string	icon('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	title('提交|分享|查看|更多'), verb: false, required: true,type:string;
		string	brief('Submit|Share|View|View More'), verb: false, required: true,type:string;
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string	link_to_url('/section/article/'), verb: false, required: true,type:string;
		string_longtext	extra_data('text()'), verb: false, required: true,type:string_longtext;
		page	page('$(object)'), verb: false, required: true, referenceBy: uiActionList,type:page;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=section}
section{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('文章|作品'), verb: false, required: true,type:string;
		string	brief('Article|Artwork'), verb: false, required: true,type:string;
		string	icon('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	view_group('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	link_to_url('/section/article/'), verb: false, required: true,type:string;
		string	page('${page}'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=0; isRoot = true

meta{bind_with_cr_type=REGISTER|START_EXAM|ANSWER, name=registration, features=event}
registration{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	nick_name('豆豆鬼'), verb: false, required: true,type:string;
		string_image	avatar('share.jpg'), verb: false, required: true,type:string_image;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: registrationList,type:change_request;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: registrationList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=START_EXAM, name=start_exam, vg4user=home/首页动作}
start_exam{
	fields(4){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	nick_name('豆豆鬼参与考试'), verb: false, required: true,type:string;
		exam_user	user('$(object)'), verb: false, required: true, referenceBy: startExamList,type:exam_user;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{bind_with_cr_type=ANSWER, name=answer_question, features=event, vg4user=home/题目相关}
answer_question{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	nick_name('豆豆鬼参与考试'), verb: false, required: true,type:string;
		exam_user	user('$(object)'), verb: false, required: true, referenceBy: answerQuestionList,type:exam_user;
		user_answer	user_answer('$(object)'), verb: false, required: true, referenceBy: answerQuestionList,type:user_answer;
		string	answer('A|B|C'), verb: false, required: true,type:string;
		string_image	big_answer('image.jpg'), verb: false, required: true,type:string_image;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: answerQuestionList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=4; isRoot = false

meta{name=exam_status, identified_by=code, features=status}
exam_status{
	fields(5){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('考试中|考试完成'), verb: false, required: true,type:string;
		string	code('STARTED|COMPLETED'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: examStatusList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		examList	status(__no_group)--status;
	}
} depth=1; isRoot = false

meta{name=question}
question{
	fields(11){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	topic('区块链是什么技术，下面最接近的回答是什么'), verb: false, required: true,type:string;
		string	level('低|中|高'), verb: false, required: true,type:string;
		string	option_a('网络技术'), verb: false, required: true,type:string;
		string	option_b('电子技术'), verb: false, required: true,type:string;
		string	option_c('机械技术'), verb: false, required: true,type:string;
		string	option_d('太空技术'), verb: false, required: true,type:string;
		string	option_e('建筑技术'), verb: false, required: true,type:string;
		string	right_answer('A|B|C|D|E'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: questionList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		answerList	question(__no_group)--question;
		userAnswerList	question(__no_group)--question;
		faultAnswerList	question(__no_group)--question;
	}
} depth=1; isRoot = false

meta{name=exam_ranking}
exam_ranking{
	fields(5){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('张喜来**'), verb: false, required: true,type:string;
		string_image	avatar('wechat.jpg'), verb: false, required: true,type:string_image;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: examRankingList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=answer}
answer{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('网络技术'), verb: false, required: true,type:string;
		string	comment('区块链是基于现有互联网的技术'), verb: false, required: true,type:string;
		question	question('$(object)'), verb: false, required: true, referenceBy: answerList,type:question;
		string_document	relate_document('a.pdf'), verb: false, required: true,type:string_document;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=exam_user}
exam_user{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('张三|李四|王五'), verb: false, required: true,type:string;
		string_image	avatar('wechat.jpg'), verb: false, required: true,type:string_image;
		string_china_mobile_phone	mobile_phone('13880964614'), verb: false, required: true,type:string_china_mobile_phone;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		string	user_type('公务员|学生|自由职业者|农民'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: examUserList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(6){
		startExamList	user(首页动作)--user;
		answerQuestionList	user(题目相关)--user;
		socialProductList	user(个人推荐)--user;
		wechatLoginInfoList	exam_user(个人相关)--exam_user;
		examList	user(首页动作)--user;
		faultAnswerList	user(题目相关)--user;
	}
} depth=1; isRoot = false

meta{name=social_product, vg4user=home/个人推荐}
social_product{
	fields(10){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	product_name('张三|李四|王五'), verb: false, required: true,type:string;
		string	description('产品基本描述'), verb: false, required: true,type:string;
		string	brand('可口可乐|宝洁|爱马仕'), verb: false, required: true,type:string;
		string_image	hero_image('a.jpg'), verb: false, required: true,type:string_image;
		images	images('images()'), verb: false, required: true,type:images;
		money	list_price('$1.2|$5.4|$100.0'), verb: false, required: true,type:money;
		money	sale_price('$0.99|$3.99'), verb: false, required: true,type:money;
		exam_user	user('$(object)'), verb: false, required: true, referenceBy: socialProductList,type:exam_user;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{vg4exam_user=me/个人相关, name=wechat_login_info, identified_by=openid_id}
wechat_login_info{
	fields(7){
		string	id('ABCD'), verb: false, required: true,type:string;
		exam_user	exam_user('$(object)'), verb: false, required: true, referenceBy: wechatLoginInfoList,type:exam_user;
		string	app_id('user123'), verb: false, required: true,type:string;
		string	open_id('user123'), verb: false, required: true,type:string;
		string	session_key('session123'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=exam, vg4user=home/首页动作}
exam{
	fields(9){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('区块链技术考试'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		exam_status	status('$(object)'), verb: false, required: true, referenceBy: examList,type:exam_status;
		images	my_images('images()'), verb: false, required: true,type:images;
		images	photos('images()'), verb: false, required: true,type:images;
		exam_user	user('$(object)'), verb: false, required: true, referenceBy: examList,type:exam_user;
		int	score('100'), verb: false, required: true,type:int;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		userAnswerList	exam(__no_group)--exam;
	}
} depth=2; isRoot = false

meta{name=user_answer}
user_answer{
	fields(6){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	topic('区块链是什么技术，下面最接近的回答是什么'), verb: false, required: true,type:string;
		string	user_select('A'), verb: false, required: true,type:string;
		question	question('$(object)'), verb: false, required: true, referenceBy: userAnswerList,type:question;
		exam	exam('$(object)'), verb: false, required: true, referenceBy: userAnswerList,type:exam;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		answerQuestionList	user_answer(__no_group)--user_answer;
	}
} depth=3; isRoot = false

meta{name=fault_answer, vg4user=me/题目相关}
fault_answer{
	fields(9){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	topic('区块链是什么技术，下面最接近的回答是什么'), verb: false, required: true,type:string;
		string	your_answer('A'), verb: false, required: true,type:string;
		string	right_answer('ABCD'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		exam_user	user('$(object)'), verb: false, required: true, referenceBy: faultAnswerList,type:exam_user;
		question	question('$(object)'), verb: false, required: true, referenceBy: faultAnswerList,type:question;
		int	fault_times('999'), verb: false, required: true,type:int;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=school}
school{
	fields(5){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('电子科技大学|四川大学|西南交通大学|四川农业大学|西南财经大学'), verb: false, required: true,type:string;
		string	type('工科|综合|工科|农业|财经'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: schoolList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		professorListAsWorkingSchool	working_school(__no_group)--working_school;
		professorListAsGraduateSchool	graduate_school(__no_group)--working_school;
		courseMajorListAsOwnerSchool	owner_school(__no_group)--owner_school;
		courseMajorListAsQualificationSchool	qualification_school(__no_group)--owner_school;
	}
} depth=1; isRoot = false

meta{name=job_title, features=tree}
job_title{
	fields(4){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('初级职称|助教|讲师|中级职称|副教授|教授|高级职称|院士|校董'), verb: false, required: true,type:string;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: jobTitleList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		professorList	job_title(__no_group)--job_title;
	}
} depth=1; isRoot = false

meta{name=professor, group_by=job_title,gender}
professor{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('卿希泰|项楚|曹顺庆|罗志田|钟本和|詹石窗|霍巍|曾忠东|陈永正|邓常春|邓国营|邓菊秋|邓翔杜|江龚勤|林龚秀|国顾婧|韩立|达黄勤'), verb: false, required: true,type:string;
		string_gender	gender('男|女'), verb: false, required: true,type:string_gender;
		string	inauguratio_time('2019年|2003年|1988年'), verb: false, required: true,type:string;
		school	working_school('$(object)'), verb: false, required: true, referenceBy: professorListAsWorkingSchool,type:school;
		school	graduate_school('$(object)'), verb: false, required: true, referenceBy: professorListAsGraduateSchool,type:school;
		job_title	job_title('$(object)'), verb: false, required: true, referenceBy: professorList,type:job_title;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		courseMajorListAsTeacher	teacher(__no_group)--teacher;
		courseMajorListAsCouncelor	councelor(__no_group)--teacher;
	}
} depth=2; isRoot = false

meta{name=course_major}
course_major{
	fields(7){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	title('经济学|法学|文学|历史学|工程力学|机械设计制造及其自动化|材料成型及控制工程|工业设计|过程装备与控制工程|测控技术与仪器|金属材料工程|无机非金属材料工程|高分子材料与工程|电气工程及其自动化'), verb: false, required: true,type:string;
		school	owner_school('$(object)'), verb: false, required: true, referenceBy: courseMajorListAsOwnerSchool,type:school;
		school	qualification_school('$(object)'), verb: false, required: true, referenceBy: courseMajorListAsQualificationSchool,type:school;
		professor	teacher('$(object)'), verb: false, required: true, referenceBy: courseMajorListAsTeacher,type:professor;
		professor	councelor('$(object)'), verb: false, required: true, referenceBy: courseMajorListAsCouncelor,type:professor;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=change_request_type, identified_by=code, features=cr_type}
change_request_type{
	fields(9){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('数据类型展示|项目经理日志|施工日志'), verb: false, required: true,type:string;
		string	code('SHOW_ALL_TYPE|PROJECT_MANAGER_DAILY_REPORT|TASK_DAILY_REPORT'), verb: false, required: true,type:string;
		string	icon('table|tachometer|calendar'), verb: false, required: true,type:string;
		int	display_order('1|2|3|4|5|6'), verb: false, required: true,type:int;
		string_longtext	bind_types('text()'), verb: false, required: true,type:string_longtext;
		string_longtext	step_configuration('text()'), verb: false, required: true,type:string_longtext;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestTypeList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		changeRequestList	request_type(__no_group)--request_type;
	}
} depth=1; isRoot = false

meta{name=change_request, features=change_request}
change_request{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	name('注册|开始考试|答题'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		string_client_ip	remote_ip('remoteIp()'), verb: false, required: true,type:string_client_ip;
		change_request_type	request_type('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:change_request_type;
		bool	commited('false'), verb: false, required: true,type:bool;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:platform;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(7){
		registrationList	change_request(__no_group)--change_request;
		answerQuestionList	change_request(__no_group)--change_request;
		eventTaskReportBasicInfoList	change_request(__no_group)--change_request;
		eventCommonReportList	change_request(__no_group)--change_request;
		eventReportCheckItemList	change_request(__no_group)--change_request;
		eventShowAllTypeList	change_request(__no_group)--change_request;
		eventProjectManagerReportBasicInfoList	change_request(__no_group)--change_request;
	}
} depth=2; isRoot = false

meta{bind_with_cr_type=TASK_DAILY_REPORT, name=event_task_report_basic_info, features=event}
event_task_report_basic_info{
	fields(12){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	task_id('task id|工程'), verb: false, required: true,type:string;
		string	task_name('墙面施工|水电改造|隔离层鼓包二次整改'), verb: false, required: true,type:string;
		string	subcontractor_name('四川闫明建筑公司|活力装修设计工作室'), verb: false, required: true,type:string;
		string	responsible_name('张黎明|李大力'), verb: false, required: true,type:string;
		double	temperature('17.66|25.01'), verb: false, required: true,type:double;
		string	weather_conditions('weather conditions|天气情况'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventTaskReportBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_MANAGER_DAILY_REPORT|TASK_DAILY_REPORT|TASK_DAILY_REPORT|TASK_DAILY_REPORT|TASK_DAILY_REPORT|TASK_DAILY_REPORT, name=event_common_report, features=event}
event_common_report{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string_longtext	content('text()'), verb: false, required: false,type:string_longtext;
		images	images('images()'), verb: false, required: false,type:images;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventCommonReportList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_MANAGER_DAILY_REPORT, name=event_report_check_item, features=event}
event_report_check_item{
	fields(8){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	check_result('check result|检查结果'), verb: false, required: true,type:string;
		string	process_result('process result|处理结果'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventReportCheckItemList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=SHOW_ALL_TYPE, name=event_show_all_type, features=event}
event_show_all_type{
	fields(22){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	field_text('field_text|短文本'), verb: false, required: true,type:string;
		string	field_id_number('field_id_number|身份证'), verb: false, required: true,type:string;
		string_email	field_email('someone@company.com'), verb: false, required: true,type:string_email;
		string_url	field_url('https://www/baidu.com'), verb: false, required: true,type:string_url;
		string	field_one_of('field_one_of|单选'), verb: false, required: true,type:string;
		string	field_some_of('field_some_of|多选'), verb: false, required: true,type:string;
		string_longtext	field_longtext('text()'), verb: false, required: true,type:string_longtext;
		bool	field_boolean('true|false'), verb: false, required: true,type:bool;
		images	field_images('images()'), verb: false, required: true,type:images;
		string_image	field_image('fieldImage.jpg'), verb: false, required: true,type:string_image;
		date	field_date('2099-12-31'), verb: false, required: true,type:date;
		date_time	field_datetime('2099-12-31T23:59:59'), verb: false, required: true,type:date_time;
		time	field_time('23:59:00'), verb: false, required: true,type:time;
		int	field_integer('12345678'), verb: false, required: true,type:int;
		double	field_decimal('12345678.000'), verb: false, required: true,type:double;
		money	field_money('$12345678.000'), verb: false, required: true,type:money;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventShowAllTypeList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{bind_with_cr_type=PROJECT_MANAGER_DAILY_REPORT, name=event_project_manager_report_basic_info, features=event}
event_project_manager_report_basic_info{
	fields(10){
		string	id('ABCD'), verb: false, required: true,type:string;
		string	project_id('project id|项目'), verb: false, required: true,type:string;
		string	project_name('火车北站候车室装修工程|三峡大坝装修工程'), verb: false, required: true,type:string;
		double	temperature('17.66|25.01'), verb: false, required: true,type:double;
		string	weather_conditions('weather conditions|天气情况'), verb: false, required: true,type:string;
		string	field_group('cr_type/step_name/event_name/event_index'), verb: false, required: true,type:string;
		string	event_initiator_type('SecUser|Merchant'), verb: false, required: true,type:string;
		string	event_initiator_id('SU000001|M0000001'), verb: false, required: true,type:string;
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventProjectManagerReportBasicInfoList,type:change_request;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false




=================================End Report=================================
