package cla.edg.project.jingou;

import cla.edg.pageflow.BasePageFlowDescriptionScript;
import cla.edg.pageflow.BasePageFlowScript;

public class WxappService extends BasePageFlowDescriptionScript {

	private static final BasePageFlowScript SCRIPT = $("wxapp service").need_login()
		/** 首页及登录 */
		.request("home page")
			.comments("打开首页").has_footprint()
			.when("no mobile").comments("用户还没有手机号信息")
				.got_page("business logon")
					.comments("绑定用户(user)和商户(merchant)")
					.may_request("query wechat mobile")
					.may_request("login with mobile and vcode")
			.when("has mobile").comments("用户有手机号信息,该手机号对应的商家可以被识别.")
				.got_page("user dashboard")
					.comments("被识别的用户的控制中心页面")
					.may_request("start to change warehouse")
					.may_request("view orders history")
					.may_request("view orders need handled")
					.may_request("view finance info")
					.may_request("open stock in form")
					.may_request("open stock out form")
					.may_request("scan to weight")
		.request("query wechat mobile").with_string("wechat encrypted data").with_string("wechat iv")
			.comments("解密微信的敏感信息,获得手机号").no_login().no_footprint()
			.got_page("ajax response")
		.request("login with mobile and vcode").with_string("mobile").with_string("verify code")
			.comments("手动输入手机号和验证码登录")
			.got_page("user dashboard")
		/** 辅助功能 */
		.request("start to change warehouse").with_string("warehouse id")
			.comments("打开切换打包厂的列表页面")
			.query("merchant_warehouse").which("mine").no_pagination().with_string("user id")
				.comments("查询用户名下的所有打包厂")
			.got_page("user warehouse list")
				.comments("用户名下的所有打包厂")
				.may_request("select warehouse for working").comments("选择切换打包厂/回收站")
		/** 订单相关 */
		.request("view orders history").with_string("warehouse id").with_string("filter")
			.comments("查看当前用户的所有订单")
			.rule_comments("如果用户没有warehouse, 查看所有的订单")
			.rule_comments("如果用户有warehouse, 查看当前warehouse下的所有订单")
			.query("main_order").which("all by user and warehouse").pagination().with_string("user id").with_string("warehouse id")
				.comments("根据打包厂ID查询所有的订单")
				.rule_comments("这个查询的前提条件是用户有打包厂厂长的角色")
			.query("main_order").which("all by user").pagination().with_string("user id")
				.comments("根据用户ID查询所有的订单")
				.rule_comments("这个查询的前提条件是用户没有厂长的角色, 只可能是司机角色")
			.got_page("order list")
				.comments("订单/工作单的列表页").list_of("main_order")
				.may_request("view order detail")
		.request("view next page orders history").with_string("warehouse id").with_string("filter").with_string("last record id")
			.comments("查看当前用户的所有订单 翻页")
			.got_page("order list")
			
		.request("view orders need handled").with_string("warehouse id")
			.comments("查看当前用户需要去处理,例如核实重量 的所有订单")
			.query("main_order").which("need handled").pagination().with_string("user id").with_string("warehouse id")
				.comments("查询需要被当前用户处理的订单")
				.rule_comments("用户有打包厂厂长的角色, 则需要根据warehouse id过滤")
				.rule_comments("用户只有司机的角色, 则不用warehouse id过滤")
			.got_page("need handled order list")
				.comments("订单/工作单的列表页").list_of("main_order_big")
				.may_request("view order detail")
		.request("view orders need handled").with_string("warehouse id").with_string("last record id")
			.comments("查看当前用户需要去处理,例如核实重量 的所有订单: 翻页")
			.got_page("need handled order list")
		.request("view finance info").with_string("warehouse id")
			.comments("查看财务信息")
			.got_page("simple popup")
		/** 入库 */
		.request("open stock in form").with_string("warehouse id")
			.comments("填写入库记录")
			.got_page("stock in form")
				.comments("入库记录表单")
				.may_request("preview stock in form")
		.request("preview stock in form").with_form("stock_in_application")
			.comments("填写入库记录")
			.got_page("stock in form")
				.comments("入库记录表单")
				.may_request("submit stock in form")
		.request("submit stock in form").with_string("access token")
			.comments("提交入库记录")
			.got_page("simple popup")
		/** 出库 */
		.request("open stock out form").with_string("warehouse id")
			.comments("填写出库记录")
			.got_page("stock out form")
				.comments("出库记录表单")
				.may_request("preview stock out form")
		.request("preview stock out form").with_form("stock_out_application")
			.comments("填写出库记录")
			.got_page("stock out form")
				.comments("出库记录表单")
				.may_request("submit stock in form")
		.request("submit stock out form").with_string("access token")
			.comments("提交出库记录")
			.got_page("simple popup")
		/** 扫码称重 */
		.request("scan to weight")
			.comments("打开扫码称重页面")
			.got_page("scale scanning")
				.comments("扫地磅的二维码")
				.may_request("scale scanned")
		.request("scale scanned").with_string("scale id")
			.comments("提交地磅的二维码扫描结果")
			.when("has order need weigh").comments("有需要称重操作的订单")
				.got_page("order select")
					.comments("选择已有的订单,或者新建订单")
					.may_request("fill weight to order").comments("当用户选择了一个已有订单的时候")
					.may_request("create new order").comments("当用户选择 新建 操作时")
			.when("has no order need weigh").comments("没有任何需要称重的订单")
				.got_page("seller selection")
		.request("create new order").with_string("scale id").with_float("weight")
			.comments("使用地磅的称重数据创建新订单")
			.got_page("start new order")
				.comments("选择货物的卖家")
				.may_request("query warehouse by mobile")
		.request("query warehouse by mobile").with_string("scale id").with_float("weight").with_string("mobile").variable()
			.comments("用手机号过滤, 选择卖家")
			.query("merchant_warehouse").which("match mobile").no_pagination().with_string("mobile")
				.comments("查询某个手机号下关联的所有warehouse")
			.got_page("seller warehouse selection")
				.comments("卖家选择页面")
				.may_request("fill seller warehouse to order")
				.may_request("new seller warehouse to order")
		.request("new seller warehouse to order").with_string("scale id").with_float("weight").with_string("mobile")
			.comments("用电话号码创建一个新的warehouse,并用称重信息创建订单.")
			.got_page("order detail")
		.request("view order detail").with_string("order id").with_string("warehouse id")
			.comments("订单详情")
			.got_page("order detail")
		// TODO: 详情页上的各种request
		.request("select warehouse for working")
			.comments("选择切换打包厂/回收站")
			;
		
//			

	@Override
	public BasePageFlowScript getScript() {
		return SCRIPT;
	}

}
